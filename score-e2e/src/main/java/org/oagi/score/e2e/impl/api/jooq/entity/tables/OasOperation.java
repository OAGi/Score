/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.e2e.impl.api.jooq.entity.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.InverseForeignKey;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.oagi.score.e2e.impl.api.jooq.entity.Keys;
import org.oagi.score.e2e.impl.api.jooq.entity.Oagi;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.AppUser.AppUserPath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.OasParameterLink.OasParameterLinkPath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.OasRequest.OasRequestPath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.OasResource.OasResourcePath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.OasResourceTag.OasResourceTagPath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.OasResponse.OasResponsePath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.OasTag.OasTagPath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.records.OasOperationRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OasOperation extends TableImpl<OasOperationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>oagi.oas_operation</code>
     */
    public static final OasOperation OAS_OPERATION = new OasOperation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OasOperationRecord> getRecordType() {
        return OasOperationRecord.class;
    }

    /**
     * The column <code>oagi.oas_operation.oas_operation_id</code>. The primary
     * key of the record.
     */
    public final TableField<OasOperationRecord, ULong> OAS_OPERATION_ID = createField(DSL.name("oas_operation_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "The primary key of the record.");

    /**
     * The column <code>oagi.oas_operation.oas_resource_id</code>. A reference
     * of the resource record.
     */
    public final TableField<OasOperationRecord, ULong> OAS_RESOURCE_ID = createField(DSL.name("oas_resource_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "A reference of the resource record.");

    /**
     * The column <code>oagi.oas_operation.verb</code>. verbs, list of values
     * droplist: get, put , post, delete, options, head, patch, trace;
     */
    public final TableField<OasOperationRecord, String> VERB = createField(DSL.name("verb"), SQLDataType.VARCHAR(30).nullable(false), this, "verbs, list of values droplist: get, put , post, delete, options, head, patch, trace;");

    /**
     * The column <code>oagi.oas_operation.operation_id</code>. Unique string
     * used to identify the operation. The id MUST be unique among all
     * operations described in the API. The operationId value is case-sensitive.
     * Tools and libraries MAY use the operationId to uniquely identify an
     * operation, therefore, it is RECOMMENDED to follow common programming
     * naming conventions.
     */
    public final TableField<OasOperationRecord, String> OPERATION_ID = createField(DSL.name("operation_id"), SQLDataType.VARCHAR(1024).nullable(false), this, "Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is case-sensitive. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.");

    /**
     * The column <code>oagi.oas_operation.summary</code>. A short summary of
     * what the operation does.
     */
    public final TableField<OasOperationRecord, String> SUMMARY = createField(DSL.name("summary"), SQLDataType.CLOB.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.CLOB)), this, "A short summary of what the operation does.");

    /**
     * The column <code>oagi.oas_operation.description</code>. A verbose
     * explanation of the operation behavior. CommonMark syntax MAY be used for
     * rich text representation.
     */
    public final TableField<OasOperationRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.CLOB.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.CLOB)), this, "A verbose explanation of the operation behavior. CommonMark syntax MAY be used for rich text representation.");

    /**
     * The column <code>oagi.oas_operation.deprecated</code>. Declares this
     * operation to be deprecated. Consumers SHOULD refrain from usage of the
     * declared operation. Default value is false.
     */
    public final TableField<OasOperationRecord, Byte> DEPRECATED = createField(DSL.name("deprecated"), SQLDataType.TINYINT.defaultValue(DSL.field(DSL.raw("0"), SQLDataType.TINYINT)), this, "Declares this operation to be deprecated. Consumers SHOULD refrain from usage of the declared operation. Default value is false.");

    /**
     * The column <code>oagi.oas_operation.created_by</code>. The user who
     * creates the record.
     */
    public final TableField<OasOperationRecord, ULong> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The user who creates the record.");

    /**
     * The column <code>oagi.oas_operation.last_updated_by</code>. The user who
     * last updates the record.
     */
    public final TableField<OasOperationRecord, ULong> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The user who last updates the record.");

    /**
     * The column <code>oagi.oas_operation.creation_timestamp</code>. The
     * timestamp when the record is created.
     */
    public final TableField<OasOperationRecord, LocalDateTime> CREATION_TIMESTAMP = createField(DSL.name("creation_timestamp"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "The timestamp when the record is created.");

    /**
     * The column <code>oagi.oas_operation.last_update_timestamp</code>. The
     * timestamp when the record is last updated.
     */
    public final TableField<OasOperationRecord, LocalDateTime> LAST_UPDATE_TIMESTAMP = createField(DSL.name("last_update_timestamp"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "The timestamp when the record is last updated.");

    private OasOperation(Name alias, Table<OasOperationRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private OasOperation(Name alias, Table<OasOperationRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>oagi.oas_operation</code> table reference
     */
    public OasOperation(String alias) {
        this(DSL.name(alias), OAS_OPERATION);
    }

    /**
     * Create an aliased <code>oagi.oas_operation</code> table reference
     */
    public OasOperation(Name alias) {
        this(alias, OAS_OPERATION);
    }

    /**
     * Create a <code>oagi.oas_operation</code> table reference
     */
    public OasOperation() {
        this(DSL.name("oas_operation"), null);
    }

    public <O extends Record> OasOperation(Table<O> path, ForeignKey<O, OasOperationRecord> childPath, InverseForeignKey<O, OasOperationRecord> parentPath) {
        super(path, childPath, parentPath, OAS_OPERATION);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class OasOperationPath extends OasOperation implements Path<OasOperationRecord> {

        private static final long serialVersionUID = 1L;
        public <O extends Record> OasOperationPath(Table<O> path, ForeignKey<O, OasOperationRecord> childPath, InverseForeignKey<O, OasOperationRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private OasOperationPath(Name alias, Table<OasOperationRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public OasOperationPath as(String alias) {
            return new OasOperationPath(DSL.name(alias), this);
        }

        @Override
        public OasOperationPath as(Name alias) {
            return new OasOperationPath(alias, this);
        }

        @Override
        public OasOperationPath as(Table<?> alias) {
            return new OasOperationPath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Oagi.OAGI;
    }

    @Override
    public Identity<OasOperationRecord, ULong> getIdentity() {
        return (Identity<OasOperationRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<OasOperationRecord> getPrimaryKey() {
        return Keys.KEY_OAS_OPERATION_PRIMARY;
    }

    @Override
    public List<ForeignKey<OasOperationRecord, ?>> getReferences() {
        return Arrays.asList(Keys.OAS_OPERATION_OAS_RESOURCE_ID_FK, Keys.OAS_OPERATION_CREATED_BY_FK, Keys.OAS_OPERATION_LAST_UPDATED_BY_FK);
    }

    private transient OasResourcePath _oasResource;

    /**
     * Get the implicit join path to the <code>oagi.oas_resource</code> table.
     */
    public OasResourcePath oasResource() {
        if (_oasResource == null)
            _oasResource = new OasResourcePath(this, Keys.OAS_OPERATION_OAS_RESOURCE_ID_FK, null);

        return _oasResource;
    }

    private transient AppUserPath _oasOperationCreatedByFk;

    /**
     * Get the implicit join path to the <code>oagi.app_user</code> table, via
     * the <code>oas_operation_created_by_fk</code> key.
     */
    public AppUserPath oasOperationCreatedByFk() {
        if (_oasOperationCreatedByFk == null)
            _oasOperationCreatedByFk = new AppUserPath(this, Keys.OAS_OPERATION_CREATED_BY_FK, null);

        return _oasOperationCreatedByFk;
    }

    private transient AppUserPath _oasOperationLastUpdatedByFk;

    /**
     * Get the implicit join path to the <code>oagi.app_user</code> table, via
     * the <code>oas_operation_last_updated_by_fk</code> key.
     */
    public AppUserPath oasOperationLastUpdatedByFk() {
        if (_oasOperationLastUpdatedByFk == null)
            _oasOperationLastUpdatedByFk = new AppUserPath(this, Keys.OAS_OPERATION_LAST_UPDATED_BY_FK, null);

        return _oasOperationLastUpdatedByFk;
    }

    private transient OasParameterLinkPath _oasParameterLink;

    /**
     * Get the implicit to-many join path to the
     * <code>oagi.oas_parameter_link</code> table
     */
    public OasParameterLinkPath oasParameterLink() {
        if (_oasParameterLink == null)
            _oasParameterLink = new OasParameterLinkPath(this, null, Keys.OAS_PARAMETER_LINK_OAS_OPERATION_ID_FK.getInverseKey());

        return _oasParameterLink;
    }

    private transient OasRequestPath _oasRequest;

    /**
     * Get the implicit to-many join path to the <code>oagi.oas_request</code>
     * table
     */
    public OasRequestPath oasRequest() {
        if (_oasRequest == null)
            _oasRequest = new OasRequestPath(this, null, Keys.OAS_REQUEST_OAS_OPERATION_ID_FK.getInverseKey());

        return _oasRequest;
    }

    private transient OasResourceTagPath _oasResourceTag;

    /**
     * Get the implicit to-many join path to the
     * <code>oagi.oas_resource_tag</code> table
     */
    public OasResourceTagPath oasResourceTag() {
        if (_oasResourceTag == null)
            _oasResourceTag = new OasResourceTagPath(this, null, Keys.OAS_RESOURCE_TAG_OAS_OPERATION_ID_FK.getInverseKey());

        return _oasResourceTag;
    }

    private transient OasResponsePath _oasResponse;

    /**
     * Get the implicit to-many join path to the <code>oagi.oas_response</code>
     * table
     */
    public OasResponsePath oasResponse() {
        if (_oasResponse == null)
            _oasResponse = new OasResponsePath(this, null, Keys.OAS_RESPONSE_OAS_OPERATION_ID_FK.getInverseKey());

        return _oasResponse;
    }

    /**
     * Get the implicit many-to-many join path to the <code>oagi.oas_tag</code>
     * table
     */
    public OasTagPath oasTag() {
        return oasResourceTag().oasTag();
    }

    @Override
    public OasOperation as(String alias) {
        return new OasOperation(DSL.name(alias), this);
    }

    @Override
    public OasOperation as(Name alias) {
        return new OasOperation(alias, this);
    }

    @Override
    public OasOperation as(Table<?> alias) {
        return new OasOperation(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public OasOperation rename(String name) {
        return new OasOperation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OasOperation rename(Name name) {
        return new OasOperation(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public OasOperation rename(Table<?> name) {
        return new OasOperation(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasOperation where(Condition condition) {
        return new OasOperation(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasOperation where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasOperation where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasOperation where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OasOperation where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OasOperation where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OasOperation where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OasOperation where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasOperation whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasOperation whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
