/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.e2e.impl.api.jooq.entity.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.BieUsageRule;


/**
 * This is an intersection table. Per CCTS, a usage rule may be reused. This
 * table allows m-m relationships between the usage rule and all kinds of BIEs.
 * In a particular record, either only one of the TARGET_ABIE_ID,
 * TARGET_ASBIE_ID, TARGET_ASBIEP_ID, TARGET_BBIE_ID, or TARGET_BBIEP_ID.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BieUsageRuleRecord extends UpdatableRecordImpl<BieUsageRuleRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.bie_usage_rule.bie_usage_rule_id</code>. Primary
     * key of the table.
     */
    public void setBieUsageRuleId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.bie_usage_rule.bie_usage_rule_id</code>. Primary
     * key of the table.
     */
    public ULong getBieUsageRuleId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>oagi.bie_usage_rule.assigned_usage_rule_id</code>.
     * Foreign key to the USAGE_RULE table indicating the usage rule assigned to
     * a BIE.
     */
    public void setAssignedUsageRuleId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.bie_usage_rule.assigned_usage_rule_id</code>.
     * Foreign key to the USAGE_RULE table indicating the usage rule assigned to
     * a BIE.
     */
    public ULong getAssignedUsageRuleId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>oagi.bie_usage_rule.target_abie_id</code>. Foreign key
     * to the ABIE table indicating the ABIE, to which the usage rule is
     * applied.
     */
    public void setTargetAbieId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.bie_usage_rule.target_abie_id</code>. Foreign key
     * to the ABIE table indicating the ABIE, to which the usage rule is
     * applied.
     */
    public ULong getTargetAbieId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>oagi.bie_usage_rule.target_asbie_id</code>. Foreign key
     * to the ASBIE table indicating the ASBIE, to which the usage rule is
     * applied.
     */
    public void setTargetAsbieId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.bie_usage_rule.target_asbie_id</code>. Foreign key
     * to the ASBIE table indicating the ASBIE, to which the usage rule is
     * applied.
     */
    public ULong getTargetAsbieId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>oagi.bie_usage_rule.target_asbiep_id</code>. Foreign key
     * to the ASBIEP table indicating the ASBIEP, to which the usage rule is
     * applied.
     */
    public void setTargetAsbiepId(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.bie_usage_rule.target_asbiep_id</code>. Foreign key
     * to the ASBIEP table indicating the ASBIEP, to which the usage rule is
     * applied.
     */
    public ULong getTargetAsbiepId() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>oagi.bie_usage_rule.target_bbie_id</code>. Foreign key
     * to the BBIE table indicating the BBIE, to which the usage rule is
     * applied.
     */
    public void setTargetBbieId(ULong value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.bie_usage_rule.target_bbie_id</code>. Foreign key
     * to the BBIE table indicating the BBIE, to which the usage rule is
     * applied.
     */
    public ULong getTargetBbieId() {
        return (ULong) get(5);
    }

    /**
     * Setter for <code>oagi.bie_usage_rule.target_bbiep_id</code>. Foreign key
     * to the BBIEP table indicating the ABIEP, to which the usage rule is
     * applied.
     */
    public void setTargetBbiepId(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>oagi.bie_usage_rule.target_bbiep_id</code>. Foreign key
     * to the BBIEP table indicating the ABIEP, to which the usage rule is
     * applied.
     */
    public ULong getTargetBbiepId() {
        return (ULong) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BieUsageRuleRecord
     */
    public BieUsageRuleRecord() {
        super(BieUsageRule.BIE_USAGE_RULE);
    }

    /**
     * Create a detached, initialised BieUsageRuleRecord
     */
    public BieUsageRuleRecord(ULong bieUsageRuleId, ULong assignedUsageRuleId, ULong targetAbieId, ULong targetAsbieId, ULong targetAsbiepId, ULong targetBbieId, ULong targetBbiepId) {
        super(BieUsageRule.BIE_USAGE_RULE);

        setBieUsageRuleId(bieUsageRuleId);
        setAssignedUsageRuleId(assignedUsageRuleId);
        setTargetAbieId(targetAbieId);
        setTargetAsbieId(targetAsbieId);
        setTargetAsbiepId(targetAsbiepId);
        setTargetBbieId(targetBbieId);
        setTargetBbiepId(targetBbiepId);
        resetTouchedOnNotNull();
    }
}
