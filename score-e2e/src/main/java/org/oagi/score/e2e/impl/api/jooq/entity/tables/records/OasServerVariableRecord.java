/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.e2e.impl.api.jooq.entity.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.OasServerVariable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OasServerVariableRecord extends UpdatableRecordImpl<OasServerVariableRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.oas_server_variable.oas_server_variable_id</code>.
     * The primary key of the record.
     */
    public void setOasServerVariableId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.oas_server_variable.oas_server_variable_id</code>.
     * The primary key of the record.
     */
    public ULong getOasServerVariableId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>oagi.oas_server_variable.oas_server_id</code>. A
     * reference of the server record.
     */
    public void setOasServerId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.oas_server_variable.oas_server_id</code>. A
     * reference of the server record.
     */
    public ULong getOasServerId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>oagi.oas_server_variable.name</code>. "port",
     * "username", "basePath" are the examples in the OpenAPI Specification.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.oas_server_variable.name</code>. "port",
     * "username", "basePath" are the examples in the OpenAPI Specification.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>oagi.oas_server_variable.description</code>. An optional
     * description for the server variable. CommonMark syntax MAY be used for
     * rich text representation.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.oas_server_variable.description</code>. An optional
     * description for the server variable. CommonMark syntax MAY be used for
     * rich text representation.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>oagi.oas_server_variable.default</code>. REQUIRED. The
     * default value to use for substitution, which SHALL be sent if an
     * alternate value is not supplied. Note this behavior is different than the
     * Schema Object's treatment of default values, because in those cases
     * parameter values are optional. If the enum is defined, the value SHOULD
     * exist in the enum's values.
     */
    public void setDefault(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.oas_server_variable.default</code>. REQUIRED. The
     * default value to use for substitution, which SHALL be sent if an
     * alternate value is not supplied. Note this behavior is different than the
     * Schema Object's treatment of default values, because in those cases
     * parameter values are optional. If the enum is defined, the value SHOULD
     * exist in the enum's values.
     */
    public String getDefault() {
        return (String) get(4);
    }

    /**
     * Setter for <code>oagi.oas_server_variable.enum</code>. An enumeration of
     * string values to be used if the substitution options are from a limited
     * set. The array SHOULD NOT be empty.
     */
    public void setEnum(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.oas_server_variable.enum</code>. An enumeration of
     * string values to be used if the substitution options are from a limited
     * set. The array SHOULD NOT be empty.
     */
    public String getEnum() {
        return (String) get(5);
    }

    /**
     * Setter for <code>oagi.oas_server_variable.created_by</code>. The user who
     * creates the record.
     */
    public void setCreatedBy(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>oagi.oas_server_variable.created_by</code>. The user who
     * creates the record.
     */
    public ULong getCreatedBy() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>oagi.oas_server_variable.last_updated_by</code>. The
     * user who last updates the record.
     */
    public void setLastUpdatedBy(ULong value) {
        set(7, value);
    }

    /**
     * Getter for <code>oagi.oas_server_variable.last_updated_by</code>. The
     * user who last updates the record.
     */
    public ULong getLastUpdatedBy() {
        return (ULong) get(7);
    }

    /**
     * Setter for <code>oagi.oas_server_variable.creation_timestamp</code>. The
     * timestamp when the record is created.
     */
    public void setCreationTimestamp(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>oagi.oas_server_variable.creation_timestamp</code>. The
     * timestamp when the record is created.
     */
    public LocalDateTime getCreationTimestamp() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>oagi.oas_server_variable.last_update_timestamp</code>.
     * The timestamp when the record is last updated.
     */
    public void setLastUpdateTimestamp(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>oagi.oas_server_variable.last_update_timestamp</code>.
     * The timestamp when the record is last updated.
     */
    public LocalDateTime getLastUpdateTimestamp() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OasServerVariableRecord
     */
    public OasServerVariableRecord() {
        super(OasServerVariable.OAS_SERVER_VARIABLE);
    }

    /**
     * Create a detached, initialised OasServerVariableRecord
     */
    public OasServerVariableRecord(ULong oasServerVariableId, ULong oasServerId, String name, String description, String default_, String enum_, ULong createdBy, ULong lastUpdatedBy, LocalDateTime creationTimestamp, LocalDateTime lastUpdateTimestamp) {
        super(OasServerVariable.OAS_SERVER_VARIABLE);

        setOasServerVariableId(oasServerVariableId);
        setOasServerId(oasServerId);
        setName(name);
        setDescription(description);
        setDefault(default_);
        setEnum(enum_);
        setCreatedBy(createdBy);
        setLastUpdatedBy(lastUpdatedBy);
        setCreationTimestamp(creationTimestamp);
        setLastUpdateTimestamp(lastUpdateTimestamp);
        resetChangedOnNotNull();
    }
}
