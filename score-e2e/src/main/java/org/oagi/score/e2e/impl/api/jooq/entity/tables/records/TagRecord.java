/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.e2e.impl.api.jooq.entity.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.Tag;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TagRecord extends UpdatableRecordImpl<TagRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.tag.tag_id</code>. An internal, primary database
     * key of a tag record.
     */
    public void setTagId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.tag.tag_id</code>. An internal, primary database
     * key of a tag record.
     */
    public ULong getTagId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>oagi.tag.name</code>. The name of the tag.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.tag.name</code>. The name of the tag.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>oagi.tag.description</code>. The description of the tag.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.tag.description</code>. The description of the tag.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>oagi.tag.text_color</code>. The text color of the tag.
     */
    public void setTextColor(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.tag.text_color</code>. The text color of the tag.
     */
    public String getTextColor() {
        return (String) get(3);
    }

    /**
     * Setter for <code>oagi.tag.background_color</code>. The background color
     * of the tag.
     */
    public void setBackgroundColor(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.tag.background_color</code>. The background color
     * of the tag.
     */
    public String getBackgroundColor() {
        return (String) get(4);
    }

    /**
     * Setter for <code>oagi.tag.created_by</code>. A foreign key referring to
     * the user who creates the tag record.
     */
    public void setCreatedBy(ULong value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.tag.created_by</code>. A foreign key referring to
     * the user who creates the tag record.
     */
    public ULong getCreatedBy() {
        return (ULong) get(5);
    }

    /**
     * Setter for <code>oagi.tag.last_updated_by</code>. A foreign key referring
     * to the last user who has updated the tag record.
     */
    public void setLastUpdatedBy(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>oagi.tag.last_updated_by</code>. A foreign key referring
     * to the last user who has updated the tag record.
     */
    public ULong getLastUpdatedBy() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>oagi.tag.creation_timestamp</code>. Timestamp when the
     * tag record was first created.
     */
    public void setCreationTimestamp(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>oagi.tag.creation_timestamp</code>. Timestamp when the
     * tag record was first created.
     */
    public LocalDateTime getCreationTimestamp() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>oagi.tag.last_update_timestamp</code>. The timestamp
     * when the tag was last updated.
     */
    public void setLastUpdateTimestamp(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>oagi.tag.last_update_timestamp</code>. The timestamp
     * when the tag was last updated.
     */
    public LocalDateTime getLastUpdateTimestamp() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TagRecord
     */
    public TagRecord() {
        super(Tag.TAG);
    }

    /**
     * Create a detached, initialised TagRecord
     */
    public TagRecord(ULong tagId, String name, String description, String textColor, String backgroundColor, ULong createdBy, ULong lastUpdatedBy, LocalDateTime creationTimestamp, LocalDateTime lastUpdateTimestamp) {
        super(Tag.TAG);

        setTagId(tagId);
        setName(name);
        setDescription(description);
        setTextColor(textColor);
        setBackgroundColor(backgroundColor);
        setCreatedBy(createdBy);
        setLastUpdatedBy(lastUpdatedBy);
        setCreationTimestamp(creationTimestamp);
        setLastUpdateTimestamp(lastUpdateTimestamp);
        resetTouchedOnNotNull();
    }
}
