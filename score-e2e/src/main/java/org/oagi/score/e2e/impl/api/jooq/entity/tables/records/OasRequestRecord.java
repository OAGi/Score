/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.e2e.impl.api.jooq.entity.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.OasRequest;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class OasRequestRecord extends UpdatableRecordImpl<OasRequestRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.oas_request.oas_request_id</code>. The primary key
     * of the record.
     */
    public void setOasRequestId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.oas_request.oas_request_id</code>. The primary key
     * of the record.
     */
    public ULong getOasRequestId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>oagi.oas_request.oas_operation_id</code>.
     */
    public void setOasOperationId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.oas_request.oas_operation_id</code>.
     */
    public ULong getOasOperationId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>oagi.oas_request.description</code>. A brief description
     * of the request body. This could contain examples of use. CommonMark
     * syntax MAY be used for rich text representation.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.oas_request.description</code>. A brief description
     * of the request body. This could contain examples of use. CommonMark
     * syntax MAY be used for rich text representation.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>oagi.oas_request.required</code>. Determines if the
     * request body is required in the request. Defaults to false.
     */
    public void setRequired(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.oas_request.required</code>. Determines if the
     * request body is required in the request. Defaults to false.
     */
    public Byte getRequired() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>oagi.oas_request.oas_message_body_id</code>.
     */
    public void setOasMessageBodyId(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.oas_request.oas_message_body_id</code>.
     */
    public ULong getOasMessageBodyId() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>oagi.oas_request.make_array_indicator</code>.
     */
    public void setMakeArrayIndicator(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.oas_request.make_array_indicator</code>.
     */
    public Byte getMakeArrayIndicator() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>oagi.oas_request.suppress_root_indicator</code>.
     */
    public void setSuppressRootIndicator(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>oagi.oas_request.suppress_root_indicator</code>.
     */
    public Byte getSuppressRootIndicator() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>oagi.oas_request.meta_header_top_level_asbiep_id</code>.
     */
    public void setMetaHeaderTopLevelAsbiepId(ULong value) {
        set(7, value);
    }

    /**
     * Getter for <code>oagi.oas_request.meta_header_top_level_asbiep_id</code>.
     */
    public ULong getMetaHeaderTopLevelAsbiepId() {
        return (ULong) get(7);
    }

    /**
     * Setter for <code>oagi.oas_request.pagination_top_level_asbiep_id</code>.
     */
    public void setPaginationTopLevelAsbiepId(ULong value) {
        set(8, value);
    }

    /**
     * Getter for <code>oagi.oas_request.pagination_top_level_asbiep_id</code>.
     */
    public ULong getPaginationTopLevelAsbiepId() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>oagi.oas_request.is_callback</code>. If is_callback ==
     * true, oas_callback table has URL rows in it, with eventType=Success or
     * Failed values to allow different endpoints to be called when a successful
     * request is processed, or failure endpoint when an exception occurs.
     */
    public void setIsCallback(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>oagi.oas_request.is_callback</code>. If is_callback ==
     * true, oas_callback table has URL rows in it, with eventType=Success or
     * Failed values to allow different endpoints to be called when a successful
     * request is processed, or failure endpoint when an exception occurs.
     */
    public Byte getIsCallback() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>oagi.oas_request.created_by</code>. The user who creates
     * the record.
     */
    public void setCreatedBy(ULong value) {
        set(10, value);
    }

    /**
     * Getter for <code>oagi.oas_request.created_by</code>. The user who creates
     * the record.
     */
    public ULong getCreatedBy() {
        return (ULong) get(10);
    }

    /**
     * Setter for <code>oagi.oas_request.last_updated_by</code>. The user who
     * last updates the record.
     */
    public void setLastUpdatedBy(ULong value) {
        set(11, value);
    }

    /**
     * Getter for <code>oagi.oas_request.last_updated_by</code>. The user who
     * last updates the record.
     */
    public ULong getLastUpdatedBy() {
        return (ULong) get(11);
    }

    /**
     * Setter for <code>oagi.oas_request.creation_timestamp</code>. The
     * timestamp when the record is created.
     */
    public void setCreationTimestamp(LocalDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>oagi.oas_request.creation_timestamp</code>. The
     * timestamp when the record is created.
     */
    public LocalDateTime getCreationTimestamp() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>oagi.oas_request.last_update_timestamp</code>. The
     * timestamp when the record is last updated.
     */
    public void setLastUpdateTimestamp(LocalDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>oagi.oas_request.last_update_timestamp</code>. The
     * timestamp when the record is last updated.
     */
    public LocalDateTime getLastUpdateTimestamp() {
        return (LocalDateTime) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OasRequestRecord
     */
    public OasRequestRecord() {
        super(OasRequest.OAS_REQUEST);
    }

    /**
     * Create a detached, initialised OasRequestRecord
     */
    public OasRequestRecord(ULong oasRequestId, ULong oasOperationId, String description, Byte required, ULong oasMessageBodyId, Byte makeArrayIndicator, Byte suppressRootIndicator, ULong metaHeaderTopLevelAsbiepId, ULong paginationTopLevelAsbiepId, Byte isCallback, ULong createdBy, ULong lastUpdatedBy, LocalDateTime creationTimestamp, LocalDateTime lastUpdateTimestamp) {
        super(OasRequest.OAS_REQUEST);

        setOasRequestId(oasRequestId);
        setOasOperationId(oasOperationId);
        setDescription(description);
        setRequired(required);
        setOasMessageBodyId(oasMessageBodyId);
        setMakeArrayIndicator(makeArrayIndicator);
        setSuppressRootIndicator(suppressRootIndicator);
        setMetaHeaderTopLevelAsbiepId(metaHeaderTopLevelAsbiepId);
        setPaginationTopLevelAsbiepId(paginationTopLevelAsbiepId);
        setIsCallback(isCallback);
        setCreatedBy(createdBy);
        setLastUpdatedBy(lastUpdatedBy);
        setCreationTimestamp(creationTimestamp);
        setLastUpdateTimestamp(lastUpdateTimestamp);
        resetTouchedOnNotNull();
    }
}
