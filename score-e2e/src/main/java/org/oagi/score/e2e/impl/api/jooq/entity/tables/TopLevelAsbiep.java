/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.e2e.impl.api.jooq.entity.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.function.Function;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function13;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.oagi.score.e2e.impl.api.jooq.entity.Keys;
import org.oagi.score.e2e.impl.api.jooq.entity.Oagi;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.records.TopLevelAsbiepRecord;


/**
 * This table indexes the ASBIEP which is a top-level ASBIEP. This table and the
 * owner_top_level_asbiep_id column in all BIE tables allow all related BIEs to
 * be retrieved all at once speeding up the profile BOD transactions.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TopLevelAsbiep extends TableImpl<TopLevelAsbiepRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>oagi.top_level_asbiep</code>
     */
    public static final TopLevelAsbiep TOP_LEVEL_ASBIEP = new TopLevelAsbiep();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TopLevelAsbiepRecord> getRecordType() {
        return TopLevelAsbiepRecord.class;
    }

    /**
     * The column <code>oagi.top_level_asbiep.top_level_asbiep_id</code>. A
     * internal, primary database key of an top-level ASBIEP.
     */
    public final TableField<TopLevelAsbiepRecord, ULong> TOP_LEVEL_ASBIEP_ID = createField(DSL.name("top_level_asbiep_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "A internal, primary database key of an top-level ASBIEP.");

    /**
     * The column <code>oagi.top_level_asbiep.asbiep_id</code>. Foreign key to
     * the ASBIEP table pointing to a record which is a top-level ASBIEP.
     */
    public final TableField<TopLevelAsbiepRecord, ULong> ASBIEP_ID = createField(DSL.name("asbiep_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.BIGINTUNSIGNED)), this, "Foreign key to the ASBIEP table pointing to a record which is a top-level ASBIEP.");

    /**
     * The column <code>oagi.top_level_asbiep.owner_user_id</code>.
     */
    public final TableField<TopLevelAsbiepRecord, ULong> OWNER_USER_ID = createField(DSL.name("owner_user_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>oagi.top_level_asbiep.last_update_timestamp</code>. The
     * timestamp when among all related bie records was last updated.
     */
    public final TableField<TopLevelAsbiepRecord, LocalDateTime> LAST_UPDATE_TIMESTAMP = createField(DSL.name("last_update_timestamp"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field(DSL.raw("current_timestamp(6)"), SQLDataType.LOCALDATETIME)), this, "The timestamp when among all related bie records was last updated.");

    /**
     * The column <code>oagi.top_level_asbiep.last_updated_by</code>. A foreign
     * key referring to the last user who has updated any related bie records.
     */
    public final TableField<TopLevelAsbiepRecord, ULong> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "A foreign key referring to the last user who has updated any related bie records.");

    /**
     * The column <code>oagi.top_level_asbiep.release_id</code>. Foreign key to
     * the RELEASE table. It identifies the release, for which this module is
     * associated.
     */
    public final TableField<TopLevelAsbiepRecord, ULong> RELEASE_ID = createField(DSL.name("release_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "Foreign key to the RELEASE table. It identifies the release, for which this module is associated.");

    /**
     * The column <code>oagi.top_level_asbiep.version</code>. This column hold a
     * version number assigned by the user. This column is only used by the
     * top-level ASBIEP. No format of version is enforced.
     */
    public final TableField<TopLevelAsbiepRecord, String> VERSION = createField(DSL.name("version"), SQLDataType.VARCHAR(45).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)), this, "This column hold a version number assigned by the user. This column is only used by the top-level ASBIEP. No format of version is enforced.");

    /**
     * The column <code>oagi.top_level_asbiep.status</code>. This is different
     * from the STATE column which is CRUD life cycle of an entity. The use case
     * for this is to allow the user to indicate the usage status of a top-level
     * ASBIEP (a profile BOD). An integration architect can use this column.
     * Example values are ?Prototype?, ?Test?, and ?Production?. Only the
     * top-level ASBIEP can use this field.
     */
    public final TableField<TopLevelAsbiepRecord, String> STATUS = createField(DSL.name("status"), SQLDataType.VARCHAR(45).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)), this, "This is different from the STATE column which is CRUD life cycle of an entity. The use case for this is to allow the user to indicate the usage status of a top-level ASBIEP (a profile BOD). An integration architect can use this column. Example values are ?Prototype?, ?Test?, and ?Production?. Only the top-level ASBIEP can use this field.");

    /**
     * The column <code>oagi.top_level_asbiep.state</code>.
     */
    public final TableField<TopLevelAsbiepRecord, String> STATE = createField(DSL.name("state"), SQLDataType.VARCHAR(20).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>oagi.top_level_asbiep.inverse_mode</code>. If this is
     * true, all BIEs not edited by users under this TOP_LEVEL_ASBIEP will be
     * treated as used BIEs.
     */
    public final TableField<TopLevelAsbiepRecord, Byte> INVERSE_MODE = createField(DSL.name("inverse_mode"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.field(DSL.raw("0"), SQLDataType.TINYINT)), this, "If this is true, all BIEs not edited by users under this TOP_LEVEL_ASBIEP will be treated as used BIEs.");

    /**
     * The column <code>oagi.top_level_asbiep.source_top_level_asbiep_id</code>.
     * A foreign key referring to the source TOP_LEVEL_ASBIEP_ID which has
     * linked to this record.
     */
    public final TableField<TopLevelAsbiepRecord, ULong> SOURCE_TOP_LEVEL_ASBIEP_ID = createField(DSL.name("source_top_level_asbiep_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.BIGINTUNSIGNED)), this, "A foreign key referring to the source TOP_LEVEL_ASBIEP_ID which has linked to this record.");

    /**
     * The column <code>oagi.top_level_asbiep.source_action</code>. An action
     * that had used to create a reference from the source (e.g., 'Copy' or
     * 'Uplift'.)
     */
    public final TableField<TopLevelAsbiepRecord, String> SOURCE_ACTION = createField(DSL.name("source_action"), SQLDataType.VARCHAR(20).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.VARCHAR)), this, "An action that had used to create a reference from the source (e.g., 'Copy' or 'Uplift'.)");

    /**
     * The column <code>oagi.top_level_asbiep.source_timestamp</code>. A
     * timestamp when a source reference had been made.
     */
    public final TableField<TopLevelAsbiepRecord, LocalDateTime> SOURCE_TIMESTAMP = createField(DSL.name("source_timestamp"), SQLDataType.LOCALDATETIME(6).defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.LOCALDATETIME)), this, "A timestamp when a source reference had been made.");

    private TopLevelAsbiep(Name alias, Table<TopLevelAsbiepRecord> aliased) {
        this(alias, aliased, null);
    }

    private TopLevelAsbiep(Name alias, Table<TopLevelAsbiepRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("This table indexes the ASBIEP which is a top-level ASBIEP. This table and the owner_top_level_asbiep_id column in all BIE tables allow all related BIEs to be retrieved all at once speeding up the profile BOD transactions."), TableOptions.table());
    }

    /**
     * Create an aliased <code>oagi.top_level_asbiep</code> table reference
     */
    public TopLevelAsbiep(String alias) {
        this(DSL.name(alias), TOP_LEVEL_ASBIEP);
    }

    /**
     * Create an aliased <code>oagi.top_level_asbiep</code> table reference
     */
    public TopLevelAsbiep(Name alias) {
        this(alias, TOP_LEVEL_ASBIEP);
    }

    /**
     * Create a <code>oagi.top_level_asbiep</code> table reference
     */
    public TopLevelAsbiep() {
        this(DSL.name("top_level_asbiep"), null);
    }

    public <O extends Record> TopLevelAsbiep(Table<O> child, ForeignKey<O, TopLevelAsbiepRecord> key) {
        super(child, key, TOP_LEVEL_ASBIEP);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Oagi.OAGI;
    }

    @Override
    public Identity<TopLevelAsbiepRecord, ULong> getIdentity() {
        return (Identity<TopLevelAsbiepRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<TopLevelAsbiepRecord> getPrimaryKey() {
        return Keys.KEY_TOP_LEVEL_ASBIEP_PRIMARY;
    }

    @Override
    public List<ForeignKey<TopLevelAsbiepRecord, ?>> getReferences() {
        return Arrays.asList(Keys.TOP_LEVEL_ASBIEP_ASBIEP_ID_FK, Keys.TOP_LEVEL_ASBIEP_OWNER_USER_ID_FK, Keys.TOP_LEVEL_ASBIEP_LAST_UPDATED_BY_FK, Keys.TOP_LEVEL_ASBIEP_RELEASE_ID_FK, Keys.TOP_LEVEL_ASBIEP_SOURCE_TOP_LEVEL_ASBIEP_ID_FK);
    }

    private transient Asbiep _asbiep;
    private transient AppUser _topLevelAsbiepOwnerUserIdFk;
    private transient AppUser _topLevelAsbiepLastUpdatedByFk;
    private transient Release _release;
    private transient TopLevelAsbiep _topLevelAsbiep;

    /**
     * Get the implicit join path to the <code>oagi.asbiep</code> table.
     */
    public Asbiep asbiep() {
        if (_asbiep == null)
            _asbiep = new Asbiep(this, Keys.TOP_LEVEL_ASBIEP_ASBIEP_ID_FK);

        return _asbiep;
    }

    /**
     * Get the implicit join path to the <code>oagi.app_user</code> table, via
     * the <code>top_level_asbiep_owner_user_id_fk</code> key.
     */
    public AppUser topLevelAsbiepOwnerUserIdFk() {
        if (_topLevelAsbiepOwnerUserIdFk == null)
            _topLevelAsbiepOwnerUserIdFk = new AppUser(this, Keys.TOP_LEVEL_ASBIEP_OWNER_USER_ID_FK);

        return _topLevelAsbiepOwnerUserIdFk;
    }

    /**
     * Get the implicit join path to the <code>oagi.app_user</code> table, via
     * the <code>top_level_asbiep_last_updated_by_fk</code> key.
     */
    public AppUser topLevelAsbiepLastUpdatedByFk() {
        if (_topLevelAsbiepLastUpdatedByFk == null)
            _topLevelAsbiepLastUpdatedByFk = new AppUser(this, Keys.TOP_LEVEL_ASBIEP_LAST_UPDATED_BY_FK);

        return _topLevelAsbiepLastUpdatedByFk;
    }

    /**
     * Get the implicit join path to the <code>oagi.release</code> table.
     */
    public Release release() {
        if (_release == null)
            _release = new Release(this, Keys.TOP_LEVEL_ASBIEP_RELEASE_ID_FK);

        return _release;
    }

    /**
     * Get the implicit join path to the <code>oagi.top_level_asbiep</code>
     * table.
     */
    public TopLevelAsbiep topLevelAsbiep() {
        if (_topLevelAsbiep == null)
            _topLevelAsbiep = new TopLevelAsbiep(this, Keys.TOP_LEVEL_ASBIEP_SOURCE_TOP_LEVEL_ASBIEP_ID_FK);

        return _topLevelAsbiep;
    }

    @Override
    public TopLevelAsbiep as(String alias) {
        return new TopLevelAsbiep(DSL.name(alias), this);
    }

    @Override
    public TopLevelAsbiep as(Name alias) {
        return new TopLevelAsbiep(alias, this);
    }

    @Override
    public TopLevelAsbiep as(Table<?> alias) {
        return new TopLevelAsbiep(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public TopLevelAsbiep rename(String name) {
        return new TopLevelAsbiep(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TopLevelAsbiep rename(Name name) {
        return new TopLevelAsbiep(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public TopLevelAsbiep rename(Table<?> name) {
        return new TopLevelAsbiep(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<ULong, ULong, ULong, LocalDateTime, ULong, ULong, String, String, String, Byte, ULong, String, LocalDateTime> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function13<? super ULong, ? super ULong, ? super ULong, ? super LocalDateTime, ? super ULong, ? super ULong, ? super String, ? super String, ? super String, ? super Byte, ? super ULong, ? super String, ? super LocalDateTime, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function13<? super ULong, ? super ULong, ? super ULong, ? super LocalDateTime, ? super ULong, ? super ULong, ? super String, ? super String, ? super String, ? super Byte, ? super ULong, ? super String, ? super LocalDateTime, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
