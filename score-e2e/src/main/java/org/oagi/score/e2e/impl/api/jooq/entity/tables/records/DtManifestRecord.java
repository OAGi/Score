/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.e2e.impl.api.jooq.entity.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.DtManifest;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DtManifestRecord extends UpdatableRecordImpl<DtManifestRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.dt_manifest.dt_manifest_id</code>.
     */
    public void setDtManifestId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.dt_manifest_id</code>.
     */
    public ULong getDtManifestId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>oagi.dt_manifest.release_id</code>.
     */
    public void setReleaseId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.release_id</code>.
     */
    public ULong getReleaseId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>oagi.dt_manifest.dt_id</code>.
     */
    public void setDtId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.dt_id</code>.
     */
    public ULong getDtId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>oagi.dt_manifest.based_dt_manifest_id</code>.
     */
    public void setBasedDtManifestId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.based_dt_manifest_id</code>.
     */
    public ULong getBasedDtManifestId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>oagi.dt_manifest.den</code>. Dictionary Entry Name of
     * the data type.
     */
    public void setDen(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.den</code>. Dictionary Entry Name of
     * the data type.
     */
    public String getDen() {
        return (String) get(4);
    }

    /**
     * Setter for <code>oagi.dt_manifest.conflict</code>. This indicates that
     * there is a conflict between self and relationship.
     */
    public void setConflict(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.conflict</code>. This indicates that
     * there is a conflict between self and relationship.
     */
    public Byte getConflict() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>oagi.dt_manifest.log_id</code>. A foreign key pointed to
     * a log for the current record.
     */
    public void setLogId(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.log_id</code>. A foreign key pointed to
     * a log for the current record.
     */
    public ULong getLogId() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>oagi.dt_manifest.replacement_dt_manifest_id</code>. This
     * refers to a replacement manifest if the record is deprecated.
     */
    public void setReplacementDtManifestId(ULong value) {
        set(7, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.replacement_dt_manifest_id</code>. This
     * refers to a replacement manifest if the record is deprecated.
     */
    public ULong getReplacementDtManifestId() {
        return (ULong) get(7);
    }

    /**
     * Setter for <code>oagi.dt_manifest.prev_dt_manifest_id</code>.
     */
    public void setPrevDtManifestId(ULong value) {
        set(8, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.prev_dt_manifest_id</code>.
     */
    public ULong getPrevDtManifestId() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>oagi.dt_manifest.next_dt_manifest_id</code>.
     */
    public void setNextDtManifestId(ULong value) {
        set(9, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.next_dt_manifest_id</code>.
     */
    public ULong getNextDtManifestId() {
        return (ULong) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DtManifestRecord
     */
    public DtManifestRecord() {
        super(DtManifest.DT_MANIFEST);
    }

    /**
     * Create a detached, initialised DtManifestRecord
     */
    public DtManifestRecord(ULong dtManifestId, ULong releaseId, ULong dtId, ULong basedDtManifestId, String den, Byte conflict, ULong logId, ULong replacementDtManifestId, ULong prevDtManifestId, ULong nextDtManifestId) {
        super(DtManifest.DT_MANIFEST);

        setDtManifestId(dtManifestId);
        setReleaseId(releaseId);
        setDtId(dtId);
        setBasedDtManifestId(basedDtManifestId);
        setDen(den);
        setConflict(conflict);
        setLogId(logId);
        setReplacementDtManifestId(replacementDtManifestId);
        setPrevDtManifestId(prevDtManifestId);
        setNextDtManifestId(nextDtManifestId);
        resetChangedOnNotNull();
    }
}
