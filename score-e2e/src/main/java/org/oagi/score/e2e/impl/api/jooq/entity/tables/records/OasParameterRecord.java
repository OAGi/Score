/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.e2e.impl.api.jooq.entity.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.OasParameter;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class OasParameterRecord extends UpdatableRecordImpl<OasParameterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.oas_parameter.oas_parameter_id</code>. The primary
     * key of the record.
     */
    public void setOasParameterId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.oas_parameter.oas_parameter_id</code>. The primary
     * key of the record.
     */
    public ULong getOasParameterId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>oagi.oas_parameter.guid</code>. The GUID of the record.
     */
    public void setGuid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.oas_parameter.guid</code>. The GUID of the record.
     */
    public String getGuid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>oagi.oas_parameter.name</code>. REQUIRED. The name of
     * the parameter. Parameter names are case sensitive.
     * If in is "path", the name field MUST correspond to a template expression
     * occurring within the path field in the Paths Object. See Path Templating
     * for further information.
     * If in is "header" and the name field is "Accept", "Content-Type" or
     * "Authorization", the parameter definition SHALL be ignored.
     * For all other cases, the name corresponds to the parameter name used by
     * the in property.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.oas_parameter.name</code>. REQUIRED. The name of
     * the parameter. Parameter names are case sensitive.
     * If in is "path", the name field MUST correspond to a template expression
     * occurring within the path field in the Paths Object. See Path Templating
     * for further information.
     * If in is "header" and the name field is "Accept", "Content-Type" or
     * "Authorization", the parameter definition SHALL be ignored.
     * For all other cases, the name corresponds to the parameter name used by
     * the in property.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>oagi.oas_parameter.in</code>. REQUIRED. The location of
     * the parameter. Possible values are "query", "header", "path" or "cookie".
     */
    public void setIn(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.oas_parameter.in</code>. REQUIRED. The location of
     * the parameter. Possible values are "query", "header", "path" or "cookie".
     */
    public String getIn() {
        return (String) get(3);
    }

    /**
     * Setter for <code>oagi.oas_parameter.required</code>. Determines whether
     * this parameter is mandatory. If the parameter location is "path", this
     * property is REQUIRED and its value MUST be true. Otherwise, the property
     * MAY be included and its default value is false.
     */
    public void setRequired(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.oas_parameter.required</code>. Determines whether
     * this parameter is mandatory. If the parameter location is "path", this
     * property is REQUIRED and its value MUST be true. Otherwise, the property
     * MAY be included and its default value is false.
     */
    public Byte getRequired() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>oagi.oas_parameter.description</code>. A brief
     * description of the parameter. This could contain examples of use.
     * CommonMark syntax MAY be used for rich text representation.
     */
    public void setDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.oas_parameter.description</code>. A brief
     * description of the parameter. This could contain examples of use.
     * CommonMark syntax MAY be used for rich text representation.
     */
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>oagi.oas_parameter.schema_type_reference</code>. A
     * reference of the schema defining the type used for the parameter.
     */
    public void setSchemaTypeReference(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>oagi.oas_parameter.schema_type_reference</code>. A
     * reference of the schema defining the type used for the parameter.
     */
    public String getSchemaTypeReference() {
        return (String) get(6);
    }

    /**
     * Setter for <code>oagi.oas_parameter.allow_reserved</code>. Determines
     * whether the parameter value SHOULD allow reserved characters, as defined
     * by RFC3986 :/?#[]@!$&amp;'()*+,;= to be included without
     * percent-encoding. This property only applies to parameters with an in
     * value of query. The default value is false.
     */
    public void setAllowReserved(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>oagi.oas_parameter.allow_reserved</code>. Determines
     * whether the parameter value SHOULD allow reserved characters, as defined
     * by RFC3986 :/?#[]@!$&amp;'()*+,;= to be included without
     * percent-encoding. This property only applies to parameters with an in
     * value of query. The default value is false.
     */
    public Byte getAllowReserved() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>oagi.oas_parameter.deprecated</code>. Specifies that a
     * parameter is deprecated and SHOULD be transitioned out of usage. Default
     * value is false.
     */
    public void setDeprecated(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>oagi.oas_parameter.deprecated</code>. Specifies that a
     * parameter is deprecated and SHOULD be transitioned out of usage. Default
     * value is false.
     */
    public Byte getDeprecated() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>oagi.oas_parameter.oas_http_header_id</code>. IF IN =
     * Header, Then select form OAS_HTTP_HEADER table
     */
    public void setOasHttpHeaderId(ULong value) {
        set(9, value);
    }

    /**
     * Getter for <code>oagi.oas_parameter.oas_http_header_id</code>. IF IN =
     * Header, Then select form OAS_HTTP_HEADER table
     */
    public ULong getOasHttpHeaderId() {
        return (ULong) get(9);
    }

    /**
     * Setter for <code>oagi.oas_parameter.created_by</code>. The user who
     * creates the record.
     */
    public void setCreatedBy(ULong value) {
        set(10, value);
    }

    /**
     * Getter for <code>oagi.oas_parameter.created_by</code>. The user who
     * creates the record.
     */
    public ULong getCreatedBy() {
        return (ULong) get(10);
    }

    /**
     * Setter for <code>oagi.oas_parameter.last_updated_by</code>. The user who
     * last updates the record.
     */
    public void setLastUpdatedBy(ULong value) {
        set(11, value);
    }

    /**
     * Getter for <code>oagi.oas_parameter.last_updated_by</code>. The user who
     * last updates the record.
     */
    public ULong getLastUpdatedBy() {
        return (ULong) get(11);
    }

    /**
     * Setter for <code>oagi.oas_parameter.creation_timestamp</code>. The
     * timestamp when the record is created.
     */
    public void setCreationTimestamp(LocalDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>oagi.oas_parameter.creation_timestamp</code>. The
     * timestamp when the record is created.
     */
    public LocalDateTime getCreationTimestamp() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>oagi.oas_parameter.last_update_timestamp</code>. The
     * timestamp when the record is last updated.
     */
    public void setLastUpdateTimestamp(LocalDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>oagi.oas_parameter.last_update_timestamp</code>. The
     * timestamp when the record is last updated.
     */
    public LocalDateTime getLastUpdateTimestamp() {
        return (LocalDateTime) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OasParameterRecord
     */
    public OasParameterRecord() {
        super(OasParameter.OAS_PARAMETER);
    }

    /**
     * Create a detached, initialised OasParameterRecord
     */
    public OasParameterRecord(ULong oasParameterId, String guid, String name, String in, Byte required, String description, String schemaTypeReference, Byte allowReserved, Byte deprecated, ULong oasHttpHeaderId, ULong createdBy, ULong lastUpdatedBy, LocalDateTime creationTimestamp, LocalDateTime lastUpdateTimestamp) {
        super(OasParameter.OAS_PARAMETER);

        setOasParameterId(oasParameterId);
        setGuid(guid);
        setName(name);
        setIn(in);
        setRequired(required);
        setDescription(description);
        setSchemaTypeReference(schemaTypeReference);
        setAllowReserved(allowReserved);
        setDeprecated(deprecated);
        setOasHttpHeaderId(oasHttpHeaderId);
        setCreatedBy(createdBy);
        setLastUpdatedBy(lastUpdatedBy);
        setCreationTimestamp(creationTimestamp);
        setLastUpdateTimestamp(lastUpdateTimestamp);
        resetTouchedOnNotNull();
    }
}
