/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.e2e.impl.api.jooq.entity.tables;


import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.InverseForeignKey;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.oagi.score.e2e.impl.api.jooq.entity.Keys;
import org.oagi.score.e2e.impl.api.jooq.entity.Oagi;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.AgencyIdList.AgencyIdListPath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.AgencyIdListManifest.AgencyIdListManifestPath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.AgencyIdListValueManifest.AgencyIdListValueManifestPath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.Bbie.BbiePath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.BbieSc.BbieScPath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.DtAwdPri.DtAwdPriPath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.DtScAwdPri.DtScAwdPriPath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.Log.LogPath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.ModuleAgencyIdListManifest.ModuleAgencyIdListManifestPath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.Release.ReleasePath;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.records.AgencyIdListManifestRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AgencyIdListManifest extends TableImpl<AgencyIdListManifestRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>oagi.agency_id_list_manifest</code>
     */
    public static final AgencyIdListManifest AGENCY_ID_LIST_MANIFEST = new AgencyIdListManifest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AgencyIdListManifestRecord> getRecordType() {
        return AgencyIdListManifestRecord.class;
    }

    /**
     * The column
     * <code>oagi.agency_id_list_manifest.agency_id_list_manifest_id</code>.
     */
    public final TableField<AgencyIdListManifestRecord, ULong> AGENCY_ID_LIST_MANIFEST_ID = createField(DSL.name("agency_id_list_manifest_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>oagi.agency_id_list_manifest.release_id</code>.
     */
    public final TableField<AgencyIdListManifestRecord, ULong> RELEASE_ID = createField(DSL.name("release_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>oagi.agency_id_list_manifest.agency_id_list_id</code>.
     */
    public final TableField<AgencyIdListManifestRecord, ULong> AGENCY_ID_LIST_ID = createField(DSL.name("agency_id_list_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>oagi.agency_id_list_manifest.agency_id_list_value_manifest_id</code>.
     */
    public final TableField<AgencyIdListManifestRecord, ULong> AGENCY_ID_LIST_VALUE_MANIFEST_ID = createField(DSL.name("agency_id_list_value_manifest_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column
     * <code>oagi.agency_id_list_manifest.based_agency_id_list_manifest_id</code>.
     */
    public final TableField<AgencyIdListManifestRecord, ULong> BASED_AGENCY_ID_LIST_MANIFEST_ID = createField(DSL.name("based_agency_id_list_manifest_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>oagi.agency_id_list_manifest.conflict</code>. This
     * indicates that there is a conflict between self and relationship.
     */
    public final TableField<AgencyIdListManifestRecord, Byte> CONFLICT = createField(DSL.name("conflict"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.field(DSL.raw("0"), SQLDataType.TINYINT)), this, "This indicates that there is a conflict between self and relationship.");

    /**
     * The column <code>oagi.agency_id_list_manifest.log_id</code>. A foreign
     * key pointed to a log for the current record.
     */
    public final TableField<AgencyIdListManifestRecord, ULong> LOG_ID = createField(DSL.name("log_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.BIGINTUNSIGNED)), this, "A foreign key pointed to a log for the current record.");

    /**
     * The column
     * <code>oagi.agency_id_list_manifest.replacement_agency_id_list_manifest_id</code>.
     * This refers to a replacement manifest if the record is deprecated.
     */
    public final TableField<AgencyIdListManifestRecord, ULong> REPLACEMENT_AGENCY_ID_LIST_MANIFEST_ID = createField(DSL.name("replacement_agency_id_list_manifest_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.BIGINTUNSIGNED)), this, "This refers to a replacement manifest if the record is deprecated.");

    /**
     * The column
     * <code>oagi.agency_id_list_manifest.prev_agency_id_list_manifest_id</code>.
     */
    public final TableField<AgencyIdListManifestRecord, ULong> PREV_AGENCY_ID_LIST_MANIFEST_ID = createField(DSL.name("prev_agency_id_list_manifest_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column
     * <code>oagi.agency_id_list_manifest.next_agency_id_list_manifest_id</code>.
     */
    public final TableField<AgencyIdListManifestRecord, ULong> NEXT_AGENCY_ID_LIST_MANIFEST_ID = createField(DSL.name("next_agency_id_list_manifest_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.BIGINTUNSIGNED)), this, "");

    private AgencyIdListManifest(Name alias, Table<AgencyIdListManifestRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private AgencyIdListManifest(Name alias, Table<AgencyIdListManifestRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>oagi.agency_id_list_manifest</code> table
     * reference
     */
    public AgencyIdListManifest(String alias) {
        this(DSL.name(alias), AGENCY_ID_LIST_MANIFEST);
    }

    /**
     * Create an aliased <code>oagi.agency_id_list_manifest</code> table
     * reference
     */
    public AgencyIdListManifest(Name alias) {
        this(alias, AGENCY_ID_LIST_MANIFEST);
    }

    /**
     * Create a <code>oagi.agency_id_list_manifest</code> table reference
     */
    public AgencyIdListManifest() {
        this(DSL.name("agency_id_list_manifest"), null);
    }

    public <O extends Record> AgencyIdListManifest(Table<O> path, ForeignKey<O, AgencyIdListManifestRecord> childPath, InverseForeignKey<O, AgencyIdListManifestRecord> parentPath) {
        super(path, childPath, parentPath, AGENCY_ID_LIST_MANIFEST);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class AgencyIdListManifestPath extends AgencyIdListManifest implements Path<AgencyIdListManifestRecord> {

        private static final long serialVersionUID = 1L;
        public <O extends Record> AgencyIdListManifestPath(Table<O> path, ForeignKey<O, AgencyIdListManifestRecord> childPath, InverseForeignKey<O, AgencyIdListManifestRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private AgencyIdListManifestPath(Name alias, Table<AgencyIdListManifestRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public AgencyIdListManifestPath as(String alias) {
            return new AgencyIdListManifestPath(DSL.name(alias), this);
        }

        @Override
        public AgencyIdListManifestPath as(Name alias) {
            return new AgencyIdListManifestPath(alias, this);
        }

        @Override
        public AgencyIdListManifestPath as(Table<?> alias) {
            return new AgencyIdListManifestPath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Oagi.OAGI;
    }

    @Override
    public Identity<AgencyIdListManifestRecord, ULong> getIdentity() {
        return (Identity<AgencyIdListManifestRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<AgencyIdListManifestRecord> getPrimaryKey() {
        return Keys.KEY_AGENCY_ID_LIST_MANIFEST_PRIMARY;
    }

    @Override
    public List<ForeignKey<AgencyIdListManifestRecord, ?>> getReferences() {
        return Arrays.asList(Keys.AGENCY_ID_LIST_MANIFEST_AGENCY_ID_LIST_ID_FK, Keys.AGENCY_ID_LIST_MANIFEST_BASED_AGENCY_ID_LIST_MANIFEST_ID_FK, Keys.AGENCY_ID_LIST_MANIFEST_LOG_ID_FK, Keys.AGENCY_ID_LIST_MANIFEST_NEXT_AGENCY_ID_LIST_MANIFEST_ID_FK, Keys.AGENCY_ID_LIST_MANIFEST_PREV_AGENCY_ID_LIST_MANIFEST_ID_FK, Keys.AGENCY_ID_LIST_MANIFEST_RELEASE_ID_FK, Keys.AGENCY_ID_LIST_REPLACEMENT_AGENCY_ID_LIST_MANIFEST_ID_FK, Keys.AGENCY_ID_LIST_VALUE_MANIFEST_ID_FK);
    }

    private transient AgencyIdListPath _agencyIdList;

    /**
     * Get the implicit join path to the <code>oagi.agency_id_list</code> table.
     */
    public AgencyIdListPath agencyIdList() {
        if (_agencyIdList == null)
            _agencyIdList = new AgencyIdListPath(this, Keys.AGENCY_ID_LIST_MANIFEST_AGENCY_ID_LIST_ID_FK, null);

        return _agencyIdList;
    }

    private transient AgencyIdListManifestPath _agencyIdListManifestBasedAgencyIdListManifestIdFk;

    /**
     * Get the implicit join path to the
     * <code>oagi.agency_id_list_manifest</code> table, via the
     * <code>agency_id_list_manifest_based_agency_id_list_manifest_id_fk</code>
     * key.
     */
    public AgencyIdListManifestPath agencyIdListManifestBasedAgencyIdListManifestIdFk() {
        if (_agencyIdListManifestBasedAgencyIdListManifestIdFk == null)
            _agencyIdListManifestBasedAgencyIdListManifestIdFk = new AgencyIdListManifestPath(this, Keys.AGENCY_ID_LIST_MANIFEST_BASED_AGENCY_ID_LIST_MANIFEST_ID_FK, null);

        return _agencyIdListManifestBasedAgencyIdListManifestIdFk;
    }

    private transient LogPath _log;

    /**
     * Get the implicit join path to the <code>oagi.log</code> table.
     */
    public LogPath log() {
        if (_log == null)
            _log = new LogPath(this, Keys.AGENCY_ID_LIST_MANIFEST_LOG_ID_FK, null);

        return _log;
    }

    private transient AgencyIdListManifestPath _agencyIdListManifestNextAgencyIdListManifestIdFk;

    /**
     * Get the implicit join path to the
     * <code>oagi.agency_id_list_manifest</code> table, via the
     * <code>agency_id_list_manifest_next_agency_id_list_manifest_id_fk</code>
     * key.
     */
    public AgencyIdListManifestPath agencyIdListManifestNextAgencyIdListManifestIdFk() {
        if (_agencyIdListManifestNextAgencyIdListManifestIdFk == null)
            _agencyIdListManifestNextAgencyIdListManifestIdFk = new AgencyIdListManifestPath(this, Keys.AGENCY_ID_LIST_MANIFEST_NEXT_AGENCY_ID_LIST_MANIFEST_ID_FK, null);

        return _agencyIdListManifestNextAgencyIdListManifestIdFk;
    }

    private transient AgencyIdListManifestPath _agencyIdListManifestPrevAgencyIdListManifestIdFk;

    /**
     * Get the implicit join path to the
     * <code>oagi.agency_id_list_manifest</code> table, via the
     * <code>agency_id_list_manifest_prev_agency_id_list_manifest_id_fk</code>
     * key.
     */
    public AgencyIdListManifestPath agencyIdListManifestPrevAgencyIdListManifestIdFk() {
        if (_agencyIdListManifestPrevAgencyIdListManifestIdFk == null)
            _agencyIdListManifestPrevAgencyIdListManifestIdFk = new AgencyIdListManifestPath(this, Keys.AGENCY_ID_LIST_MANIFEST_PREV_AGENCY_ID_LIST_MANIFEST_ID_FK, null);

        return _agencyIdListManifestPrevAgencyIdListManifestIdFk;
    }

    private transient ReleasePath _release;

    /**
     * Get the implicit join path to the <code>oagi.release</code> table.
     */
    public ReleasePath release() {
        if (_release == null)
            _release = new ReleasePath(this, Keys.AGENCY_ID_LIST_MANIFEST_RELEASE_ID_FK, null);

        return _release;
    }

    private transient AgencyIdListManifestPath _agencyIdListReplacementAgencyIdListManifestIdFk;

    /**
     * Get the implicit join path to the
     * <code>oagi.agency_id_list_manifest</code> table, via the
     * <code>agency_id_list_replacement_agency_id_list_manifest_id_fk</code>
     * key.
     */
    public AgencyIdListManifestPath agencyIdListReplacementAgencyIdListManifestIdFk() {
        if (_agencyIdListReplacementAgencyIdListManifestIdFk == null)
            _agencyIdListReplacementAgencyIdListManifestIdFk = new AgencyIdListManifestPath(this, Keys.AGENCY_ID_LIST_REPLACEMENT_AGENCY_ID_LIST_MANIFEST_ID_FK, null);

        return _agencyIdListReplacementAgencyIdListManifestIdFk;
    }

    private transient AgencyIdListValueManifestPath _agencyIdListValueManifest;

    /**
     * Get the implicit join path to the
     * <code>oagi.agency_id_list_value_manifest</code> table.
     */
    public AgencyIdListValueManifestPath agencyIdListValueManifest() {
        if (_agencyIdListValueManifest == null)
            _agencyIdListValueManifest = new AgencyIdListValueManifestPath(this, Keys.AGENCY_ID_LIST_VALUE_MANIFEST_ID_FK, null);

        return _agencyIdListValueManifest;
    }

    private transient BbiePath _bbie;

    /**
     * Get the implicit to-many join path to the <code>oagi.bbie</code> table
     */
    public BbiePath bbie() {
        if (_bbie == null)
            _bbie = new BbiePath(this, null, Keys.BBIE_AGENCY_ID_LIST_MANIFEST_ID_FK.getInverseKey());

        return _bbie;
    }

    private transient BbieScPath _bbieSc;

    /**
     * Get the implicit to-many join path to the <code>oagi.bbie_sc</code> table
     */
    public BbieScPath bbieSc() {
        if (_bbieSc == null)
            _bbieSc = new BbieScPath(this, null, Keys.BBIE_SC_AGENCY_ID_LIST_MANIFEST_ID_FK.getInverseKey());

        return _bbieSc;
    }

    private transient DtAwdPriPath _dtAwdPri;

    /**
     * Get the implicit to-many join path to the <code>oagi.dt_awd_pri</code>
     * table
     */
    public DtAwdPriPath dtAwdPri() {
        if (_dtAwdPri == null)
            _dtAwdPri = new DtAwdPriPath(this, null, Keys.DT_AWD_PRI_AGENCY_ID_LIST_MANIFEST_ID_FK.getInverseKey());

        return _dtAwdPri;
    }

    private transient DtScAwdPriPath _dtScAwdPri;

    /**
     * Get the implicit to-many join path to the <code>oagi.dt_sc_awd_pri</code>
     * table
     */
    public DtScAwdPriPath dtScAwdPri() {
        if (_dtScAwdPri == null)
            _dtScAwdPri = new DtScAwdPriPath(this, null, Keys.DT_SC_AWD_PRI_AGENCY_ID_LIST_MANIFEST_ID_FK.getInverseKey());

        return _dtScAwdPri;
    }

    private transient ModuleAgencyIdListManifestPath _moduleAgencyIdListManifest;

    /**
     * Get the implicit to-many join path to the
     * <code>oagi.module_agency_id_list_manifest</code> table
     */
    public ModuleAgencyIdListManifestPath moduleAgencyIdListManifest() {
        if (_moduleAgencyIdListManifest == null)
            _moduleAgencyIdListManifest = new ModuleAgencyIdListManifestPath(this, null, Keys.MODULE_AGENCY_ID_LIST_MANIFEST_AGENCY_ID_LIST_MANIFEST_ID_FK.getInverseKey());

        return _moduleAgencyIdListManifest;
    }

    @Override
    public AgencyIdListManifest as(String alias) {
        return new AgencyIdListManifest(DSL.name(alias), this);
    }

    @Override
    public AgencyIdListManifest as(Name alias) {
        return new AgencyIdListManifest(alias, this);
    }

    @Override
    public AgencyIdListManifest as(Table<?> alias) {
        return new AgencyIdListManifest(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public AgencyIdListManifest rename(String name) {
        return new AgencyIdListManifest(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AgencyIdListManifest rename(Name name) {
        return new AgencyIdListManifest(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public AgencyIdListManifest rename(Table<?> name) {
        return new AgencyIdListManifest(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AgencyIdListManifest where(Condition condition) {
        return new AgencyIdListManifest(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AgencyIdListManifest where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AgencyIdListManifest where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AgencyIdListManifest where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public AgencyIdListManifest where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public AgencyIdListManifest where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public AgencyIdListManifest where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public AgencyIdListManifest where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AgencyIdListManifest whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AgencyIdListManifest whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
