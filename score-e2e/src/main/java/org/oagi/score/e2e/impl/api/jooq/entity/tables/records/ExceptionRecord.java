/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.e2e.impl.api.jooq.entity.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.oagi.score.e2e.impl.api.jooq.entity.tables.Exception;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExceptionRecord extends UpdatableRecordImpl<ExceptionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.exception.exception_id</code>. Internal, primary
     * database key.
     */
    public void setExceptionId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.exception.exception_id</code>. Internal, primary
     * database key.
     */
    public ULong getExceptionId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>oagi.exception.tag</code>. A tag of the exception for
     * the purpose of the searching facilitation
     */
    public void setTag(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.exception.tag</code>. A tag of the exception for
     * the purpose of the searching facilitation
     */
    public String getTag() {
        return (String) get(1);
    }

    /**
     * Setter for <code>oagi.exception.message</code>. The exception message.
     */
    public void setMessage(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.exception.message</code>. The exception message.
     */
    public String getMessage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>oagi.exception.stacktrace</code>. The serialized
     * stacktrace object.
     */
    public void setStacktrace(byte[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.exception.stacktrace</code>. The serialized
     * stacktrace object.
     */
    public byte[] getStacktrace() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>oagi.exception.created_by</code>. Foreign key to the
     * APP_USER table. It indicates the user who is working on when the
     * exception occurs.
     */
    public void setCreatedBy(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.exception.created_by</code>. Foreign key to the
     * APP_USER table. It indicates the user who is working on when the
     * exception occurs.
     */
    public ULong getCreatedBy() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>oagi.exception.creation_timestamp</code>. Timestamp when
     * the exception was created.
     */
    public void setCreationTimestamp(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.exception.creation_timestamp</code>. Timestamp when
     * the exception was created.
     */
    public LocalDateTime getCreationTimestamp() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExceptionRecord
     */
    public ExceptionRecord() {
        super(Exception.EXCEPTION);
    }

    /**
     * Create a detached, initialised ExceptionRecord
     */
    public ExceptionRecord(ULong exceptionId, String tag, String message, byte[] stacktrace, ULong createdBy, LocalDateTime creationTimestamp) {
        super(Exception.EXCEPTION);

        setExceptionId(exceptionId);
        setTag(tag);
        setMessage(message);
        setStacktrace(stacktrace);
        setCreatedBy(createdBy);
        setCreationTimestamp(creationTimestamp);
        resetChangedOnNotNull();
    }
}
