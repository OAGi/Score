CREATE TABLE `asbie`
(
    `asbie_id`                  bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT 'A internal, primary database key of an ASBIE.',
    `guid`                      char(32) CHARACTER SET ascii COLLATE ascii_general_ci    NOT NULL COMMENT 'A globally unique identifier (GUID).',
    `based_ascc_manifest_id`    bigint(20) unsigned NOT NULL COMMENT 'The BASED_ASCC_MANIFEST_ID column refers to the ASCC_MANIFEST record, which this ASBIE contextualizes.',
    `path`                      text CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
    `hash_path`                 varchar(64) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL COMMENT 'hash_path generated from the path of the component graph using hash function, so that it is unique in the graph.',
    `from_abie_id`              bigint(20) unsigned NOT NULL COMMENT 'A foreign key pointing to the ABIE table. FROM_ABIE_ID is basically  a parent data element (type) of the TO_ASBIEP_ID. FROM_ABIE_ID must be based on the FROM_ACC_ID in the BASED_ASCC_ID except when the FROM_ACC_ID refers to an SEMANTIC_GROUP ACC or USER_EXTENSION_GROUP ACC.',
    `to_asbiep_id`              bigint(20) unsigned DEFAULT NULL COMMENT 'A foreign key to the ASBIEP table. TO_ASBIEP_ID is basically a child data element of the FROM_ABIE_ID. The TO_ASBIEP_ID must be based on the TO_ASCCP_ID in the BASED_ASCC_ID. the ASBIEP is reused with the OWNER_TOP_LEVEL_ASBIEP is different after joining ASBIE and ASBIEP tables',
    `definition`                text         DEFAULT NULL COMMENT 'Definition to override the ASCC definition. If NULL, it means that the definition should be derived from the based CC on the UI, expression generation, and any API.',
    `cardinality_min`           int(11) NOT NULL COMMENT 'Minimum occurence constraint of the TO_ASBIEP_ID. A valid value is a non-negative integer.',
    `cardinality_max`           int(11) NOT NULL COMMENT 'Maximum occurrence constraint of the TO_ASBIEP_ID. A valid value is an integer from -1 and up. Specifically, -1 means unbounded. 0 means prohibited or not to use.',
    `is_nillable`               tinyint(1) NOT NULL DEFAULT 0 COMMENT 'Indicate whether the TO_ASBIEP_ID is allowed to be null.',
    `remark`                    varchar(225) DEFAULT NULL COMMENT 'This column allows the user to specify very context-specific usage of the BIE. It is different from the DEFINITION column in that the DEFINITION column is a description conveying the meaning of the associated concept. Remarks may be a very implementation specific instruction or others. For example, BOM BOD, as an ACC, is a generic BOM structure. In a particular context, a BOM ABIE can be a Super BOM. Explanation of the Super BOM concept should be captured in the Definition of the ABIE. A remark about that ABIE may be "Type of BOM should be recognized in the BOM/typeCode."',
    `created_by`                bigint(20) unsigned NOT NULL COMMENT 'A foreign key referring to the user who creates the ASBIE. The creator of the ASBIE is also its owner by default. ASBIEs created as children of another ABIE have the same CREATED_BY.',
    `last_updated_by`           bigint(20) unsigned NOT NULL COMMENT 'A foreign key referring to the user who has last updated the ASBIE record. ',
    `creation_timestamp`        datetime(6) NOT NULL COMMENT 'Timestamp when the ASBIE record was first created. ASBIEs created as children of another ABIE have the same CREATION_TIMESTAMP.',
    `last_update_timestamp`     datetime(6) NOT NULL COMMENT 'The timestamp when the ASBIE was last updated.',
    `seq_key`                   decimal(10, 2)                                           NOT NULL COMMENT 'This indicates the order of the associations among other siblings. The SEQ_KEY for BIEs is decimal in order to accomodate the removal of inheritance hierarchy and group. For example, children of the most abstract ACC will have SEQ_KEY = 1.1, 1.2, 1.3, and so on; and SEQ_KEY of the next abstraction level ACC will have SEQ_KEY = 2.1, 2.2, 2.3 and so on so forth.',
    `is_used`                   tinyint(1) NOT NULL DEFAULT 0 COMMENT 'Flag to indicate whether the field/component is used in the content model. It signifies whether the field/component should be generated.',
    `owner_top_level_asbiep_id` bigint(20) unsigned NOT NULL COMMENT 'This is a foreign key to the top-level ASBIEP.',
    PRIMARY KEY (`asbie_id`),
    KEY                         `asbie_created_by_fk` (`created_by`),
    KEY                         `asbie_from_abie_id_fk` (`from_abie_id`),
    KEY                         `asbie_last_updated_by_fk` (`last_updated_by`),
    KEY                         `asbie_to_asbiep_id_fk` (`to_asbiep_id`),
    KEY                         `asbie_owner_top_level_asbiep_id_fk` (`owner_top_level_asbiep_id`),
    KEY                         `asbie_based_ascc_manifest_id_fk` (`based_ascc_manifest_id`),
    KEY                         `asbie_path_k` (`path`(3072)),
    KEY                         `asbie_hash_path_k` (`hash_path`),
    CONSTRAINT `asbie_based_ascc_manifest_id_fk` FOREIGN KEY (`based_ascc_manifest_id`) REFERENCES `ascc_manifest` (`ascc_manifest_id`),
    CONSTRAINT `asbie_created_by_fk` FOREIGN KEY (`created_by`) REFERENCES `app_user` (`app_user_id`),
    CONSTRAINT `asbie_from_abie_id_fk` FOREIGN KEY (`from_abie_id`) REFERENCES `abie` (`abie_id`),
    CONSTRAINT `asbie_last_updated_by_fk` FOREIGN KEY (`last_updated_by`) REFERENCES `app_user` (`app_user_id`),
    CONSTRAINT `asbie_owner_top_level_asbiep_id_fk` FOREIGN KEY (`owner_top_level_asbiep_id`) REFERENCES `top_level_asbiep` (`top_level_asbiep_id`),
    CONSTRAINT `asbie_to_asbiep_id_fk` FOREIGN KEY (`to_asbiep_id`) REFERENCES `asbiep` (`asbiep_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_general_ci COMMENT='An ASBIE represents a relationship/association between two ABIEs through an ASBIEP. It is a contextualization of an ASCC.';