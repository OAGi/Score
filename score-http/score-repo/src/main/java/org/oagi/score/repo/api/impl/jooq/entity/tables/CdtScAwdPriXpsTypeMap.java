/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.oagi.score.repo.api.impl.jooq.entity.Keys;
import org.oagi.score.repo.api.impl.jooq.entity.Oagi;
import org.oagi.score.repo.api.impl.jooq.entity.tables.records.CdtScAwdPriXpsTypeMapRecord;


/**
 * The purpose of this table is the same as that of the CDT_AWD_PRI_XPS_TYPE_MAP, 
 * but it is for the supplementary component (    SC). It allows for the concrete 
 * mapping between the CDT Primitives and types in a particular expression 
 * such as XML Schema, JSON. 
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CdtScAwdPriXpsTypeMap extends TableImpl<CdtScAwdPriXpsTypeMapRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>oagi.cdt_sc_awd_pri_xps_type_map</code>
     */
    public static final CdtScAwdPriXpsTypeMap CDT_SC_AWD_PRI_XPS_TYPE_MAP = new CdtScAwdPriXpsTypeMap();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CdtScAwdPriXpsTypeMapRecord> getRecordType() {
        return CdtScAwdPriXpsTypeMapRecord.class;
    }

    /**
     * The column <code>oagi.cdt_sc_awd_pri_xps_type_map.cdt_sc_awd_pri_xps_type_map_id</code>. Internal, primary database key.
     */
    public final TableField<CdtScAwdPriXpsTypeMapRecord, ULong> CDT_SC_AWD_PRI_XPS_TYPE_MAP_ID = createField(DSL.name("cdt_sc_awd_pri_xps_type_map_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "Internal, primary database key.");

    /**
     * The column <code>oagi.cdt_sc_awd_pri_xps_type_map.cdt_sc_awd_pri_id</code>. Foreign key to the CDT_SC_AWD_PRI table.
     */
    public final TableField<CdtScAwdPriXpsTypeMapRecord, ULong> CDT_SC_AWD_PRI_ID = createField(DSL.name("cdt_sc_awd_pri_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "Foreign key to the CDT_SC_AWD_PRI table.");

    /**
     * The column <code>oagi.cdt_sc_awd_pri_xps_type_map.xbt_id</code>. Foreign key to the Xbt table. It identifies an XML schema built-in type that maps to the CDT SC Allowed Primitive identified in the CDT_SC_AWD_PRI column.
     */
    public final TableField<CdtScAwdPriXpsTypeMapRecord, ULong> XBT_ID = createField(DSL.name("xbt_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "Foreign key to the Xbt table. It identifies an XML schema built-in type that maps to the CDT SC Allowed Primitive identified in the CDT_SC_AWD_PRI column.");

    private CdtScAwdPriXpsTypeMap(Name alias, Table<CdtScAwdPriXpsTypeMapRecord> aliased) {
        this(alias, aliased, null);
    }

    private CdtScAwdPriXpsTypeMap(Name alias, Table<CdtScAwdPriXpsTypeMapRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("The purpose of this table is the same as that of the CDT_AWD_PRI_XPS_TYPE_MAP, but it is for the supplementary component (SC). It allows for the concrete mapping between the CDT Primitives and types in a particular expression such as XML Schema, JSON. "), TableOptions.table());
    }

    /**
     * Create an aliased <code>oagi.cdt_sc_awd_pri_xps_type_map</code> table reference
     */
    public CdtScAwdPriXpsTypeMap(String alias) {
        this(DSL.name(alias), CDT_SC_AWD_PRI_XPS_TYPE_MAP);
    }

    /**
     * Create an aliased <code>oagi.cdt_sc_awd_pri_xps_type_map</code> table reference
     */
    public CdtScAwdPriXpsTypeMap(Name alias) {
        this(alias, CDT_SC_AWD_PRI_XPS_TYPE_MAP);
    }

    /**
     * Create a <code>oagi.cdt_sc_awd_pri_xps_type_map</code> table reference
     */
    public CdtScAwdPriXpsTypeMap() {
        this(DSL.name("cdt_sc_awd_pri_xps_type_map"), null);
    }

    public <O extends Record> CdtScAwdPriXpsTypeMap(Table<O> child, ForeignKey<O, CdtScAwdPriXpsTypeMapRecord> key) {
        super(child, key, CDT_SC_AWD_PRI_XPS_TYPE_MAP);
    }

    @Override
    public Schema getSchema() {
        return Oagi.OAGI;
    }

    @Override
    public Identity<CdtScAwdPriXpsTypeMapRecord, ULong> getIdentity() {
        return (Identity<CdtScAwdPriXpsTypeMapRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CdtScAwdPriXpsTypeMapRecord> getPrimaryKey() {
        return Keys.KEY_CDT_SC_AWD_PRI_XPS_TYPE_MAP_PRIMARY;
    }

    @Override
    public List<UniqueKey<CdtScAwdPriXpsTypeMapRecord>> getKeys() {
        return Arrays.<UniqueKey<CdtScAwdPriXpsTypeMapRecord>>asList(Keys.KEY_CDT_SC_AWD_PRI_XPS_TYPE_MAP_PRIMARY);
    }

    @Override
    public List<ForeignKey<CdtScAwdPriXpsTypeMapRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CdtScAwdPriXpsTypeMapRecord, ?>>asList(Keys.CDT_SC_AWD_PRI_XPS_TYPE_MAP_CDT_SC_AWD_PRI_ID_FK, Keys.CDT_SC_AWD_PRI_XPS_TYPE_MAP_XBT_ID_FK);
    }

    public CdtScAwdPri cdtScAwdPri() {
        return new CdtScAwdPri(this, Keys.CDT_SC_AWD_PRI_XPS_TYPE_MAP_CDT_SC_AWD_PRI_ID_FK);
    }

    public Xbt xbt() {
        return new Xbt(this, Keys.CDT_SC_AWD_PRI_XPS_TYPE_MAP_XBT_ID_FK);
    }

    @Override
    public CdtScAwdPriXpsTypeMap as(String alias) {
        return new CdtScAwdPriXpsTypeMap(DSL.name(alias), this);
    }

    @Override
    public CdtScAwdPriXpsTypeMap as(Name alias) {
        return new CdtScAwdPriXpsTypeMap(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CdtScAwdPriXpsTypeMap rename(String name) {
        return new CdtScAwdPriXpsTypeMap(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CdtScAwdPriXpsTypeMap rename(Name name) {
        return new CdtScAwdPriXpsTypeMap(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<ULong, ULong, ULong> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
