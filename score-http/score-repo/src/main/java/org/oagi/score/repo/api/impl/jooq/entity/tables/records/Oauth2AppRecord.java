/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.oagi.score.repo.api.impl.jooq.entity.tables.Oauth2App;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Oauth2AppRecord extends UpdatableRecordImpl<Oauth2AppRecord> implements Record18<ULong, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, Integer, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.oauth2_app.oauth2_app_id</code>.
     */
    public void setOauth2AppId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.oauth2_app_id</code>.
     */
    public ULong getOauth2AppId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>oagi.oauth2_app.provider_name</code>.
     */
    public void setProviderName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.provider_name</code>.
     */
    public String getProviderName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>oagi.oauth2_app.issuer_uri</code>.
     */
    public void setIssuerUri(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.issuer_uri</code>.
     */
    public String getIssuerUri() {
        return (String) get(2);
    }

    /**
     * Setter for <code>oagi.oauth2_app.authorization_uri</code>.
     */
    public void setAuthorizationUri(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.authorization_uri</code>.
     */
    public String getAuthorizationUri() {
        return (String) get(3);
    }

    /**
     * Setter for <code>oagi.oauth2_app.token_uri</code>.
     */
    public void setTokenUri(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.token_uri</code>.
     */
    public String getTokenUri() {
        return (String) get(4);
    }

    /**
     * Setter for <code>oagi.oauth2_app.user_info_uri</code>.
     */
    public void setUserInfoUri(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.user_info_uri</code>.
     */
    public String getUserInfoUri() {
        return (String) get(5);
    }

    /**
     * Setter for <code>oagi.oauth2_app.jwk_set_uri</code>.
     */
    public void setJwkSetUri(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.jwk_set_uri</code>.
     */
    public String getJwkSetUri() {
        return (String) get(6);
    }

    /**
     * Setter for <code>oagi.oauth2_app.redirect_uri</code>.
     */
    public void setRedirectUri(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.redirect_uri</code>.
     */
    public String getRedirectUri() {
        return (String) get(7);
    }

    /**
     * Setter for <code>oagi.oauth2_app.client_id</code>.
     */
    public void setClientId(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.client_id</code>.
     */
    public String getClientId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>oagi.oauth2_app.client_secret</code>.
     */
    public void setClientSecret(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.client_secret</code>.
     */
    public String getClientSecret() {
        return (String) get(9);
    }

    /**
     * Setter for <code>oagi.oauth2_app.client_authentication_method</code>.
     */
    public void setClientAuthenticationMethod(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.client_authentication_method</code>.
     */
    public String getClientAuthenticationMethod() {
        return (String) get(10);
    }

    /**
     * Setter for <code>oagi.oauth2_app.authorization_grant_type</code>.
     */
    public void setAuthorizationGrantType(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.authorization_grant_type</code>.
     */
    public String getAuthorizationGrantType() {
        return (String) get(11);
    }

    /**
     * Setter for <code>oagi.oauth2_app.prompt</code>.
     */
    public void setPrompt(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.prompt</code>.
     */
    public String getPrompt() {
        return (String) get(12);
    }

    /**
     * Setter for <code>oagi.oauth2_app.display_provider_name</code>.
     */
    public void setDisplayProviderName(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.display_provider_name</code>.
     */
    public String getDisplayProviderName() {
        return (String) get(13);
    }

    /**
     * Setter for <code>oagi.oauth2_app.background_color</code>.
     */
    public void setBackgroundColor(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.background_color</code>.
     */
    public String getBackgroundColor() {
        return (String) get(14);
    }

    /**
     * Setter for <code>oagi.oauth2_app.font_color</code>.
     */
    public void setFontColor(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.font_color</code>.
     */
    public String getFontColor() {
        return (String) get(15);
    }

    /**
     * Setter for <code>oagi.oauth2_app.display_order</code>.
     */
    public void setDisplayOrder(Integer value) {
        set(16, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.display_order</code>.
     */
    public Integer getDisplayOrder() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>oagi.oauth2_app.is_disabled</code>.
     */
    public void setIsDisabled(Byte value) {
        set(17, value);
    }

    /**
     * Getter for <code>oagi.oauth2_app.is_disabled</code>.
     */
    public Byte getIsDisabled() {
        return (Byte) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row18<ULong, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, Integer, Byte> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    @Override
    public Row18<ULong, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, Integer, Byte> valuesRow() {
        return (Row18) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return Oauth2App.OAUTH2_APP.OAUTH2_APP_ID;
    }

    @Override
    public Field<String> field2() {
        return Oauth2App.OAUTH2_APP.PROVIDER_NAME;
    }

    @Override
    public Field<String> field3() {
        return Oauth2App.OAUTH2_APP.ISSUER_URI;
    }

    @Override
    public Field<String> field4() {
        return Oauth2App.OAUTH2_APP.AUTHORIZATION_URI;
    }

    @Override
    public Field<String> field5() {
        return Oauth2App.OAUTH2_APP.TOKEN_URI;
    }

    @Override
    public Field<String> field6() {
        return Oauth2App.OAUTH2_APP.USER_INFO_URI;
    }

    @Override
    public Field<String> field7() {
        return Oauth2App.OAUTH2_APP.JWK_SET_URI;
    }

    @Override
    public Field<String> field8() {
        return Oauth2App.OAUTH2_APP.REDIRECT_URI;
    }

    @Override
    public Field<String> field9() {
        return Oauth2App.OAUTH2_APP.CLIENT_ID;
    }

    @Override
    public Field<String> field10() {
        return Oauth2App.OAUTH2_APP.CLIENT_SECRET;
    }

    @Override
    public Field<String> field11() {
        return Oauth2App.OAUTH2_APP.CLIENT_AUTHENTICATION_METHOD;
    }

    @Override
    public Field<String> field12() {
        return Oauth2App.OAUTH2_APP.AUTHORIZATION_GRANT_TYPE;
    }

    @Override
    public Field<String> field13() {
        return Oauth2App.OAUTH2_APP.PROMPT;
    }

    @Override
    public Field<String> field14() {
        return Oauth2App.OAUTH2_APP.DISPLAY_PROVIDER_NAME;
    }

    @Override
    public Field<String> field15() {
        return Oauth2App.OAUTH2_APP.BACKGROUND_COLOR;
    }

    @Override
    public Field<String> field16() {
        return Oauth2App.OAUTH2_APP.FONT_COLOR;
    }

    @Override
    public Field<Integer> field17() {
        return Oauth2App.OAUTH2_APP.DISPLAY_ORDER;
    }

    @Override
    public Field<Byte> field18() {
        return Oauth2App.OAUTH2_APP.IS_DISABLED;
    }

    @Override
    public ULong component1() {
        return getOauth2AppId();
    }

    @Override
    public String component2() {
        return getProviderName();
    }

    @Override
    public String component3() {
        return getIssuerUri();
    }

    @Override
    public String component4() {
        return getAuthorizationUri();
    }

    @Override
    public String component5() {
        return getTokenUri();
    }

    @Override
    public String component6() {
        return getUserInfoUri();
    }

    @Override
    public String component7() {
        return getJwkSetUri();
    }

    @Override
    public String component8() {
        return getRedirectUri();
    }

    @Override
    public String component9() {
        return getClientId();
    }

    @Override
    public String component10() {
        return getClientSecret();
    }

    @Override
    public String component11() {
        return getClientAuthenticationMethod();
    }

    @Override
    public String component12() {
        return getAuthorizationGrantType();
    }

    @Override
    public String component13() {
        return getPrompt();
    }

    @Override
    public String component14() {
        return getDisplayProviderName();
    }

    @Override
    public String component15() {
        return getBackgroundColor();
    }

    @Override
    public String component16() {
        return getFontColor();
    }

    @Override
    public Integer component17() {
        return getDisplayOrder();
    }

    @Override
    public Byte component18() {
        return getIsDisabled();
    }

    @Override
    public ULong value1() {
        return getOauth2AppId();
    }

    @Override
    public String value2() {
        return getProviderName();
    }

    @Override
    public String value3() {
        return getIssuerUri();
    }

    @Override
    public String value4() {
        return getAuthorizationUri();
    }

    @Override
    public String value5() {
        return getTokenUri();
    }

    @Override
    public String value6() {
        return getUserInfoUri();
    }

    @Override
    public String value7() {
        return getJwkSetUri();
    }

    @Override
    public String value8() {
        return getRedirectUri();
    }

    @Override
    public String value9() {
        return getClientId();
    }

    @Override
    public String value10() {
        return getClientSecret();
    }

    @Override
    public String value11() {
        return getClientAuthenticationMethod();
    }

    @Override
    public String value12() {
        return getAuthorizationGrantType();
    }

    @Override
    public String value13() {
        return getPrompt();
    }

    @Override
    public String value14() {
        return getDisplayProviderName();
    }

    @Override
    public String value15() {
        return getBackgroundColor();
    }

    @Override
    public String value16() {
        return getFontColor();
    }

    @Override
    public Integer value17() {
        return getDisplayOrder();
    }

    @Override
    public Byte value18() {
        return getIsDisabled();
    }

    @Override
    public Oauth2AppRecord value1(ULong value) {
        setOauth2AppId(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value2(String value) {
        setProviderName(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value3(String value) {
        setIssuerUri(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value4(String value) {
        setAuthorizationUri(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value5(String value) {
        setTokenUri(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value6(String value) {
        setUserInfoUri(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value7(String value) {
        setJwkSetUri(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value8(String value) {
        setRedirectUri(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value9(String value) {
        setClientId(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value10(String value) {
        setClientSecret(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value11(String value) {
        setClientAuthenticationMethod(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value12(String value) {
        setAuthorizationGrantType(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value13(String value) {
        setPrompt(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value14(String value) {
        setDisplayProviderName(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value15(String value) {
        setBackgroundColor(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value16(String value) {
        setFontColor(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value17(Integer value) {
        setDisplayOrder(value);
        return this;
    }

    @Override
    public Oauth2AppRecord value18(Byte value) {
        setIsDisabled(value);
        return this;
    }

    @Override
    public Oauth2AppRecord values(ULong value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, String value13, String value14, String value15, String value16, Integer value17, Byte value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Oauth2AppRecord
     */
    public Oauth2AppRecord() {
        super(Oauth2App.OAUTH2_APP);
    }

    /**
     * Create a detached, initialised Oauth2AppRecord
     */
    public Oauth2AppRecord(ULong oauth2AppId, String providerName, String issuerUri, String authorizationUri, String tokenUri, String userInfoUri, String jwkSetUri, String redirectUri, String clientId, String clientSecret, String clientAuthenticationMethod, String authorizationGrantType, String prompt, String displayProviderName, String backgroundColor, String fontColor, Integer displayOrder, Byte isDisabled) {
        super(Oauth2App.OAUTH2_APP);

        setOauth2AppId(oauth2AppId);
        setProviderName(providerName);
        setIssuerUri(issuerUri);
        setAuthorizationUri(authorizationUri);
        setTokenUri(tokenUri);
        setUserInfoUri(userInfoUri);
        setJwkSetUri(jwkSetUri);
        setRedirectUri(redirectUri);
        setClientId(clientId);
        setClientSecret(clientSecret);
        setClientAuthenticationMethod(clientAuthenticationMethod);
        setAuthorizationGrantType(authorizationGrantType);
        setPrompt(prompt);
        setDisplayProviderName(displayProviderName);
        setBackgroundColor(backgroundColor);
        setFontColor(fontColor);
        setDisplayOrder(displayOrder);
        setIsDisabled(isDisabled);
    }
}
