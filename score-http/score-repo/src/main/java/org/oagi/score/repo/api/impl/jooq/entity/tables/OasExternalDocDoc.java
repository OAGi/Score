/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.function.Function;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function6;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.oagi.score.repo.api.impl.jooq.entity.Keys;
import org.oagi.score.repo.api.impl.jooq.entity.Oagi;
import org.oagi.score.repo.api.impl.jooq.entity.tables.records.OasExternalDocDocRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OasExternalDocDoc extends TableImpl<OasExternalDocDocRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>oagi.oas_external_doc_doc</code>
     */
    public static final OasExternalDocDoc OAS_EXTERNAL_DOC_DOC = new OasExternalDocDoc();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OasExternalDocDocRecord> getRecordType() {
        return OasExternalDocDocRecord.class;
    }

    /**
     * The column <code>oagi.oas_external_doc_doc.oas_external_doc_id</code>.
     * The primary key of the record.
     */
    public final TableField<OasExternalDocDocRecord, ULong> OAS_EXTERNAL_DOC_ID = createField(DSL.name("oas_external_doc_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The primary key of the record.");

    /**
     * The column <code>oagi.oas_external_doc_doc.oas_doc_id</code>. The primary
     * key of the record.
     */
    public final TableField<OasExternalDocDocRecord, ULong> OAS_DOC_ID = createField(DSL.name("oas_doc_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The primary key of the record.");

    /**
     * The column <code>oagi.oas_external_doc_doc.created_by</code>. The user
     * who creates the record.
     */
    public final TableField<OasExternalDocDocRecord, ULong> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The user who creates the record.");

    /**
     * The column <code>oagi.oas_external_doc_doc.last_updated_by</code>. The
     * user who last updates the record.
     */
    public final TableField<OasExternalDocDocRecord, ULong> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The user who last updates the record.");

    /**
     * The column <code>oagi.oas_external_doc_doc.creation_timestamp</code>. The
     * timestamp when the record is created.
     */
    public final TableField<OasExternalDocDocRecord, LocalDateTime> CREATION_TIMESTAMP = createField(DSL.name("creation_timestamp"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "The timestamp when the record is created.");

    /**
     * The column <code>oagi.oas_external_doc_doc.last_update_timestamp</code>.
     * The timestamp when the record is last updated.
     */
    public final TableField<OasExternalDocDocRecord, LocalDateTime> LAST_UPDATE_TIMESTAMP = createField(DSL.name("last_update_timestamp"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "The timestamp when the record is last updated.");

    private OasExternalDocDoc(Name alias, Table<OasExternalDocDocRecord> aliased) {
        this(alias, aliased, null);
    }

    private OasExternalDocDoc(Name alias, Table<OasExternalDocDocRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>oagi.oas_external_doc_doc</code> table reference
     */
    public OasExternalDocDoc(String alias) {
        this(DSL.name(alias), OAS_EXTERNAL_DOC_DOC);
    }

    /**
     * Create an aliased <code>oagi.oas_external_doc_doc</code> table reference
     */
    public OasExternalDocDoc(Name alias) {
        this(alias, OAS_EXTERNAL_DOC_DOC);
    }

    /**
     * Create a <code>oagi.oas_external_doc_doc</code> table reference
     */
    public OasExternalDocDoc() {
        this(DSL.name("oas_external_doc_doc"), null);
    }

    public <O extends Record> OasExternalDocDoc(Table<O> child, ForeignKey<O, OasExternalDocDocRecord> key) {
        super(child, key, OAS_EXTERNAL_DOC_DOC);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Oagi.OAGI;
    }

    @Override
    public UniqueKey<OasExternalDocDocRecord> getPrimaryKey() {
        return Keys.KEY_OAS_EXTERNAL_DOC_DOC_PRIMARY;
    }

    @Override
    public List<ForeignKey<OasExternalDocDocRecord, ?>> getReferences() {
        return Arrays.asList(Keys.OAS_EXTERNAL_DOC_OAS_EXTERNAL_DOC_ID_FK, Keys.OAS_EXTERNAL_DOC_OAS_DOC_ID_FK, Keys.OAS_EXTERNAL_DOC_DOC_CREATED_BY_FK, Keys.OAS_EXTERNAL_DOC_DOC_LAST_UPDATED_BY_FK);
    }

    private transient OasExternalDoc _oasExternalDoc;
    private transient OasDoc _oasDoc;
    private transient AppUser _oasExternalDocDocCreatedByFk;
    private transient AppUser _oasExternalDocDocLastUpdatedByFk;

    /**
     * Get the implicit join path to the <code>oagi.oas_external_doc</code>
     * table.
     */
    public OasExternalDoc oasExternalDoc() {
        if (_oasExternalDoc == null)
            _oasExternalDoc = new OasExternalDoc(this, Keys.OAS_EXTERNAL_DOC_OAS_EXTERNAL_DOC_ID_FK);

        return _oasExternalDoc;
    }

    /**
     * Get the implicit join path to the <code>oagi.oas_doc</code> table.
     */
    public OasDoc oasDoc() {
        if (_oasDoc == null)
            _oasDoc = new OasDoc(this, Keys.OAS_EXTERNAL_DOC_OAS_DOC_ID_FK);

        return _oasDoc;
    }

    /**
     * Get the implicit join path to the <code>oagi.app_user</code> table, via
     * the <code>oas_external_doc_doc_created_by_fk</code> key.
     */
    public AppUser oasExternalDocDocCreatedByFk() {
        if (_oasExternalDocDocCreatedByFk == null)
            _oasExternalDocDocCreatedByFk = new AppUser(this, Keys.OAS_EXTERNAL_DOC_DOC_CREATED_BY_FK);

        return _oasExternalDocDocCreatedByFk;
    }

    /**
     * Get the implicit join path to the <code>oagi.app_user</code> table, via
     * the <code>oas_external_doc_doc_last_updated_by_fk</code> key.
     */
    public AppUser oasExternalDocDocLastUpdatedByFk() {
        if (_oasExternalDocDocLastUpdatedByFk == null)
            _oasExternalDocDocLastUpdatedByFk = new AppUser(this, Keys.OAS_EXTERNAL_DOC_DOC_LAST_UPDATED_BY_FK);

        return _oasExternalDocDocLastUpdatedByFk;
    }

    @Override
    public OasExternalDocDoc as(String alias) {
        return new OasExternalDocDoc(DSL.name(alias), this);
    }

    @Override
    public OasExternalDocDoc as(Name alias) {
        return new OasExternalDocDoc(alias, this);
    }

    @Override
    public OasExternalDocDoc as(Table<?> alias) {
        return new OasExternalDocDoc(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public OasExternalDocDoc rename(String name) {
        return new OasExternalDocDoc(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OasExternalDocDoc rename(Name name) {
        return new OasExternalDocDoc(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public OasExternalDocDoc rename(Table<?> name) {
        return new OasExternalDocDoc(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<ULong, ULong, ULong, ULong, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function6<? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super LocalDateTime, ? super LocalDateTime, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function6<? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super LocalDateTime, ? super LocalDateTime, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
