/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.oagi.score.repo.api.impl.jooq.entity.tables.Tenant;


/**
 * This table about the user tenant role.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TenantRecord extends UpdatableRecordImpl<TenantRecord> implements Record2<ULong, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.tenant.tenant_id</code>. Primary key column.
     */
    public void setTenantId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.tenant.tenant_id</code>. Primary key column.
     */
    public ULong getTenantId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>oagi.tenant.name</code>. The name of the tenant.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.tenant.name</code>. The name of the tenant.
     */
    public String getName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<ULong, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<ULong, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return Tenant.TENANT.TENANT_ID;
    }

    @Override
    public Field<String> field2() {
        return Tenant.TENANT.NAME;
    }

    @Override
    public ULong component1() {
        return getTenantId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public ULong value1() {
        return getTenantId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public TenantRecord value1(ULong value) {
        setTenantId(value);
        return this;
    }

    @Override
    public TenantRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public TenantRecord values(ULong value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TenantRecord
     */
    public TenantRecord() {
        super(Tenant.TENANT);
    }

    /**
     * Create a detached, initialised TenantRecord
     */
    public TenantRecord(ULong tenantId, String name) {
        super(Tenant.TENANT);

        setTenantId(tenantId);
        setName(name);
        resetChangedOnNotNull();
    }
}
