/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.InverseForeignKey;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.oagi.score.repo.api.impl.jooq.entity.Keys;
import org.oagi.score.repo.api.impl.jooq.entity.Oagi;
import org.oagi.score.repo.api.impl.jooq.entity.tables.AppUser.AppUserPath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.OasMessageBody.OasMessageBodyPath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.OasOperation.OasOperationPath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.OasParameter.OasParameterPath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.OasRequestParameter.OasRequestParameterPath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.TopLevelAsbiep.TopLevelAsbiepPath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.records.OasRequestRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OasRequest extends TableImpl<OasRequestRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>oagi.oas_request</code>
     */
    public static final OasRequest OAS_REQUEST = new OasRequest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OasRequestRecord> getRecordType() {
        return OasRequestRecord.class;
    }

    /**
     * The column <code>oagi.oas_request.oas_request_id</code>. The primary key
     * of the record.
     */
    public final TableField<OasRequestRecord, ULong> OAS_REQUEST_ID = createField(DSL.name("oas_request_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "The primary key of the record.");

    /**
     * The column <code>oagi.oas_request.oas_operation_id</code>.
     */
    public final TableField<OasRequestRecord, ULong> OAS_OPERATION_ID = createField(DSL.name("oas_operation_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>oagi.oas_request.description</code>. A brief description
     * of the request body. This could contain examples of use. CommonMark
     * syntax MAY be used for rich text representation.
     */
    public final TableField<OasRequestRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.CLOB.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.CLOB)), this, "A brief description of the request body. This could contain examples of use. CommonMark syntax MAY be used for rich text representation.");

    /**
     * The column <code>oagi.oas_request.required</code>. Determines if the
     * request body is required in the request. Defaults to false.
     */
    public final TableField<OasRequestRecord, Byte> REQUIRED = createField(DSL.name("required"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.field(DSL.raw("0"), SQLDataType.TINYINT)), this, "Determines if the request body is required in the request. Defaults to false.");

    /**
     * The column <code>oagi.oas_request.oas_message_body_id</code>.
     */
    public final TableField<OasRequestRecord, ULong> OAS_MESSAGE_BODY_ID = createField(DSL.name("oas_message_body_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>oagi.oas_request.make_array_indicator</code>.
     */
    public final TableField<OasRequestRecord, Byte> MAKE_ARRAY_INDICATOR = createField(DSL.name("make_array_indicator"), SQLDataType.TINYINT.defaultValue(DSL.field(DSL.raw("0"), SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>oagi.oas_request.suppress_root_indicator</code>.
     */
    public final TableField<OasRequestRecord, Byte> SUPPRESS_ROOT_INDICATOR = createField(DSL.name("suppress_root_indicator"), SQLDataType.TINYINT.defaultValue(DSL.field(DSL.raw("0"), SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>oagi.oas_request.meta_header_top_level_asbiep_id</code>.
     */
    public final TableField<OasRequestRecord, ULong> META_HEADER_TOP_LEVEL_ASBIEP_ID = createField(DSL.name("meta_header_top_level_asbiep_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>oagi.oas_request.pagination_top_level_asbiep_id</code>.
     */
    public final TableField<OasRequestRecord, ULong> PAGINATION_TOP_LEVEL_ASBIEP_ID = createField(DSL.name("pagination_top_level_asbiep_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>oagi.oas_request.is_callback</code>. If is_callback ==
     * true, oas_callback table has URL rows in it, with eventType=Success or
     * Failed values to allow different endpoints to be called when a successful
     * request is processed, or failure endpoint when an exception occurs.
     */
    public final TableField<OasRequestRecord, Byte> IS_CALLBACK = createField(DSL.name("is_callback"), SQLDataType.TINYINT.defaultValue(DSL.field(DSL.raw("0"), SQLDataType.TINYINT)), this, "If is_callback == true, oas_callback table has URL rows in it, with eventType=Success or Failed values to allow different endpoints to be called when a successful request is processed, or failure endpoint when an exception occurs.");

    /**
     * The column <code>oagi.oas_request.created_by</code>. The user who creates
     * the record.
     */
    public final TableField<OasRequestRecord, ULong> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The user who creates the record.");

    /**
     * The column <code>oagi.oas_request.last_updated_by</code>. The user who
     * last updates the record.
     */
    public final TableField<OasRequestRecord, ULong> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The user who last updates the record.");

    /**
     * The column <code>oagi.oas_request.creation_timestamp</code>. The
     * timestamp when the record is created.
     */
    public final TableField<OasRequestRecord, LocalDateTime> CREATION_TIMESTAMP = createField(DSL.name("creation_timestamp"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "The timestamp when the record is created.");

    /**
     * The column <code>oagi.oas_request.last_update_timestamp</code>. The
     * timestamp when the record is last updated.
     */
    public final TableField<OasRequestRecord, LocalDateTime> LAST_UPDATE_TIMESTAMP = createField(DSL.name("last_update_timestamp"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "The timestamp when the record is last updated.");

    private OasRequest(Name alias, Table<OasRequestRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private OasRequest(Name alias, Table<OasRequestRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>oagi.oas_request</code> table reference
     */
    public OasRequest(String alias) {
        this(DSL.name(alias), OAS_REQUEST);
    }

    /**
     * Create an aliased <code>oagi.oas_request</code> table reference
     */
    public OasRequest(Name alias) {
        this(alias, OAS_REQUEST);
    }

    /**
     * Create a <code>oagi.oas_request</code> table reference
     */
    public OasRequest() {
        this(DSL.name("oas_request"), null);
    }

    public <O extends Record> OasRequest(Table<O> path, ForeignKey<O, OasRequestRecord> childPath, InverseForeignKey<O, OasRequestRecord> parentPath) {
        super(path, childPath, parentPath, OAS_REQUEST);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class OasRequestPath extends OasRequest implements Path<OasRequestRecord> {

        private static final long serialVersionUID = 1L;
        public <O extends Record> OasRequestPath(Table<O> path, ForeignKey<O, OasRequestRecord> childPath, InverseForeignKey<O, OasRequestRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private OasRequestPath(Name alias, Table<OasRequestRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public OasRequestPath as(String alias) {
            return new OasRequestPath(DSL.name(alias), this);
        }

        @Override
        public OasRequestPath as(Name alias) {
            return new OasRequestPath(alias, this);
        }

        @Override
        public OasRequestPath as(Table<?> alias) {
            return new OasRequestPath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Oagi.OAGI;
    }

    @Override
    public Identity<OasRequestRecord, ULong> getIdentity() {
        return (Identity<OasRequestRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<OasRequestRecord> getPrimaryKey() {
        return Keys.KEY_OAS_REQUEST_PRIMARY;
    }

    @Override
    public List<ForeignKey<OasRequestRecord, ?>> getReferences() {
        return Arrays.asList(Keys.OAS_REQUEST_CREATED_BY_FK, Keys.OAS_REQUEST_LAST_UPDATED_BY_FK, Keys.OAS_REQUEST_META_HEADER_TOP_LEVEL_ASBIEP_ID_FK, Keys.OAS_REQUEST_OAS_MESSAGE_BODY_ID_FK, Keys.OAS_REQUEST_OAS_OPERATION_ID_FK, Keys.OAS_REQUEST_PAGINATION_TOP_LEVEL_ASBIEP_ID_FK);
    }

    private transient AppUserPath _oasRequestCreatedByFk;

    /**
     * Get the implicit join path to the <code>oagi.app_user</code> table, via
     * the <code>oas_request_created_by_fk</code> key.
     */
    public AppUserPath oasRequestCreatedByFk() {
        if (_oasRequestCreatedByFk == null)
            _oasRequestCreatedByFk = new AppUserPath(this, Keys.OAS_REQUEST_CREATED_BY_FK, null);

        return _oasRequestCreatedByFk;
    }

    private transient AppUserPath _oasRequestLastUpdatedByFk;

    /**
     * Get the implicit join path to the <code>oagi.app_user</code> table, via
     * the <code>oas_request_last_updated_by_fk</code> key.
     */
    public AppUserPath oasRequestLastUpdatedByFk() {
        if (_oasRequestLastUpdatedByFk == null)
            _oasRequestLastUpdatedByFk = new AppUserPath(this, Keys.OAS_REQUEST_LAST_UPDATED_BY_FK, null);

        return _oasRequestLastUpdatedByFk;
    }

    private transient TopLevelAsbiepPath _oasRequestMetaHeaderTopLevelAsbiepIdFk;

    /**
     * Get the implicit join path to the <code>oagi.top_level_asbiep</code>
     * table, via the
     * <code>oas_request_meta_header_top_level_asbiep_id_fk</code> key.
     */
    public TopLevelAsbiepPath oasRequestMetaHeaderTopLevelAsbiepIdFk() {
        if (_oasRequestMetaHeaderTopLevelAsbiepIdFk == null)
            _oasRequestMetaHeaderTopLevelAsbiepIdFk = new TopLevelAsbiepPath(this, Keys.OAS_REQUEST_META_HEADER_TOP_LEVEL_ASBIEP_ID_FK, null);

        return _oasRequestMetaHeaderTopLevelAsbiepIdFk;
    }

    private transient OasMessageBodyPath _oasMessageBody;

    /**
     * Get the implicit join path to the <code>oagi.oas_message_body</code>
     * table.
     */
    public OasMessageBodyPath oasMessageBody() {
        if (_oasMessageBody == null)
            _oasMessageBody = new OasMessageBodyPath(this, Keys.OAS_REQUEST_OAS_MESSAGE_BODY_ID_FK, null);

        return _oasMessageBody;
    }

    private transient OasOperationPath _oasOperation;

    /**
     * Get the implicit join path to the <code>oagi.oas_operation</code> table.
     */
    public OasOperationPath oasOperation() {
        if (_oasOperation == null)
            _oasOperation = new OasOperationPath(this, Keys.OAS_REQUEST_OAS_OPERATION_ID_FK, null);

        return _oasOperation;
    }

    private transient TopLevelAsbiepPath _oasRequestPaginationTopLevelAsbiepIdFk;

    /**
     * Get the implicit join path to the <code>oagi.top_level_asbiep</code>
     * table, via the <code>oas_request_pagination_top_level_asbiep_id_fk</code>
     * key.
     */
    public TopLevelAsbiepPath oasRequestPaginationTopLevelAsbiepIdFk() {
        if (_oasRequestPaginationTopLevelAsbiepIdFk == null)
            _oasRequestPaginationTopLevelAsbiepIdFk = new TopLevelAsbiepPath(this, Keys.OAS_REQUEST_PAGINATION_TOP_LEVEL_ASBIEP_ID_FK, null);

        return _oasRequestPaginationTopLevelAsbiepIdFk;
    }

    private transient OasRequestParameterPath _oasRequestParameter;

    /**
     * Get the implicit to-many join path to the
     * <code>oagi.oas_request_parameter</code> table
     */
    public OasRequestParameterPath oasRequestParameter() {
        if (_oasRequestParameter == null)
            _oasRequestParameter = new OasRequestParameterPath(this, null, Keys.OAS_REQUEST_PARAMETER_OAS_REQUEST_ID_FK.getInverseKey());

        return _oasRequestParameter;
    }

    /**
     * Get the implicit many-to-many join path to the
     * <code>oagi.oas_parameter</code> table
     */
    public OasParameterPath oasParameter() {
        return oasRequestParameter().oasParameter();
    }

    @Override
    public OasRequest as(String alias) {
        return new OasRequest(DSL.name(alias), this);
    }

    @Override
    public OasRequest as(Name alias) {
        return new OasRequest(alias, this);
    }

    @Override
    public OasRequest as(Table<?> alias) {
        return new OasRequest(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public OasRequest rename(String name) {
        return new OasRequest(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OasRequest rename(Name name) {
        return new OasRequest(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public OasRequest rename(Table<?> name) {
        return new OasRequest(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasRequest where(Condition condition) {
        return new OasRequest(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasRequest where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasRequest where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasRequest where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OasRequest where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OasRequest where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OasRequest where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OasRequest where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasRequest whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasRequest whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
