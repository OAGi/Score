/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables;


import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.InverseForeignKey;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.oagi.score.repo.api.impl.jooq.entity.Keys;
import org.oagi.score.repo.api.impl.jooq.entity.Oagi;
import org.oagi.score.repo.api.impl.jooq.entity.tables.AgencyIdListManifest.AgencyIdListManifestPath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.Bbie.BbiePath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.CdtAwdPriXpsTypeMap.CdtAwdPriXpsTypeMapPath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.CodeListManifest.CodeListManifestPath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.DtManifest.DtManifestPath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.records.BdtPriRestriRecord;


/**
 * This table captures the allowed primitives for a BDT. The allowed primitives
 * are captured by three columns the CDT_AWD_PRI_XPS_TYPE_MAP_ID, CODE_LIST_ID,
 * and AGENCY_ID_LIST_ID. The first column specifies the primitive by the
 * built-in type of an expression language such as the XML Schema built-in type.
 * The second specifies the primitive, which is a code list, while the last one
 * specifies the primitive which is an agency identification list. Only one
 * column among the three can have a value in a particular record.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BdtPriRestri extends TableImpl<BdtPriRestriRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>oagi.bdt_pri_restri</code>
     */
    public static final BdtPriRestri BDT_PRI_RESTRI = new BdtPriRestri();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BdtPriRestriRecord> getRecordType() {
        return BdtPriRestriRecord.class;
    }

    /**
     * The column <code>oagi.bdt_pri_restri.bdt_pri_restri_id</code>. Primary,
     * internal database key.
     */
    public final TableField<BdtPriRestriRecord, ULong> BDT_PRI_RESTRI_ID = createField(DSL.name("bdt_pri_restri_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "Primary, internal database key.");

    /**
     * The column <code>oagi.bdt_pri_restri.bdt_manifest_id</code>. Foreign key
     * to the DT_MANIFEST table. It shall point to only DT that is a BDT (not a
     * CDT).
     */
    public final TableField<BdtPriRestriRecord, ULong> BDT_MANIFEST_ID = createField(DSL.name("bdt_manifest_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "Foreign key to the DT_MANIFEST table. It shall point to only DT that is a BDT (not a CDT).");

    /**
     * The column <code>oagi.bdt_pri_restri.cdt_awd_pri_xps_type_map_id</code>.
     * This is a foreign key to the CDT_AWD_PRI_XPS_TYPE_MAP table.  It allows
     * for a primitive restriction based on a built-in type of schema
     * expressions.
     */
    public final TableField<BdtPriRestriRecord, ULong> CDT_AWD_PRI_XPS_TYPE_MAP_ID = createField(DSL.name("cdt_awd_pri_xps_type_map_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.BIGINTUNSIGNED)), this, "This is a foreign key to the CDT_AWD_PRI_XPS_TYPE_MAP table.  It allows for a primitive restriction based on a built-in type of schema expressions.");

    /**
     * The column <code>oagi.bdt_pri_restri.code_list_manifest_id</code>.
     * Foreign key to the CODE_LIST_MANIFEST table.
     */
    public final TableField<BdtPriRestriRecord, ULong> CODE_LIST_MANIFEST_ID = createField(DSL.name("code_list_manifest_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.BIGINTUNSIGNED)), this, "Foreign key to the CODE_LIST_MANIFEST table.");

    /**
     * The column <code>oagi.bdt_pri_restri.agency_id_list_manifest_id</code>.
     * This is a foreign key to the AGENCY_ID_LIST_MANIFEST table. It is used in
     * the case that the BDT content can be restricted to an agency
     * identification.
     */
    public final TableField<BdtPriRestriRecord, ULong> AGENCY_ID_LIST_MANIFEST_ID = createField(DSL.name("agency_id_list_manifest_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.BIGINTUNSIGNED)), this, "This is a foreign key to the AGENCY_ID_LIST_MANIFEST table. It is used in the case that the BDT content can be restricted to an agency identification.");

    /**
     * The column <code>oagi.bdt_pri_restri.is_default</code>. This allows
     * overriding the default primitive assigned in the CDT_AWD_PRI_XPS_TYPE_MAP
     * table. It typically indicates the most generic primtive for the data
     * type.
     */
    public final TableField<BdtPriRestriRecord, Byte> IS_DEFAULT = createField(DSL.name("is_default"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.field(DSL.raw("0"), SQLDataType.TINYINT)), this, "This allows overriding the default primitive assigned in the CDT_AWD_PRI_XPS_TYPE_MAP table. It typically indicates the most generic primtive for the data type.");

    private BdtPriRestri(Name alias, Table<BdtPriRestriRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private BdtPriRestri(Name alias, Table<BdtPriRestriRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment("This table captures the allowed primitives for a BDT. The allowed primitives are captured by three columns the CDT_AWD_PRI_XPS_TYPE_MAP_ID, CODE_LIST_ID, and AGENCY_ID_LIST_ID. The first column specifies the primitive by the built-in type of an expression language such as the XML Schema built-in type. The second specifies the primitive, which is a code list, while the last one specifies the primitive which is an agency identification list. Only one column among the three can have a value in a particular record."), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>oagi.bdt_pri_restri</code> table reference
     */
    public BdtPriRestri(String alias) {
        this(DSL.name(alias), BDT_PRI_RESTRI);
    }

    /**
     * Create an aliased <code>oagi.bdt_pri_restri</code> table reference
     */
    public BdtPriRestri(Name alias) {
        this(alias, BDT_PRI_RESTRI);
    }

    /**
     * Create a <code>oagi.bdt_pri_restri</code> table reference
     */
    public BdtPriRestri() {
        this(DSL.name("bdt_pri_restri"), null);
    }

    public <O extends Record> BdtPriRestri(Table<O> path, ForeignKey<O, BdtPriRestriRecord> childPath, InverseForeignKey<O, BdtPriRestriRecord> parentPath) {
        super(path, childPath, parentPath, BDT_PRI_RESTRI);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class BdtPriRestriPath extends BdtPriRestri implements Path<BdtPriRestriRecord> {
        public <O extends Record> BdtPriRestriPath(Table<O> path, ForeignKey<O, BdtPriRestriRecord> childPath, InverseForeignKey<O, BdtPriRestriRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private BdtPriRestriPath(Name alias, Table<BdtPriRestriRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public BdtPriRestriPath as(String alias) {
            return new BdtPriRestriPath(DSL.name(alias), this);
        }

        @Override
        public BdtPriRestriPath as(Name alias) {
            return new BdtPriRestriPath(alias, this);
        }

        @Override
        public BdtPriRestriPath as(Table<?> alias) {
            return new BdtPriRestriPath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Oagi.OAGI;
    }

    @Override
    public Identity<BdtPriRestriRecord, ULong> getIdentity() {
        return (Identity<BdtPriRestriRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<BdtPriRestriRecord> getPrimaryKey() {
        return Keys.KEY_BDT_PRI_RESTRI_PRIMARY;
    }

    @Override
    public List<ForeignKey<BdtPriRestriRecord, ?>> getReferences() {
        return Arrays.asList(Keys.BDT_PRI_RESTRI_BDT_MANIFEST_ID_FK, Keys.BDT_PRI_RESTRI_CDT_AWD_PRI_XPS_TYPE_MAP_ID_FK, Keys.BDT_PRI_RESTRI_CODE_LIST_MANIFEST_ID_FK, Keys.BDT_PRI_RESTRI_AGENCY_ID_LIST_MANIFEST_ID_FK);
    }

    private transient DtManifestPath _dtManifest;

    /**
     * Get the implicit join path to the <code>oagi.dt_manifest</code> table.
     */
    public DtManifestPath dtManifest() {
        if (_dtManifest == null)
            _dtManifest = new DtManifestPath(this, Keys.BDT_PRI_RESTRI_BDT_MANIFEST_ID_FK, null);

        return _dtManifest;
    }

    private transient CdtAwdPriXpsTypeMapPath _cdtAwdPriXpsTypeMap;

    /**
     * Get the implicit join path to the
     * <code>oagi.cdt_awd_pri_xps_type_map</code> table.
     */
    public CdtAwdPriXpsTypeMapPath cdtAwdPriXpsTypeMap() {
        if (_cdtAwdPriXpsTypeMap == null)
            _cdtAwdPriXpsTypeMap = new CdtAwdPriXpsTypeMapPath(this, Keys.BDT_PRI_RESTRI_CDT_AWD_PRI_XPS_TYPE_MAP_ID_FK, null);

        return _cdtAwdPriXpsTypeMap;
    }

    private transient CodeListManifestPath _codeListManifest;

    /**
     * Get the implicit join path to the <code>oagi.code_list_manifest</code>
     * table.
     */
    public CodeListManifestPath codeListManifest() {
        if (_codeListManifest == null)
            _codeListManifest = new CodeListManifestPath(this, Keys.BDT_PRI_RESTRI_CODE_LIST_MANIFEST_ID_FK, null);

        return _codeListManifest;
    }

    private transient AgencyIdListManifestPath _agencyIdListManifest;

    /**
     * Get the implicit join path to the
     * <code>oagi.agency_id_list_manifest</code> table.
     */
    public AgencyIdListManifestPath agencyIdListManifest() {
        if (_agencyIdListManifest == null)
            _agencyIdListManifest = new AgencyIdListManifestPath(this, Keys.BDT_PRI_RESTRI_AGENCY_ID_LIST_MANIFEST_ID_FK, null);

        return _agencyIdListManifest;
    }

    private transient BbiePath _bbie;

    /**
     * Get the implicit to-many join path to the <code>oagi.bbie</code> table
     */
    public BbiePath bbie() {
        if (_bbie == null)
            _bbie = new BbiePath(this, null, Keys.BBIE_BDT_PRI_RESTRI_ID_FK.getInverseKey());

        return _bbie;
    }

    @Override
    public BdtPriRestri as(String alias) {
        return new BdtPriRestri(DSL.name(alias), this);
    }

    @Override
    public BdtPriRestri as(Name alias) {
        return new BdtPriRestri(alias, this);
    }

    @Override
    public BdtPriRestri as(Table<?> alias) {
        return new BdtPriRestri(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public BdtPriRestri rename(String name) {
        return new BdtPriRestri(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BdtPriRestri rename(Name name) {
        return new BdtPriRestri(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public BdtPriRestri rename(Table<?> name) {
        return new BdtPriRestri(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public BdtPriRestri where(Condition condition) {
        return new BdtPriRestri(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public BdtPriRestri where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public BdtPriRestri where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public BdtPriRestri where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public BdtPriRestri where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public BdtPriRestri where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public BdtPriRestri where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public BdtPriRestri where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public BdtPriRestri whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public BdtPriRestri whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
