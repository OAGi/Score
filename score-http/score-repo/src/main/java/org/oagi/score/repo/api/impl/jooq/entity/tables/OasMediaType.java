/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.InverseForeignKey;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.oagi.score.repo.api.impl.jooq.entity.Keys;
import org.oagi.score.repo.api.impl.jooq.entity.Oagi;
import org.oagi.score.repo.api.impl.jooq.entity.tables.AppUser.AppUserPath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.records.OasMediaTypeRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OasMediaType extends TableImpl<OasMediaTypeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>oagi.oas_media_type</code>
     */
    public static final OasMediaType OAS_MEDIA_TYPE = new OasMediaType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OasMediaTypeRecord> getRecordType() {
        return OasMediaTypeRecord.class;
    }

    /**
     * The column <code>oagi.oas_media_type.oas_media_type_id</code>. The
     * primary key of the record.
     */
    public final TableField<OasMediaTypeRecord, ULong> OAS_MEDIA_TYPE_ID = createField(DSL.name("oas_media_type_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "The primary key of the record.");

    /**
     * The column <code>oagi.oas_media_type.guid</code>. The GUID of the record.
     */
    public final TableField<OasMediaTypeRecord, String> GUID = createField(DSL.name("guid"), SQLDataType.VARCHAR(41).nullable(false), this, "The GUID of the record.");

    /**
     * The column <code>oagi.oas_media_type.description</code>. On POST, PUT,
     * and PATCH, $ref is present
     */
    public final TableField<OasMediaTypeRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.CLOB.defaultValue(DSL.field(DSL.raw("NULL"), SQLDataType.CLOB)), this, "On POST, PUT, and PATCH, $ref is present");

    /**
     * The column <code>oagi.oas_media_type.owner_user_id</code>. The user who
     * owns the record.
     */
    public final TableField<OasMediaTypeRecord, ULong> OWNER_USER_ID = createField(DSL.name("owner_user_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The user who owns the record.");

    /**
     * The column <code>oagi.oas_media_type.created_by</code>. The user who
     * creates the record.
     */
    public final TableField<OasMediaTypeRecord, ULong> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The user who creates the record.");

    /**
     * The column <code>oagi.oas_media_type.last_updated_by</code>. The user who
     * last updates the record.
     */
    public final TableField<OasMediaTypeRecord, ULong> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The user who last updates the record.");

    /**
     * The column <code>oagi.oas_media_type.creation_timestamp</code>. The
     * timestamp when the record is created.
     */
    public final TableField<OasMediaTypeRecord, LocalDateTime> CREATION_TIMESTAMP = createField(DSL.name("creation_timestamp"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "The timestamp when the record is created.");

    /**
     * The column <code>oagi.oas_media_type.last_update_timestamp</code>. The
     * timestamp when the record is last updated.
     */
    public final TableField<OasMediaTypeRecord, LocalDateTime> LAST_UPDATE_TIMESTAMP = createField(DSL.name("last_update_timestamp"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "The timestamp when the record is last updated.");

    private OasMediaType(Name alias, Table<OasMediaTypeRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private OasMediaType(Name alias, Table<OasMediaTypeRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>oagi.oas_media_type</code> table reference
     */
    public OasMediaType(String alias) {
        this(DSL.name(alias), OAS_MEDIA_TYPE);
    }

    /**
     * Create an aliased <code>oagi.oas_media_type</code> table reference
     */
    public OasMediaType(Name alias) {
        this(alias, OAS_MEDIA_TYPE);
    }

    /**
     * Create a <code>oagi.oas_media_type</code> table reference
     */
    public OasMediaType() {
        this(DSL.name("oas_media_type"), null);
    }

    public <O extends Record> OasMediaType(Table<O> path, ForeignKey<O, OasMediaTypeRecord> childPath, InverseForeignKey<O, OasMediaTypeRecord> parentPath) {
        super(path, childPath, parentPath, OAS_MEDIA_TYPE);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class OasMediaTypePath extends OasMediaType implements Path<OasMediaTypeRecord> {
        public <O extends Record> OasMediaTypePath(Table<O> path, ForeignKey<O, OasMediaTypeRecord> childPath, InverseForeignKey<O, OasMediaTypeRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private OasMediaTypePath(Name alias, Table<OasMediaTypeRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public OasMediaTypePath as(String alias) {
            return new OasMediaTypePath(DSL.name(alias), this);
        }

        @Override
        public OasMediaTypePath as(Name alias) {
            return new OasMediaTypePath(alias, this);
        }

        @Override
        public OasMediaTypePath as(Table<?> alias) {
            return new OasMediaTypePath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Oagi.OAGI;
    }

    @Override
    public Identity<OasMediaTypeRecord, ULong> getIdentity() {
        return (Identity<OasMediaTypeRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<OasMediaTypeRecord> getPrimaryKey() {
        return Keys.KEY_OAS_MEDIA_TYPE_PRIMARY;
    }

    @Override
    public List<ForeignKey<OasMediaTypeRecord, ?>> getReferences() {
        return Arrays.asList(Keys.OAS_MEDIA_TYPE_OWNER_USER_ID_FK, Keys.OAS_MEDIA_TYPE_CREATED_BY_FK, Keys.OAS_MEDIA_TYPE_LAST_UPDATED_BY_FK);
    }

    private transient AppUserPath _oasMediaTypeOwnerUserIdFk;

    /**
     * Get the implicit join path to the <code>oagi.app_user</code> table, via
     * the <code>oas_media_type_owner_user_id_fk</code> key.
     */
    public AppUserPath oasMediaTypeOwnerUserIdFk() {
        if (_oasMediaTypeOwnerUserIdFk == null)
            _oasMediaTypeOwnerUserIdFk = new AppUserPath(this, Keys.OAS_MEDIA_TYPE_OWNER_USER_ID_FK, null);

        return _oasMediaTypeOwnerUserIdFk;
    }

    private transient AppUserPath _oasMediaTypeCreatedByFk;

    /**
     * Get the implicit join path to the <code>oagi.app_user</code> table, via
     * the <code>oas_media_type_created_by_fk</code> key.
     */
    public AppUserPath oasMediaTypeCreatedByFk() {
        if (_oasMediaTypeCreatedByFk == null)
            _oasMediaTypeCreatedByFk = new AppUserPath(this, Keys.OAS_MEDIA_TYPE_CREATED_BY_FK, null);

        return _oasMediaTypeCreatedByFk;
    }

    private transient AppUserPath _oasMediaTypeLastUpdatedByFk;

    /**
     * Get the implicit join path to the <code>oagi.app_user</code> table, via
     * the <code>oas_media_type_last_updated_by_fk</code> key.
     */
    public AppUserPath oasMediaTypeLastUpdatedByFk() {
        if (_oasMediaTypeLastUpdatedByFk == null)
            _oasMediaTypeLastUpdatedByFk = new AppUserPath(this, Keys.OAS_MEDIA_TYPE_LAST_UPDATED_BY_FK, null);

        return _oasMediaTypeLastUpdatedByFk;
    }

    @Override
    public OasMediaType as(String alias) {
        return new OasMediaType(DSL.name(alias), this);
    }

    @Override
    public OasMediaType as(Name alias) {
        return new OasMediaType(alias, this);
    }

    @Override
    public OasMediaType as(Table<?> alias) {
        return new OasMediaType(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public OasMediaType rename(String name) {
        return new OasMediaType(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OasMediaType rename(Name name) {
        return new OasMediaType(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public OasMediaType rename(Table<?> name) {
        return new OasMediaType(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasMediaType where(Condition condition) {
        return new OasMediaType(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasMediaType where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasMediaType where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasMediaType where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OasMediaType where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OasMediaType where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OasMediaType where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OasMediaType where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasMediaType whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OasMediaType whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
