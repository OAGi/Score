/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.oagi.score.repo.api.impl.jooq.entity.tables.AsccpManifest;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AsccpManifestRecord extends UpdatableRecordImpl<AsccpManifestRecord> implements Record10<ULong, ULong, ULong, ULong, String, Byte, ULong, ULong, ULong, ULong> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.asccp_manifest.asccp_manifest_id</code>.
     */
    public void setAsccpManifestId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.asccp_manifest.asccp_manifest_id</code>.
     */
    public ULong getAsccpManifestId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>oagi.asccp_manifest.release_id</code>.
     */
    public void setReleaseId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.asccp_manifest.release_id</code>.
     */
    public ULong getReleaseId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>oagi.asccp_manifest.asccp_id</code>.
     */
    public void setAsccpId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.asccp_manifest.asccp_id</code>.
     */
    public ULong getAsccpId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>oagi.asccp_manifest.role_of_acc_manifest_id</code>.
     */
    public void setRoleOfAccManifestId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.asccp_manifest.role_of_acc_manifest_id</code>.
     */
    public ULong getRoleOfAccManifestId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>oagi.asccp_manifest.den</code>. The dictionary entry
     * name of the ASCCP.
     */
    public void setDen(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.asccp_manifest.den</code>. The dictionary entry
     * name of the ASCCP.
     */
    public String getDen() {
        return (String) get(4);
    }

    /**
     * Setter for <code>oagi.asccp_manifest.conflict</code>. This indicates that
     * there is a conflict between self and relationship.
     */
    public void setConflict(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.asccp_manifest.conflict</code>. This indicates that
     * there is a conflict between self and relationship.
     */
    public Byte getConflict() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>oagi.asccp_manifest.log_id</code>. A foreign key pointed
     * to a log for the current record.
     */
    public void setLogId(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>oagi.asccp_manifest.log_id</code>. A foreign key pointed
     * to a log for the current record.
     */
    public ULong getLogId() {
        return (ULong) get(6);
    }

    /**
     * Setter for
     * <code>oagi.asccp_manifest.replacement_asccp_manifest_id</code>. This
     * refers to a replacement manifest if the record is deprecated.
     */
    public void setReplacementAsccpManifestId(ULong value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>oagi.asccp_manifest.replacement_asccp_manifest_id</code>. This
     * refers to a replacement manifest if the record is deprecated.
     */
    public ULong getReplacementAsccpManifestId() {
        return (ULong) get(7);
    }

    /**
     * Setter for <code>oagi.asccp_manifest.prev_asccp_manifest_id</code>.
     */
    public void setPrevAsccpManifestId(ULong value) {
        set(8, value);
    }

    /**
     * Getter for <code>oagi.asccp_manifest.prev_asccp_manifest_id</code>.
     */
    public ULong getPrevAsccpManifestId() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>oagi.asccp_manifest.next_asccp_manifest_id</code>.
     */
    public void setNextAsccpManifestId(ULong value) {
        set(9, value);
    }

    /**
     * Getter for <code>oagi.asccp_manifest.next_asccp_manifest_id</code>.
     */
    public ULong getNextAsccpManifestId() {
        return (ULong) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<ULong, ULong, ULong, ULong, String, Byte, ULong, ULong, ULong, ULong> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<ULong, ULong, ULong, ULong, String, Byte, ULong, ULong, ULong, ULong> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return AsccpManifest.ASCCP_MANIFEST.ASCCP_MANIFEST_ID;
    }

    @Override
    public Field<ULong> field2() {
        return AsccpManifest.ASCCP_MANIFEST.RELEASE_ID;
    }

    @Override
    public Field<ULong> field3() {
        return AsccpManifest.ASCCP_MANIFEST.ASCCP_ID;
    }

    @Override
    public Field<ULong> field4() {
        return AsccpManifest.ASCCP_MANIFEST.ROLE_OF_ACC_MANIFEST_ID;
    }

    @Override
    public Field<String> field5() {
        return AsccpManifest.ASCCP_MANIFEST.DEN;
    }

    @Override
    public Field<Byte> field6() {
        return AsccpManifest.ASCCP_MANIFEST.CONFLICT;
    }

    @Override
    public Field<ULong> field7() {
        return AsccpManifest.ASCCP_MANIFEST.LOG_ID;
    }

    @Override
    public Field<ULong> field8() {
        return AsccpManifest.ASCCP_MANIFEST.REPLACEMENT_ASCCP_MANIFEST_ID;
    }

    @Override
    public Field<ULong> field9() {
        return AsccpManifest.ASCCP_MANIFEST.PREV_ASCCP_MANIFEST_ID;
    }

    @Override
    public Field<ULong> field10() {
        return AsccpManifest.ASCCP_MANIFEST.NEXT_ASCCP_MANIFEST_ID;
    }

    @Override
    public ULong component1() {
        return getAsccpManifestId();
    }

    @Override
    public ULong component2() {
        return getReleaseId();
    }

    @Override
    public ULong component3() {
        return getAsccpId();
    }

    @Override
    public ULong component4() {
        return getRoleOfAccManifestId();
    }

    @Override
    public String component5() {
        return getDen();
    }

    @Override
    public Byte component6() {
        return getConflict();
    }

    @Override
    public ULong component7() {
        return getLogId();
    }

    @Override
    public ULong component8() {
        return getReplacementAsccpManifestId();
    }

    @Override
    public ULong component9() {
        return getPrevAsccpManifestId();
    }

    @Override
    public ULong component10() {
        return getNextAsccpManifestId();
    }

    @Override
    public ULong value1() {
        return getAsccpManifestId();
    }

    @Override
    public ULong value2() {
        return getReleaseId();
    }

    @Override
    public ULong value3() {
        return getAsccpId();
    }

    @Override
    public ULong value4() {
        return getRoleOfAccManifestId();
    }

    @Override
    public String value5() {
        return getDen();
    }

    @Override
    public Byte value6() {
        return getConflict();
    }

    @Override
    public ULong value7() {
        return getLogId();
    }

    @Override
    public ULong value8() {
        return getReplacementAsccpManifestId();
    }

    @Override
    public ULong value9() {
        return getPrevAsccpManifestId();
    }

    @Override
    public ULong value10() {
        return getNextAsccpManifestId();
    }

    @Override
    public AsccpManifestRecord value1(ULong value) {
        setAsccpManifestId(value);
        return this;
    }

    @Override
    public AsccpManifestRecord value2(ULong value) {
        setReleaseId(value);
        return this;
    }

    @Override
    public AsccpManifestRecord value3(ULong value) {
        setAsccpId(value);
        return this;
    }

    @Override
    public AsccpManifestRecord value4(ULong value) {
        setRoleOfAccManifestId(value);
        return this;
    }

    @Override
    public AsccpManifestRecord value5(String value) {
        setDen(value);
        return this;
    }

    @Override
    public AsccpManifestRecord value6(Byte value) {
        setConflict(value);
        return this;
    }

    @Override
    public AsccpManifestRecord value7(ULong value) {
        setLogId(value);
        return this;
    }

    @Override
    public AsccpManifestRecord value8(ULong value) {
        setReplacementAsccpManifestId(value);
        return this;
    }

    @Override
    public AsccpManifestRecord value9(ULong value) {
        setPrevAsccpManifestId(value);
        return this;
    }

    @Override
    public AsccpManifestRecord value10(ULong value) {
        setNextAsccpManifestId(value);
        return this;
    }

    @Override
    public AsccpManifestRecord values(ULong value1, ULong value2, ULong value3, ULong value4, String value5, Byte value6, ULong value7, ULong value8, ULong value9, ULong value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AsccpManifestRecord
     */
    public AsccpManifestRecord() {
        super(AsccpManifest.ASCCP_MANIFEST);
    }

    /**
     * Create a detached, initialised AsccpManifestRecord
     */
    public AsccpManifestRecord(ULong asccpManifestId, ULong releaseId, ULong asccpId, ULong roleOfAccManifestId, String den, Byte conflict, ULong logId, ULong replacementAsccpManifestId, ULong prevAsccpManifestId, ULong nextAsccpManifestId) {
        super(AsccpManifest.ASCCP_MANIFEST);

        setAsccpManifestId(asccpManifestId);
        setReleaseId(releaseId);
        setAsccpId(asccpId);
        setRoleOfAccManifestId(roleOfAccManifestId);
        setDen(den);
        setConflict(conflict);
        setLogId(logId);
        setReplacementAsccpManifestId(replacementAsccpManifestId);
        setPrevAsccpManifestId(prevAsccpManifestId);
        setNextAsccpManifestId(nextAsccpManifestId);
        resetChangedOnNotNull();
    }
}
