/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.InverseForeignKey;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.oagi.score.repo.api.impl.jooq.entity.Keys;
import org.oagi.score.repo.api.impl.jooq.entity.Oagi;
import org.oagi.score.repo.api.impl.jooq.entity.tables.AccManifest.AccManifestPath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.AppUser.AppUserPath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.Tag.TagPath;
import org.oagi.score.repo.api.impl.jooq.entity.tables.records.AccManifestTagRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccManifestTag extends TableImpl<AccManifestTagRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>oagi.acc_manifest_tag</code>
     */
    public static final AccManifestTag ACC_MANIFEST_TAG = new AccManifestTag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccManifestTagRecord> getRecordType() {
        return AccManifestTagRecord.class;
    }

    /**
     * The column <code>oagi.acc_manifest_tag.acc_manifest_id</code>.
     */
    public final TableField<AccManifestTagRecord, ULong> ACC_MANIFEST_ID = createField(DSL.name("acc_manifest_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>oagi.acc_manifest_tag.tag_id</code>.
     */
    public final TableField<AccManifestTagRecord, ULong> TAG_ID = createField(DSL.name("tag_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>oagi.acc_manifest_tag.created_by</code>. A foreign key
     * referring to the user who creates the record.
     */
    public final TableField<AccManifestTagRecord, ULong> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "A foreign key referring to the user who creates the record.");

    /**
     * The column <code>oagi.acc_manifest_tag.creation_timestamp</code>.
     * Timestamp when the record was first created.
     */
    public final TableField<AccManifestTagRecord, LocalDateTime> CREATION_TIMESTAMP = createField(DSL.name("creation_timestamp"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "Timestamp when the record was first created.");

    private AccManifestTag(Name alias, Table<AccManifestTagRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private AccManifestTag(Name alias, Table<AccManifestTagRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>oagi.acc_manifest_tag</code> table reference
     */
    public AccManifestTag(String alias) {
        this(DSL.name(alias), ACC_MANIFEST_TAG);
    }

    /**
     * Create an aliased <code>oagi.acc_manifest_tag</code> table reference
     */
    public AccManifestTag(Name alias) {
        this(alias, ACC_MANIFEST_TAG);
    }

    /**
     * Create a <code>oagi.acc_manifest_tag</code> table reference
     */
    public AccManifestTag() {
        this(DSL.name("acc_manifest_tag"), null);
    }

    public <O extends Record> AccManifestTag(Table<O> path, ForeignKey<O, AccManifestTagRecord> childPath, InverseForeignKey<O, AccManifestTagRecord> parentPath) {
        super(path, childPath, parentPath, ACC_MANIFEST_TAG);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class AccManifestTagPath extends AccManifestTag implements Path<AccManifestTagRecord> {

        private static final long serialVersionUID = 1L;
        public <O extends Record> AccManifestTagPath(Table<O> path, ForeignKey<O, AccManifestTagRecord> childPath, InverseForeignKey<O, AccManifestTagRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private AccManifestTagPath(Name alias, Table<AccManifestTagRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public AccManifestTagPath as(String alias) {
            return new AccManifestTagPath(DSL.name(alias), this);
        }

        @Override
        public AccManifestTagPath as(Name alias) {
            return new AccManifestTagPath(alias, this);
        }

        @Override
        public AccManifestTagPath as(Table<?> alias) {
            return new AccManifestTagPath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Oagi.OAGI;
    }

    @Override
    public UniqueKey<AccManifestTagRecord> getPrimaryKey() {
        return Keys.KEY_ACC_MANIFEST_TAG_PRIMARY;
    }

    @Override
    public List<ForeignKey<AccManifestTagRecord, ?>> getReferences() {
        return Arrays.asList(Keys.ACC_MANIFEST_TAG_ACC_MANIFEST_ID_FK, Keys.ACC_MANIFEST_TAG_TAG_ID_FK, Keys.ACC_MANIFEST_TAG_CREATED_BY_FK);
    }

    private transient AccManifestPath _accManifest;

    /**
     * Get the implicit join path to the <code>oagi.acc_manifest</code> table.
     */
    public AccManifestPath accManifest() {
        if (_accManifest == null)
            _accManifest = new AccManifestPath(this, Keys.ACC_MANIFEST_TAG_ACC_MANIFEST_ID_FK, null);

        return _accManifest;
    }

    private transient TagPath _tag;

    /**
     * Get the implicit join path to the <code>oagi.tag</code> table.
     */
    public TagPath tag() {
        if (_tag == null)
            _tag = new TagPath(this, Keys.ACC_MANIFEST_TAG_TAG_ID_FK, null);

        return _tag;
    }

    private transient AppUserPath _appUser;

    /**
     * Get the implicit join path to the <code>oagi.app_user</code> table.
     */
    public AppUserPath appUser() {
        if (_appUser == null)
            _appUser = new AppUserPath(this, Keys.ACC_MANIFEST_TAG_CREATED_BY_FK, null);

        return _appUser;
    }

    @Override
    public AccManifestTag as(String alias) {
        return new AccManifestTag(DSL.name(alias), this);
    }

    @Override
    public AccManifestTag as(Name alias) {
        return new AccManifestTag(alias, this);
    }

    @Override
    public AccManifestTag as(Table<?> alias) {
        return new AccManifestTag(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public AccManifestTag rename(String name) {
        return new AccManifestTag(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AccManifestTag rename(Name name) {
        return new AccManifestTag(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public AccManifestTag rename(Table<?> name) {
        return new AccManifestTag(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AccManifestTag where(Condition condition) {
        return new AccManifestTag(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AccManifestTag where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AccManifestTag where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AccManifestTag where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public AccManifestTag where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public AccManifestTag where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public AccManifestTag where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public AccManifestTag where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AccManifestTag whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AccManifestTag whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
