/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.function.Function;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function6;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.oagi.score.repo.api.impl.jooq.entity.Keys;
import org.oagi.score.repo.api.impl.jooq.entity.Oagi;
import org.oagi.score.repo.api.impl.jooq.entity.tables.records.OasResponseHeadersRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OasResponseHeaders extends TableImpl<OasResponseHeadersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>oagi.oas_response_headers</code>
     */
    public static final OasResponseHeaders OAS_RESPONSE_HEADERS = new OasResponseHeaders();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OasResponseHeadersRecord> getRecordType() {
        return OasResponseHeadersRecord.class;
    }

    /**
     * The column <code>oagi.oas_response_headers.oas_response_id</code>. The
     * primary key of the record.
     */
    public final TableField<OasResponseHeadersRecord, ULong> OAS_RESPONSE_ID = createField(DSL.name("oas_response_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The primary key of the record.");

    /**
     * The column <code>oagi.oas_response_headers.oas_http_header_id</code>. The
     * primary key of the record.
     */
    public final TableField<OasResponseHeadersRecord, ULong> OAS_HTTP_HEADER_ID = createField(DSL.name("oas_http_header_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The primary key of the record.");

    /**
     * The column <code>oagi.oas_response_headers.created_by</code>. The user
     * who creates the record.
     */
    public final TableField<OasResponseHeadersRecord, ULong> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The user who creates the record.");

    /**
     * The column <code>oagi.oas_response_headers.last_updated_by</code>. The
     * user who last updates the record.
     */
    public final TableField<OasResponseHeadersRecord, ULong> LAST_UPDATED_BY = createField(DSL.name("last_updated_by"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The user who last updates the record.");

    /**
     * The column <code>oagi.oas_response_headers.creation_timestamp</code>. The
     * timestamp when the record is created.
     */
    public final TableField<OasResponseHeadersRecord, LocalDateTime> CREATION_TIMESTAMP = createField(DSL.name("creation_timestamp"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "The timestamp when the record is created.");

    /**
     * The column <code>oagi.oas_response_headers.last_update_timestamp</code>.
     * The timestamp when the record is last updated.
     */
    public final TableField<OasResponseHeadersRecord, LocalDateTime> LAST_UPDATE_TIMESTAMP = createField(DSL.name("last_update_timestamp"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "The timestamp when the record is last updated.");

    private OasResponseHeaders(Name alias, Table<OasResponseHeadersRecord> aliased) {
        this(alias, aliased, null);
    }

    private OasResponseHeaders(Name alias, Table<OasResponseHeadersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>oagi.oas_response_headers</code> table reference
     */
    public OasResponseHeaders(String alias) {
        this(DSL.name(alias), OAS_RESPONSE_HEADERS);
    }

    /**
     * Create an aliased <code>oagi.oas_response_headers</code> table reference
     */
    public OasResponseHeaders(Name alias) {
        this(alias, OAS_RESPONSE_HEADERS);
    }

    /**
     * Create a <code>oagi.oas_response_headers</code> table reference
     */
    public OasResponseHeaders() {
        this(DSL.name("oas_response_headers"), null);
    }

    public <O extends Record> OasResponseHeaders(Table<O> child, ForeignKey<O, OasResponseHeadersRecord> key) {
        super(child, key, OAS_RESPONSE_HEADERS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Oagi.OAGI;
    }

    @Override
    public UniqueKey<OasResponseHeadersRecord> getPrimaryKey() {
        return Keys.KEY_OAS_RESPONSE_HEADERS_PRIMARY;
    }

    @Override
    public List<ForeignKey<OasResponseHeadersRecord, ?>> getReferences() {
        return Arrays.asList(Keys.OAS_RESPONSE_HEADERS_OAS_RESPONSE_ID_FK, Keys.OAS_RESPONSE_HEADERS_OAS_HTTP_HEADER_ID_FK, Keys.OAS_RESPONSE_HEADERS_CREATED_BY_FK, Keys.OAS_RESPONSE_HEADERS_LAST_UPDATED_BY_FK);
    }

    private transient OasResponse _oasResponse;
    private transient OasHttpHeader _oasHttpHeader;
    private transient AppUser _oasResponseHeadersCreatedByFk;
    private transient AppUser _oasResponseHeadersLastUpdatedByFk;

    /**
     * Get the implicit join path to the <code>oagi.oas_response</code> table.
     */
    public OasResponse oasResponse() {
        if (_oasResponse == null)
            _oasResponse = new OasResponse(this, Keys.OAS_RESPONSE_HEADERS_OAS_RESPONSE_ID_FK);

        return _oasResponse;
    }

    /**
     * Get the implicit join path to the <code>oagi.oas_http_header</code>
     * table.
     */
    public OasHttpHeader oasHttpHeader() {
        if (_oasHttpHeader == null)
            _oasHttpHeader = new OasHttpHeader(this, Keys.OAS_RESPONSE_HEADERS_OAS_HTTP_HEADER_ID_FK);

        return _oasHttpHeader;
    }

    /**
     * Get the implicit join path to the <code>oagi.app_user</code> table, via
     * the <code>oas_response_headers_created_by_fk</code> key.
     */
    public AppUser oasResponseHeadersCreatedByFk() {
        if (_oasResponseHeadersCreatedByFk == null)
            _oasResponseHeadersCreatedByFk = new AppUser(this, Keys.OAS_RESPONSE_HEADERS_CREATED_BY_FK);

        return _oasResponseHeadersCreatedByFk;
    }

    /**
     * Get the implicit join path to the <code>oagi.app_user</code> table, via
     * the <code>oas_response_headers_last_updated_by_fk</code> key.
     */
    public AppUser oasResponseHeadersLastUpdatedByFk() {
        if (_oasResponseHeadersLastUpdatedByFk == null)
            _oasResponseHeadersLastUpdatedByFk = new AppUser(this, Keys.OAS_RESPONSE_HEADERS_LAST_UPDATED_BY_FK);

        return _oasResponseHeadersLastUpdatedByFk;
    }

    @Override
    public OasResponseHeaders as(String alias) {
        return new OasResponseHeaders(DSL.name(alias), this);
    }

    @Override
    public OasResponseHeaders as(Name alias) {
        return new OasResponseHeaders(alias, this);
    }

    @Override
    public OasResponseHeaders as(Table<?> alias) {
        return new OasResponseHeaders(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public OasResponseHeaders rename(String name) {
        return new OasResponseHeaders(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OasResponseHeaders rename(Name name) {
        return new OasResponseHeaders(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public OasResponseHeaders rename(Table<?> name) {
        return new OasResponseHeaders(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<ULong, ULong, ULong, ULong, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function6<? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super LocalDateTime, ? super LocalDateTime, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function6<? super ULong, ? super ULong, ? super ULong, ? super ULong, ? super LocalDateTime, ? super LocalDateTime, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
