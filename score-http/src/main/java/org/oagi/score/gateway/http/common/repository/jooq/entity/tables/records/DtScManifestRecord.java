/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.gateway.http.common.repository.jooq.entity.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.oagi.score.gateway.http.common.repository.jooq.entity.tables.DtScManifest;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DtScManifestRecord extends UpdatableRecordImpl<DtScManifestRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.dt_sc_manifest.dt_sc_manifest_id</code>.
     */
    public void setDtScManifestId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.dt_sc_manifest.dt_sc_manifest_id</code>.
     */
    public ULong getDtScManifestId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>oagi.dt_sc_manifest.release_id</code>.
     */
    public void setReleaseId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.dt_sc_manifest.release_id</code>.
     */
    public ULong getReleaseId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>oagi.dt_sc_manifest.dt_sc_id</code>.
     */
    public void setDtScId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.dt_sc_manifest.dt_sc_id</code>.
     */
    public ULong getDtScId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>oagi.dt_sc_manifest.owner_dt_manifest_id</code>.
     */
    public void setOwnerDtManifestId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.dt_sc_manifest.owner_dt_manifest_id</code>.
     */
    public ULong getOwnerDtManifestId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>oagi.dt_sc_manifest.based_dt_sc_manifest_id</code>.
     */
    public void setBasedDtScManifestId(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.dt_sc_manifest.based_dt_sc_manifest_id</code>.
     */
    public ULong getBasedDtScManifestId() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>oagi.dt_sc_manifest.conflict</code>. This indicates that
     * there is a conflict between self and relationship.
     */
    public void setConflict(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.dt_sc_manifest.conflict</code>. This indicates that
     * there is a conflict between self and relationship.
     */
    public Byte getConflict() {
        return (Byte) get(5);
    }

    /**
     * Setter for
     * <code>oagi.dt_sc_manifest.replacement_dt_sc_manifest_id</code>. This
     * refers to a replacement manifest if the record is deprecated.
     */
    public void setReplacementDtScManifestId(ULong value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>oagi.dt_sc_manifest.replacement_dt_sc_manifest_id</code>. This
     * refers to a replacement manifest if the record is deprecated.
     */
    public ULong getReplacementDtScManifestId() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>oagi.dt_sc_manifest.prev_dt_sc_manifest_id</code>.
     */
    public void setPrevDtScManifestId(ULong value) {
        set(7, value);
    }

    /**
     * Getter for <code>oagi.dt_sc_manifest.prev_dt_sc_manifest_id</code>.
     */
    public ULong getPrevDtScManifestId() {
        return (ULong) get(7);
    }

    /**
     * Setter for <code>oagi.dt_sc_manifest.next_dt_sc_manifest_id</code>.
     */
    public void setNextDtScManifestId(ULong value) {
        set(8, value);
    }

    /**
     * Getter for <code>oagi.dt_sc_manifest.next_dt_sc_manifest_id</code>.
     */
    public ULong getNextDtScManifestId() {
        return (ULong) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DtScManifestRecord
     */
    public DtScManifestRecord() {
        super(DtScManifest.DT_SC_MANIFEST);
    }

    /**
     * Create a detached, initialised DtScManifestRecord
     */
    public DtScManifestRecord(ULong dtScManifestId, ULong releaseId, ULong dtScId, ULong ownerDtManifestId, ULong basedDtScManifestId, Byte conflict, ULong replacementDtScManifestId, ULong prevDtScManifestId, ULong nextDtScManifestId) {
        super(DtScManifest.DT_SC_MANIFEST);

        setDtScManifestId(dtScManifestId);
        setReleaseId(releaseId);
        setDtScId(dtScId);
        setOwnerDtManifestId(ownerDtManifestId);
        setBasedDtScManifestId(basedDtScManifestId);
        setConflict(conflict);
        setReplacementDtScManifestId(replacementDtScManifestId);
        setPrevDtScManifestId(prevDtScManifestId);
        setNextDtScManifestId(nextDtScManifestId);
        resetTouchedOnNotNull();
    }
}
