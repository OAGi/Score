{"version":3,"file":"ngx-mat-multi-sort.mjs","sources":["../../../projects/mat-multi-sort/src/lib/mat-multi-sort.directive.ts","../../../projects/mat-multi-sort/src/lib/mat-multi-sort-header/mat-multi-sort-header.component.html","../../../projects/mat-multi-sort/src/lib/mat-multi-sort-header/mat-multi-sort-header.component.ts","../../../projects/mat-multi-sort/src/lib/mat-multi-sort-table-settings/mat-multi-sort-table-settings.component.html","../../../projects/mat-multi-sort/src/lib/mat-multi-sort-table-settings/mat-multi-sort-table-settings.component.ts","../../../projects/mat-multi-sort/src/lib/mat-multi-sort.module.ts","../../../projects/mat-multi-sort/src/lib/utils.ts","../../../projects/mat-multi-sort/src/lib/table-data.ts","../../../projects/mat-multi-sort/src/lib/mat-multi-sort-data-source.ts","../../../projects/mat-multi-sort/src/public_api.ts","../../../projects/mat-multi-sort/src/ngx-mat-multi-sort.ts"],"sourcesContent":["import { Directive, OnChanges, OnInit } from '@angular/core';\nimport { MatSort, MatSortable, SortDirection } from '@angular/material/sort';\n\n@Directive({\n  selector: '[matMultiSort]',\n  exportAs: 'matMultiSort'\n})\nexport class MatMultiSort extends MatSort implements OnInit, OnChanges {\n\n  start = 'asc' as 'asc' | 'desc';\n\n  actives: string[] = [];\n  directions: SortDirection[] = [];\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  sort(sortable: MatSortable): void {\n    this.updateMultipleSorts(sortable);\n    super.sort(sortable);\n  }\n\n  updateMultipleSorts(sortable: MatSortable): void {\n    const i = this.actives.findIndex(activeId => activeId === sortable.id);\n\n    if (this.isActive(sortable)) {\n      if (this.activeDirection(sortable) === (sortable.start ? sortable.start : this.start)) {\n        this.directions.splice(i, 1, this.getNextSortDirection(sortable));\n      } else {\n        this.actives.splice(i, 1);\n        this.directions.splice(i, 1);\n      }\n    } else {\n      this.actives.push(sortable.id);\n      this.directions.push(sortable.start ? sortable.start : this.start);\n    }\n  }\n\n  isActive(sortable: MatSortable) {\n    const i = this.actives.findIndex(activeId => activeId === sortable.id);\n    return i > -1;\n  }\n\n  activeDirection(sortable: MatSortable): 'asc' | 'desc' {\n    const i = this.actives.findIndex(activeId => activeId === sortable.id);\n    return this.directions[i] || (sortable.start ? sortable.start : this.start);\n  }\n\n}\n","<div class=\"mat-sort-header-container\"\n     [class.mat-sort-header-sorted]=\"_isSorted()\"\n     [class.mat-sort-header-position-before]=\"arrowPosition == 'before'\">\n\n  <div class=\"mat-sort-header-content\">\n    <ng-content></ng-content>\n  </div>\n\n  <!-- Disable animations while a current animation is running -->\n  <div class=\"mat-sort-header-arrow\"\n       *ngIf=\"_renderArrow()\"\n       [@arrowOpacity]=\"_getArrowViewState()\"\n       [@arrowPosition]=\"_getArrowViewState()\"\n       [@allowChildren]=\"_getArrowDirectionState()\"\n       (@arrowPosition.start)=\"_disableViewStateAnimation = true\"\n       (@arrowPosition.done)=\"_disableViewStateAnimation = false\">\n    <div class=\"mat-sort-header-stem\"></div>\n    <div class=\"mat-sort-header-indicator\" [@indicator]=\"_getArrowDirectionState()\">\n      <div class=\"mat-sort-header-pointer-left\" [@leftPointer]=\"_getArrowDirectionState()\"></div>\n      <div class=\"mat-sort-header-pointer-right\" [@rightPointer]=\"_getArrowDirectionState()\"></div>\n      <div class=\"mat-sort-header-pointer-middle\"></div>\n    </div>\n  </div>\n  <div *ngIf=\"_isSorted()\">{{_sortId()}}</div>\n</div>\n","import {\n  Component,\n  Input,\n  ChangeDetectorRef,\n  Optional,\n  Inject,\n  HostListener,\n  HostBinding,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ElementRef\n} from '@angular/core';\nimport { matSortAnimations, MatSortHeader, MatSortHeaderIntl } from '@angular/material/sort';\nimport { MatMultiSort } from '../mat-multi-sort.directive';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n/** Column definition associated with a `MatSortHeader`. */\ninterface C2MatSortHeaderColumnDef {\n  name: string;\n}\n\n@Component({\n  selector: '[mat-multi-sort-header]',\n  exportAs: 'matMultiSortHeader',\n  templateUrl: './mat-multi-sort-header.component.html',\n  styleUrls: ['./mat-multi-sort-header.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    matSortAnimations.indicator,\n    matSortAnimations.leftPointer,\n    matSortAnimations.rightPointer,\n    matSortAnimations.arrowOpacity,\n    matSortAnimations.arrowPosition,\n    matSortAnimations.allowChildren\n  ]\n})\nexport class MatMultiSortHeaderComponent extends MatSortHeader {\n  start = 'asc' as 'asc' | 'desc';\n  @Input('mat-multi-sort-header') id!: string;\n\n  constructor(public _intl: MatSortHeaderIntl,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() public _sort: MatMultiSort,\n    @Inject('C2_SORT_HEADER_COLUMN_DEF') @Optional() public _columnDef: C2MatSortHeaderColumnDef,\n    _focusMonitor: FocusMonitor,\n    _elementRef: ElementRef<HTMLElement>) {\n    super(_intl, changeDetectorRef, _sort, _columnDef, _focusMonitor, _elementRef);\n  }\n\n  @HostListener('mouseenter', ['true'])\n  @HostListener('longpress', ['true'])\n  @HostListener('mouseleave', ['false'])\n  __setIndicatorHintVisible(visible: string | boolean) {\n    super._setIndicatorHintVisible(visible as boolean);\n  }\n\n  _handleClick() {\n    this._sort.direction = this.getSortDirection();\n    super._handleClick();\n  }\n\n  _isSorted() {\n    return this._sort.actives.findIndex(activeId => activeId === this.id) > -1;\n  }\n\n  _sortId() {\n    return this._sort.actives.findIndex(activeId => activeId === this.id) + 1;\n  }\n\n  _updateArrowDirection() {\n    this._arrowDirection = this.getSortDirection();\n  }\n\n  @HostBinding('attr.aria-sort')\n  _getAriaSortAttribute() {\n    if (!this._isSorted()) {\n      return 'none';\n    }\n\n    return this.getSortDirection() === 'asc' ? 'ascending' : 'descending';\n  }\n\n  _renderArrow() {\n    return !this._isDisabled() || this._isSorted();\n  }\n\n  getSortDirection(): 'asc' | 'desc' | '' {\n    const i = this._sort.actives.findIndex(activeIds => activeIds === this.id);\n    const direction = this._sort.directions[i];\n    return this._isSorted() ? direction : (this.start || this._sort.start);\n  }\n\n}\n","<div class=\"table-settings\">\n    <div class=\"table-settings-sort\">\n        <mat-chip-list class=\"drag-chip-list\" cdkDropList cdkDropListOrientation='horizontal'\n            (cdkDropListDropped)=\"dropSort($event)\">\n            <mat-chip class=\"drag-chip\" *ngFor=\"let item of sort\" cdkDrag (removed)=\"remove(item.id)\"\n                (click)=\"updateDirection(item.id)\">\n                <ng-container *ngIf=\"sortIndicatorRef\"\n                              [ngTemplateOutlet]=\"sortIndicatorRef\"\n                              [ngTemplateOutletContext]=\"{direction:item.direction, columnName: item.name }\">\n                </ng-container>\n                <div *ngIf=\"!sortIndicatorRef\">\n                    {{item.name}}:\n                    <div class=\"sorting\" [matTooltip]=\"sortToolTip\">\n                        {{item.direction}}\n                    </div>\n                </div>\n                <mat-icon matChipRemove>cancel</mat-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n    <div style=\"flex: 1 1 auto;\"></div>\n    <div #settingsMenu (click)=\"openDialog()\" class=\"table-settings-menu\">\n        <ng-content #menuRef></ng-content>\n    </div>\n</div>\n\n<ng-template #templateRef>\n  <div cdkDropList class=\"column-list\" (cdkDropListDropped)=\"drop($event)\">\n    <div class=\"column-item\" *ngFor=\"let column of _tableData.columns\" cdkDrag>\n      <mat-icon>drag_indicator</mat-icon>\n      <mat-checkbox [(ngModel)]=\"column.isActive\" (change)=\"toggle()\">{{column.name}}</mat-checkbox>\n    </div>\n  </div>\n</ng-template>\n","import {Component, ContentChild, ElementRef, Input, OnInit, TemplateRef, ViewChild, ViewContainerRef} from '@angular/core';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport { TableData } from '../table-data';\nimport {BlockScrollStrategy, Overlay, OverlayRef, ScrollStrategy, ViewportRuler} from '@angular/cdk/overlay';\nimport {TemplatePortal} from '@angular/cdk/portal';\n\n\n@Component({\n  selector: 'mat-multi-sort-table-settings',\n  templateUrl: './mat-multi-sort-table-settings.component.html',\n  styleUrls: ['./mat-multi-sort-table-settings.component.scss']\n})\nexport class MatMultiSortTableSettingsComponent implements OnInit {\n  _tableData!: TableData<any>;\n  sort: { id: string, name: string, direction: string }[] = [];\n  overlayRef!: OverlayRef;\n\n  @ViewChild('templateRef', { static: true }) private templateRef!: TemplateRef<HTMLElement>;\n\n  @ViewChild('settingsMenu') buttonRef!: ElementRef;\n\n  @ContentChild('sortIndicator', { static: false }) sortIndicatorRef!: TemplateRef<any>;\n\n  @Input()\n  sortToolTip: string = '';\n\n  @Input()\n  closeDialogOnChoice = true;\n\n  @Input()\n  scrollStrategy: ScrollStrategy = new BlockScrollStrategy(this.viewportRuler, document);\n\n  @Input()\n  set tableData(tableData: TableData<any>) {\n    this._tableData = tableData;\n  }\n\n\n  constructor(private overlay: Overlay, private viewContainerRef: ViewContainerRef, private viewportRuler: ViewportRuler) { }\n\n  ngOnInit(): void {\n    this.sort = this.getSort();\n    this._tableData.sortObservable.subscribe(() => this.sort = this.getSort());\n    this._tableData.onColumnsChange().subscribe(() => this.sort = this.getSort());\n  }\n\n  openDialog() {\n    const button = this.buttonRef.nativeElement;\n    const positionStrategyBuilder = this.overlay.position();\n    const positionStrategy = positionStrategyBuilder\n      .flexibleConnectedTo(button)\n      .withFlexibleDimensions(true)\n      .withViewportMargin(10)\n      .withGrowAfterOpen(true)\n      .withPush(true)\n      .withPositions([{\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n      }]);\n    this.overlayRef = this.overlay.create({\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      panelClass: 'column-overlay',\n      positionStrategy,\n      scrollStrategy: this.scrollStrategy\n    });\n    const templatePortal = new TemplatePortal(this.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n\n    this.overlayRef.backdropClick().subscribe(() => {\n\n      this.overlayRef.dispose();\n    });\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this._tableData.columns, event.previousIndex, event.currentIndex);\n    this._tableData.displayedColumns = this._tableData.columns.filter(c => c.isActive).map(c => c.id);\n    this._tableData.storeTableSettings();\n  }\n\n  toggle() {\n    this._tableData.displayedColumns = this._tableData.columns.filter(c => {\n      if (!c.isActive) {\n        this.sort = this.sort.filter(s => s.id !== c.id);\n      }\n\n      return c.isActive;\n    }).map(c => c.id);\n    this.updateSort();\n    if (this.closeDialogOnChoice) {\n      this.overlayRef.dispose();\n    }\n  }\n\n  dropSort(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.sort, event.previousIndex, event.currentIndex);\n    this.updateSort();\n  }\n\n  getSort(): { id: string, name: string, direction: string }[] {\n    const sorting: { id: string, name: string, direction: string }[] = [];\n    for (let i = 0; i < this._tableData.sortParams.length; i++) {\n      sorting.push({\n        id: this._tableData.sortParams[i],\n        name: this._tableData.columns.find(c => c.id === this._tableData.sortParams[i])!.name,\n        direction: this._tableData.sortDirs[i]\n      });\n    }\n    return sorting;\n  }\n\n  remove(id: string) {\n    this.sort = this.sort.filter(v => v.id !== id);\n    this.updateSort();\n  }\n\n  updateDirection(id: string) {\n    const i = this.sort.findIndex(v => v.id === id);\n    if (this.sort[i].direction === 'asc') {\n      this.sort[i].direction = 'desc';\n    } else {\n      this.sort[i].direction = 'asc';\n    }\n    this.updateSort();\n  }\n\n  private updateSort() {\n    this._tableData.sortParams = this.sort.map(v => v.id);\n    this._tableData.sortDirs = this.sort.map(v => v.direction);\n    this._tableData.updateSortHeaders();\n  }\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { MatMultiSort } from './mat-multi-sort.directive';\nimport { MatMultiSortHeaderComponent } from './mat-multi-sort-header/mat-multi-sort-header.component';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { FormsModule } from '@angular/forms';\nimport { MatMultiSortTableSettingsComponent } from './mat-multi-sort-table-settings/mat-multi-sort-table-settings.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n\n@NgModule({\n  declarations: [\n    MatMultiSortHeaderComponent,\n    MatMultiSort,\n    MatMultiSortTableSettingsComponent,\n  ],\n  exports: [\n    MatMultiSortHeaderComponent,\n    MatMultiSort,\n    MatMultiSortTableSettingsComponent\n  ],\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    MatDividerModule,\n    DragDropModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatButtonModule,\n    FormsModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatDialogModule\n  ]\n})\nexport class MatMultiSortModule {\n}\n","export class Settings {\n    private _columns: Array<{ id: string, name: string, isActive?: boolean }>;\n    private _sortParams: string[];\n    private _sortDirs: string[];\n    private _key: string;\n\n    constructor(key: string) {\n        this._key = key;\n        this._columns = [];\n        this._sortParams = [];\n        this._sortDirs = [];\n    }\n\n    public load() {\n        const value = JSON.parse(localStorage.getItem(this._key)!);\n        if (value) {\n            this._columns = value._columns || [];\n            this._sortDirs = value._sortDirs || [];\n            this._sortParams = value._sortParams || [];\n        }\n    }\n\n    public save(): void {\n        const settingsString = JSON.stringify(this);\n        localStorage.setItem(this._key, settingsString);\n    }\n\n    public get columns(): Array<{ id: string, name: string, isActive?: boolean }> {\n        return this._columns;\n    }\n\n    public get sortParams(): string[] {\n        return this._sortParams;\n    }\n\n    public get sortDirs(): string[] {\n        return this._sortDirs;\n    }\n\n    public get key(): String {\n        return this._key;\n    }\n\n    public set columns(columns: Array<{ id: string, name: string, isActive?: boolean }>) {\n        this._columns = columns;\n    }\n\n    public set sortParams(sortParams: string[]) {\n        this._sortParams = sortParams;\n    }\n\n    public set sortDirs(sortDirs: string[]) {\n        this._sortDirs = sortDirs;\n    }\n}\n","import { Subject, BehaviorSubject, delay, filter, tap } from 'rxjs';\nimport { MatMultiSortTableDataSource } from './mat-multi-sort-data-source';\nimport { SortDirection } from '@angular/material/sort';\nimport { Settings } from './utils';\nimport { PageEvent } from '@angular/material/paginator';\n\nexport class TableData<T> {\n    private _dataSource!: MatMultiSortTableDataSource<T>;\n    private readonly _columns: BehaviorSubject<{ id: string, name: string, isActive?: boolean }[]>;\n    private _displayedColumns: string[];\n    pageSize!: number;\n    pageIndex!: number;\n    private _pageSizeOptions: number[];\n    private _totalElements!: number;\n    private _sortParams: string[];\n    private _sortDirs: string[];\n    private _key!: string;\n\n    private _nextObservable: Subject<void> = new Subject<void>();\n    private _previousObservable: Subject<void> = new Subject<void>();\n    private _sizeObservable: Subject<void> = new Subject<void>();\n    private _sortObservable: Subject<void> = new Subject<void>();\n    private _displayedSortDirs?: string[]\n    private _displayedSortParams?: string[]\n\n    private _sortHeadersObservable: Subject<string[]> = new Subject<string[]>();\n\n    // TODO refactor\n    constructor(columns: { id: string, name: string, isActive?: boolean }[],\n        options?: {\n            defaultSortParams?: string[],\n            defaultSortDirs?: string[],\n            pageSizeOptions?: number[],\n            totalElements?: number,\n            localStorageKey?: string\n        }) {\n        this._columns = new BehaviorSubject(columns.map(c => { if (c.isActive === undefined) { c.isActive = true; } return c; }));\n        this._displayedColumns = this._columns.value.filter(c => c.isActive).map(c => c.id);\n\n        if (options) {\n            if (options.pageSizeOptions && options.pageSizeOptions.length < 1) {\n                throw Error('Array of pageSizeOptions must contain at least one entry');\n            }\n\n            if (options.defaultSortParams) {\n                options.defaultSortParams.map(s => {\n                    if (!this._displayedColumns.includes(s)) {\n                        throw Error(`Provided sort parameter \"${s}\" is not a column.`);\n                    }\n                });\n            }\n\n            this._sortParams = options.defaultSortParams || [];\n            this._sortDirs = options.defaultSortDirs || [];\n\n            if (this._sortParams.length !== this._sortDirs.length) {\n                this._sortDirs = this._sortParams.map(() => 'asc');\n            }\n\n            this._totalElements = options.totalElements || 0;\n            this._pageSizeOptions = options.pageSizeOptions || [10, 20, 50, 100];\n            this._key = options.localStorageKey!;\n        } else {\n            this._pageSizeOptions = [10, 20, 50, 100];\n            this._sortParams = [];\n            this._sortDirs = [];\n        }\n        this.init();\n    }\n\n    public onSortEvent() {\n        this._sortParams = this._dataSource.sort['actives'];\n        this._sortDirs = this._dataSource.sort['directions'];\n        this._clientSideSort();\n        this._sortObservable.next();\n        this.storeTableSettings();\n    }\n\n    public onPaginationEvent($event: PageEvent) {\n        const tmpPageSize: number = this.pageSize;\n        this.pageSize = $event.pageSize;\n        this.pageIndex = $event.pageIndex;\n\n        if (tmpPageSize !== this.pageSize) {\n            this._sizeObservable.next();\n        } else if ($event.previousPageIndex && $event.previousPageIndex < $event.pageIndex) {\n            this._nextObservable.next();\n        } else if ($event.previousPageIndex && $event.previousPageIndex > $event.pageIndex) {\n            this._previousObservable.next();\n        }\n    }\n\n    public updateSortHeaders(): void {\n        // Dirty hack to display default sort column(s)\n        const temp = Object.assign([], this._displayedColumns);\n        this._sortHeadersObservable.next([]);\n        this._sortHeadersObservable.next(temp);\n        this._clientSideSort();\n        this._sortObservable.next();\n        this.storeTableSettings();1\n    }\n\n    // this fixes an infine loop of rerendering\n    private subscribeSortHeaders(): void {\n        this._sortHeadersObservable.pipe(\n            delay(0),\n            // ignore when there is no update in the sort (params or dirs)\n            filter(() => this._displayedSortDirs !== this.sortDirs && this._displayedSortParams !== this.sortParams),\n            tap((column) => {\n                // update the displayed sort when it is not the empty array\n                if(column.length > 0) {\n                    this._displayedSortDirs = this.sortDirs;\n                    this._displayedSortParams = this.sortParams;\n                }\n            })\n        ).subscribe(columns => this._displayedColumns = columns)\n    }\n\n    private init() {\n        this.subscribeSortHeaders();\n        if (this._key) {\n            const settings = new Settings(this._key);\n            settings.load();\n            if (this._isLocalStorageSettingsValid(settings)) {\n                this.columns = settings.columns;\n                this._sortDirs = settings.sortDirs;\n                this._sortParams = settings.sortParams;\n            } else {\n                console.warn(\"Stored tableSettings are invalid. Using default\");\n            }\n        }\n    }\n\n    private _clientSideSort() {\n        this._dataSource.orderData();\n    }\n\n    private _isLocalStorageSettingsValid(settings: Settings): boolean {\n        // check if number of columns matching\n        if (settings.columns.length !== this._columns.value.length) {\n            return false;\n        }\n\n        // check if columns are the same\n        for (var column of settings.columns) {\n            var match = this._columns.value.filter(c => c.id == column.id && c.name == column.name);\n            if (match === undefined) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public storeTableSettings(): void {\n        console.log(\"Store\")\n        if (this._key) {\n            const settings: Settings = new Settings(this._key);\n            settings.columns = this._columns.value;\n            settings.sortParams = this._sortParams;\n            settings.sortDirs = this._sortDirs;\n            settings.save();\n        }\n    }\n\n    public set totalElements(totalElements: number) {\n        this._totalElements = totalElements;\n    }\n\n    public get totalElements(): number {\n        return this._totalElements;\n    }\n\n    public set displayedColumns(displayedColumns: string[]) {\n        this._displayedColumns = displayedColumns;\n        this._columns.next(this._columns.value.map(c => {\n            if (this._displayedColumns.includes(c.id)) {\n                c.isActive = true;\n            } else c.isActive = false;\n            return c;\n        }));\n    }\n\n    public get displayedColumns(): string[] {\n        return this._displayedColumns;\n    }\n\n    public set dataSource(dataSource: MatMultiSortTableDataSource<T>) {\n        this._dataSource = dataSource;\n        if (this._sortParams.length > 0) {\n            this._dataSource.sort.actives = this._sortParams;\n            this._dataSource.sort.directions = this._sortDirs.map(v => v as SortDirection);\n            this.updateSortHeaders();\n        }\n    }\n\n    public get dataSource(): MatMultiSortTableDataSource<T> {\n        return this._dataSource;\n    }\n\n    public set data(data: T[]) {\n        this._dataSource.data = data;\n        this._clientSideSort();\n    }\n\n    public set columns(v: { id: string, name: string, isActive?: boolean }[]) {\n        this._columns.next(v.map(c => { if (c.isActive === undefined) { c.isActive = true; } return c; }));\n    }\n\n    public onColumnsChange(): BehaviorSubject<{ id: string, name: string, isActive?: boolean }[]> {\n        return this._columns;\n    }\n\n    public updateColumnNames(v: { id: string, name: string }[]) {\n        const dict: { [key: string]: any } = {};\n        v.forEach(c => dict[c.id] = c.name);\n        this._columns.next(this._columns.value.map(c => { c.name = dict[c.id] || c.name; return c; }));\n    }\n\n    public get nextObservable(): Subject<any> {\n        return this._nextObservable;\n    }\n\n    public get previousObservable(): Subject<any> {\n        return this._previousObservable;\n    }\n\n    public get sizeObservable(): Subject<any> {\n        return this._sizeObservable;\n    }\n\n    public get sortObservable(): Subject<any> {\n        return this._sortObservable;\n    }\n\n    public get sortParams(): string[] {\n        return this._sortParams;\n    }\n\n    public get sortDirs(): string[] {\n        return this._sortDirs;\n    }\n\n    public get columns(): { id: string, name: string, isActive?: boolean }[] {\n        return this._columns.value;\n    }\n\n    public get pageSizeOptions(): number[] {\n        return this._pageSizeOptions;\n    }\n\n    public set sortParams(v: string[]) {\n        this._sortParams = v;\n        this._dataSource.sort.actives = this._sortParams;\n    }\n\n    public set sortDirs(v: string[]) {\n        this._sortDirs = v;\n        this._dataSource.sort.directions = this._sortDirs.map(elem => elem as SortDirection);\n    }\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject } from 'rxjs';\nimport { MatMultiSort } from './mat-multi-sort.directive';\n\nexport class MatMultiSortTableDataSource<T> extends DataSource<T> {\n    private _data: BehaviorSubject<T[]> = new BehaviorSubject<T[]>([]);\n    private clientSideSorting;\n    sort: MatMultiSort;\n\n    constructor(sort: MatMultiSort, clientSideSorting = false) {\n        super();\n        this.sort = sort;\n        this.clientSideSorting = clientSideSorting;\n    }\n\n    public set data(data: T[]) {\n        this._data.next(data);\n    }\n\n    public get data(): T[] {\n        return this._data.value;\n    }\n\n    connect(): BehaviorSubject<T[]> {\n        return this._data;\n    }\n\n    disconnect(): void {\n        this._data.complete();\n    }\n\n    orderData() {\n        this._data.next(this.sortData(this._data.value, this.sort.actives, this.sort.directions));\n    }\n\n    sortData(data: T[], actives: string[], directions: string[]): T[] {\n        const _data = Object.assign(new Array<T>(), data);\n        if (this.clientSideSorting) {\n            return _data.sort((i1, i2) => {\n                return this._sortData(i1, i2, actives, directions);\n            });\n        }\n        return _data;\n    }\n\n    _sortData(d1: T, d2: T, params: string[], dirs: string[]): number {\n        // @ts-ignore -- need a typesafe way to express these accessor operations, ts-ignore could be a solution\n        // if there's not a suitable solution offered by typescript\n        if (d1[params[0]] > d2[params[0]]) {\n            return dirs[0] === 'asc' ? 1 : -1;\n        // @ts-ignore\n        } else if (d1[params[0]] < d2[params[0]]) {\n            return dirs[0] === 'asc' ? -1 : 1;\n        } else {\n            if (params.length > 1) {\n                params = params.slice(1, params.length);\n                dirs = dirs.slice(1, dirs.length);\n                return this._sortData(d1, d2, params, dirs);\n            } else {\n                return 0;\n            }\n        }\n    }\n}\n","\n/*\n * Public API Surface of mat-multi-sort\n */\n\nexport * from './lib/mat-multi-sort.directive';\nexport * from './lib/mat-multi-sort-header/mat-multi-sort-header.component';\nexport * from './lib/mat-multi-sort-table-settings/mat-multi-sort-table-settings.component';\nexport * from './lib/mat-multi-sort.module';\nexport * from './lib/table-data';\nexport * from './lib/mat-multi-sort-data-source';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i4","i1"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOM,MAAO,YAAa,SAAQ,OAAO,CAAA;AAJzC,IAAA,WAAA,GAAA;;QAME,IAAK,CAAA,KAAA,GAAG,KAAuB,CAAC;QAEhC,IAAO,CAAA,OAAA,GAAa,EAAE,CAAC;QACvB,IAAU,CAAA,UAAA,GAAoB,EAAE,CAAC;AAqClC,KAAA;IAnCC,QAAQ,GAAA;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;KAClB;AAED,IAAA,IAAI,CAAC,QAAqB,EAAA;AACxB,QAAA,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;AACnC,QAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtB;AAED,IAAA,mBAAmB,CAAC,QAAqB,EAAA;AACvC,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,IAAI,QAAQ,KAAK,QAAQ,CAAC,EAAE,CAAC,CAAC;AAEvE,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC3B,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;AACrF,gBAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnE,aAAA;AAAM,iBAAA;gBACL,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9B,aAAA;AACF,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;AACpE,SAAA;KACF;AAED,IAAA,QAAQ,CAAC,QAAqB,EAAA;AAC5B,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,IAAI,QAAQ,KAAK,QAAQ,CAAC,EAAE,CAAC,CAAC;AACvE,QAAA,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;KACf;AAED,IAAA,eAAe,CAAC,QAAqB,EAAA;AACnC,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,IAAI,QAAQ,KAAK,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;KAC7E;AAxCU,IAAA,SAAA,IAAA,CAAA,IAAA,iBAAA,CAAA,MAAA,EAAA,IAAA,yBAAA,CAAA,CAAA,OAAA,SAAA,oBAAA,CAAA,CAAA,EAAA,EAAA,OAAA,CAAA,yBAAA,KAAA,yBAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,YAAY,SAAZ,YAAY,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,EAAA;oEAAZ,YAAY,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,cAAA,EAAA,EAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;iFAAZ,YAAY,EAAA,CAAA;cAJxB,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,gBAAgB;AAC1B,gBAAA,QAAQ,EAAE,cAAc;AACzB,aAAA,CAAA;;;;;;ICGC,EAMgE,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;AAD3D,IAAA,EAAA,CAAA,UAAA,CAAA,sBAAA,EAAA,SAAA,uFAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAA,MAAA,CAAA,0BAAA,GAAqD,IAAI,CAAA,CAAA,EAAA,CAAC,CACN,qBAAA,EAAA,SAAA,sFAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAA,MAAA,CAAA,0BAAA,GAAA,KAAK,CADC,CAAA,EAAA,CAAA,CAAA;IAE7D,EAAwC,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;IACxC,EAAgF,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;AAC9E,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAA2F,aAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;AAG7F,IAAA,EAAA,CAAA,YAAA,EAAM,EAAA,CAAA;;;AAVH,IAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,MAAA,CAAA,kBAAA,EAAA,CAAsC,+CAAA,CAAA,gBAAA,EAAA,MAAA,CAAA,uBAAA,EAAA,CAAA,CAAA;IAMF,EAAwC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAxC,EAAwC,CAAA,UAAA,CAAA,YAAA,EAAA,MAAA,CAAA,uBAAA,EAAA,CAAA,CAAA;IACnC,EAA0C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA1C,EAA0C,CAAA,UAAA,CAAA,cAAA,EAAA,MAAA,CAAA,uBAAA,EAAA,CAAA,CAAA;IACzC,EAA2C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA3C,EAA2C,CAAA,UAAA,CAAA,eAAA,EAAA,MAAA,CAAA,uBAAA,EAAA,CAAA,CAAA;;;IAI1F,EAAyB,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA;IAAA,EAAa,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAM,CAAA,YAAA,EAAA,CAAA;;;IAAnB,EAAa,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAb,EAAa,CAAA,iBAAA,CAAA,MAAA,CAAA,OAAA,EAAA,CAAA,CAAA;;;ACclC,MAAO,2BAA4B,SAAQ,aAAa,CAAA;IAI5D,WAAmB,CAAA,KAAwB,EACzC,iBAAoC,EACjB,KAAmB,EACkB,UAAoC,EAC5F,aAA2B,EAC3B,WAAoC,EAAA;AACpC,QAAA,KAAK,CAAC,KAAK,EAAE,iBAAiB,EAAE,KAAK,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC;QAN9D,IAAK,CAAA,KAAA,GAAL,KAAK,CAAmB;QAEtB,IAAK,CAAA,KAAA,GAAL,KAAK,CAAc;QACkB,IAAU,CAAA,UAAA,GAAV,UAAU,CAA0B;QAN9F,IAAK,CAAA,KAAA,GAAG,KAAuB,CAAC;KAU/B;AAKD,IAAA,yBAAyB,CAAC,OAAyB,EAAA;AACjD,QAAA,KAAK,CAAC,wBAAwB,CAAC,OAAkB,CAAC,CAAC;KACpD;IAED,YAAY,GAAA;QACV,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC/C,KAAK,CAAC,YAAY,EAAE,CAAC;KACtB;IAED,SAAS,GAAA;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,IAAI,QAAQ,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;KAC5E;IAED,OAAO,GAAA;QACL,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,IAAI,QAAQ,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;KAC3E;IAED,qBAAqB,GAAA;AACnB,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAChD;IAGD,qBAAqB,GAAA;AACnB,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;AACrB,YAAA,OAAO,MAAM,CAAC;AACf,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,gBAAgB,EAAE,KAAK,KAAK,GAAG,WAAW,GAAG,YAAY,CAAC;KACvE;IAED,YAAY,GAAA;QACV,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;KAChD;IAED,gBAAgB,GAAA;QACd,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,IAAI,SAAS,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3E,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC,SAAS,EAAE,GAAG,SAAS,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACxE;AAtDU,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,SAAA,mCAAA,CAAA,CAAA,EAAA,EAAA,OAAA,KAAA,CAAA,IAAA,2BAA2B,sJAO5B,2BAA2B,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA;oEAP1B,2BAA2B,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,uBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,YAAA,EAAA,SAAA,wCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;sHAA3B,GAA0B,CAAA,yBAAA,CAAA,IAAI,CAAC,CAA/B,EAAA,CAAA,CAAA,WAAA,EAAA,SAAA,wDAAA,GAAA,EAAA,OAAA,GAAA,CAAA,yBAAA,CAA0B,IAAI,CAAC,CAAA,EAAA,CAAA,CAAA,YAAA,EAAA,SAAA,yDAAA,GAAA,EAAA,OAA/B,GAA0B,CAAA,yBAAA,CAAA,KAAK,CAAC,CAAA,EAAA,CAAA,CAAA;;;;;ADrC7C,YAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAEyE,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;YAGrE,EAAyB,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA;YAC3B,EAAM,CAAA,YAAA,EAAA,CAAA;AAGN,YAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,0CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAaM,CAAA,CAAA,EAAA,0CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;YAER,EAAM,CAAA,YAAA,EAAA,CAAA;;AAvBD,YAAA,EAAA,CAAA,WAAA,CAAA,wBAAA,EAAA,GAAA,CAAA,SAAA,EAAA,CAA4C,CAAA,iCAAA,EAAA,GAAA,CAAA,aAAA,IAAA,QAAA,CAAA,CAAA;YASzC,EAAoB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAApB,EAAoB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,YAAA,EAAA,CAAA,CAAA;YAapB,EAAiB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAAjB,EAAiB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,SAAA,EAAA,CAAA,CAAA;ACKX,SAAA,EAAA,EAAA,YAAA,EAAA,CAAAA,EAAA,CAAA,IAAA,CAAA,EAAA,MAAA,EAAA,CAAA,+pCAAA,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA;AACV,gBAAA,iBAAiB,CAAC,SAAS;AAC3B,gBAAA,iBAAiB,CAAC,WAAW;AAC7B,gBAAA,iBAAiB,CAAC,YAAY;AAC9B,gBAAA,iBAAiB,CAAC,YAAY;AAC9B,gBAAA,iBAAiB,CAAC,aAAa;AAC/B,gBAAA,iBAAiB,CAAC,aAAa;AAChC,aAAA,EAAA,EAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;iFAEU,2BAA2B,EAAA,CAAA;cAhBvC,SAAS;2BACE,yBAAyB,EAAA,QAAA,EACzB,oBAAoB,EAAA,aAAA,EAGf,iBAAiB,CAAC,IAAI,EACpB,eAAA,EAAA,uBAAuB,CAAC,MAAM,EACnC,UAAA,EAAA;AACV,oBAAA,iBAAiB,CAAC,SAAS;AAC3B,oBAAA,iBAAiB,CAAC,WAAW;AAC7B,oBAAA,iBAAiB,CAAC,YAAY;AAC9B,oBAAA,iBAAiB,CAAC,YAAY;AAC9B,oBAAA,iBAAiB,CAAC,aAAa;AAC/B,oBAAA,iBAAiB,CAAC,aAAa;AAChC,iBAAA,EAAA,QAAA,EAAA,8pCAAA,EAAA,MAAA,EAAA,CAAA,+pCAAA,CAAA,EAAA,CAAA;;sBAQE,QAAQ;;sBACR,MAAM;uBAAC,2BAA2B,CAAA;;sBAAG,QAAQ;yEALhB,EAAE,EAAA,CAAA;kBAAjC,KAAK;mBAAC,uBAAuB,CAAA;YAc9B,yBAAyB,EAAA,CAAA;kBAHxB,YAAY;mBAAC,YAAY,EAAE,CAAC,MAAM,CAAC,CAAA;;kBACnC,YAAY;mBAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAA;;kBAClC,YAAY;mBAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAA;YAuBrC,qBAAqB,EAAA,CAAA;kBADpB,WAAW;mBAAC,gBAAgB,CAAA;;kFArClB,2BAA2B,EAAA,EAAA,SAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,gEAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;;;;;IC/BxB,EAGe,CAAA,kBAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA;;;;AAFD,IAAA,EAAA,CAAA,UAAA,CAAA,kBAAA,EAAA,MAAA,CAAA,gBAAA,CAAqC,CAAA,yBAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAA,GAAA,EAAA,OAAA,CAAA,SAAA,EAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA;;;IAGnD,EAA+B,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA;IAC3B,EACA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAgD,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;IAC5C,EACJ,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,YAAA,EAAM,EAAA,CAAA;;;;IAHN,EACA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IADA,EACA,CAAA,kBAAA,CAAA,GAAA,EAAA,OAAA,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;IAAqB,EAA0B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA1B,EAA0B,CAAA,UAAA,CAAA,YAAA,EAAA,MAAA,CAAA,WAAA,CAAA,CAAA;IAC3C,EACJ,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IADI,EACJ,CAAA,kBAAA,CAAA,GAAA,EAAA,OAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA;;;;IAVR,EACuC,CAAA,cAAA,CAAA,CAAA,EAAA,UAAA,EAAA,CAAA,CAAA,CAAA;IADuB,EAAW,CAAA,UAAA,CAAA,SAAA,EAAA,SAAA,kFAAA,GAAA,EAAA,MAAA,WAAA,GAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,WAAA,CAAA,SAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAA,yBAAe,CAAA,CAAA,EAAA,CAAC,sOAC5E,EAAA,CAAA,WAAA,CAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,EAAA,CAAwB,CAAA,CADoD,EAAA,CAAA,CAAA;AAErF,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,qEAAA,EAAA,CAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,CAGe,CAAA,CAAA,EAAA,4DAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;IAOf,EAAwB,CAAA,cAAA,CAAA,CAAA,EAAA,UAAA,EAAA,EAAA,CAAA,CAAA;IAAA,EAAM,CAAA,MAAA,CAAA,CAAA,EAAA,QAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,YAAA,EAAW,EAAA,CAAA;;;IAV1B,EAAsB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAtB,EAAsB,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,gBAAA,CAAA,CAAA;IAI/B,EAAuB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAvB,EAAuB,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,CAAA;;;;AAkBzC,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAA2E,CAAA,CAAA,EAAA,UAAA,CAAA,CAAA;IAC/D,EAAc,CAAA,MAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,CAAA;IAAA,EAAW,CAAA,YAAA,EAAA,CAAA;IACnC,EAAgE,CAAA,cAAA,CAAA,CAAA,EAAA,cAAA,EAAA,EAAA,CAAA,CAAA;AAAlD,IAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,qGAAA,CAAA,MAAA,EAAA,EAAA,MAAA,WAAA,GAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,UAAA,GAAA,WAAA,CAAA,SAAA,CAAA,CAAA,OAAa,4CAAuB,CAAP,EAAA,CAAA,CAAA,QAAA,EAAA,SAAA,8FAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAW,EAAA,CAAA,WAAA,CAAA,OAAA,CAAA,MAAA,EAAQ,CAAA,CAAnB,EAAA,CAAA,CAAA;IAAqB,EAAe,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,YAAA,EAAe,EAAA,CAAA;;;IAAhF,EAA6B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA7B,EAA6B,CAAA,UAAA,CAAA,SAAA,EAAA,UAAA,CAAA,QAAA,CAAA,CAAA;IAAqB,EAAe,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAf,EAAe,CAAA,iBAAA,CAAA,UAAA,CAAA,IAAA,CAAA,CAAA;;;;IAHnF,EAAyE,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;IAApC,EAAsB,CAAA,UAAA,CAAA,oBAAA,EAAA,SAAA,2FAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAA,OAAY,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAC,EAAA,CAAA,CAAA;IACtE,EAGM,CAAA,UAAA,CAAA,CAAA,EAAA,+DAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;IACR,EAAM,CAAA,YAAA,EAAA,CAAA;;;IAJwC,EAAqB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAArB,EAAqB,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,UAAA,CAAA,OAAA,CAAA,CAAA;;;MChBxD,kCAAkC,CAAA;IAoB7C,IACI,SAAS,CAAC,SAAyB,EAAA;AACrC,QAAA,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;KAC7B;AAGD,IAAA,WAAA,CAAoB,OAAgB,EAAU,gBAAkC,EAAU,aAA4B,EAAA;QAAlG,IAAO,CAAA,OAAA,GAAP,OAAO,CAAS;QAAU,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAAU,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAxBtH,IAAI,CAAA,IAAA,GAAsD,EAAE,CAAC;QAU7D,IAAW,CAAA,WAAA,GAAW,EAAE,CAAC;QAGzB,IAAmB,CAAA,mBAAA,GAAG,IAAI,CAAC;QAG3B,IAAc,CAAA,cAAA,GAAmB,IAAI,mBAAmB,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;KAQoC;IAE3H,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;AAC3B,QAAA,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAC3E,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;KAC/E;IAED,UAAU,GAAA;AACR,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;QAC5C,MAAM,uBAAuB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACxD,MAAM,gBAAgB,GAAG,uBAAuB;aAC7C,mBAAmB,CAAC,MAAM,CAAC;aAC3B,sBAAsB,CAAC,IAAI,CAAC;aAC5B,kBAAkB,CAAC,EAAE,CAAC;aACtB,iBAAiB,CAAC,IAAI,CAAC;aACvB,QAAQ,CAAC,IAAI,CAAC;AACd,aAAA,aAAa,CAAC,CAAC;AACd,gBAAA,OAAO,EAAE,KAAK;AACd,gBAAA,OAAO,EAAE,QAAQ;AACjB,gBAAA,QAAQ,EAAE,KAAK;AACf,gBAAA,QAAQ,EAAE,KAAK;AAChB,aAAA,CAAC,CAAC,CAAC;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AACpC,YAAA,WAAW,EAAE,IAAI;AACjB,YAAA,aAAa,EAAE,kCAAkC;AACjD,YAAA,UAAU,EAAE,gBAAgB;YAC5B,gBAAgB;YAChB,cAAc,EAAE,IAAI,CAAC,cAAc;AACpC,SAAA,CAAC,CAAC;AACH,QAAA,MAAM,cAAc,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACnF,QAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAEvC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,MAAK;AAE7C,YAAA,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;AAC5B,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,IAAI,CAAC,KAA4B,EAAA;AAC/B,QAAA,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;AAClF,QAAA,IAAI,CAAC,UAAU,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AAClG,QAAA,IAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE,CAAC;KACtC;IAED,MAAM,GAAA;AACJ,QAAA,IAAI,CAAC,UAAU,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAG;AACpE,YAAA,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAClD,aAAA;YAED,OAAO,CAAC,CAAC,QAAQ,CAAC;AACpB,SAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;QAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAC5B,YAAA,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;AAC3B,SAAA;KACF;AAED,IAAA,QAAQ,CAAC,KAA4B,EAAA;AACnC,QAAA,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;QACpE,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAED,OAAO,GAAA;QACL,MAAM,OAAO,GAAsD,EAAE,CAAC;AACtE,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1D,OAAO,CAAC,IAAI,CAAC;gBACX,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;gBACjC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAE,CAAC,IAAI;gBACrF,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACvC,aAAA,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,OAAO,OAAO,CAAC;KAChB;AAED,IAAA,MAAM,CAAC,EAAU,EAAA;AACf,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;AAED,IAAA,eAAe,CAAC,EAAU,EAAA;AACxB,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAChD,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,KAAK,EAAE;YACpC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC;AACjC,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;AAChC,SAAA;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAEO,UAAU,GAAA;AAChB,QAAA,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AACtD,QAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC;AAC3D,QAAA,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;KACrC;mGAzHU,kCAAkC,EAAA,EAAA,CAAA,iBAAA,CAAAC,IAAA,CAAA,OAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAA,IAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA;oEAAlC,kCAAkC,EAAA,SAAA,EAAA,CAAA,CAAA,+BAAA,CAAA,CAAA,EAAA,cAAA,EAAA,SAAA,iDAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;;;;;;ADZ/C,YAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAA4B,aAAA,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA,CAAA,CAAA;AAGhB,YAAA,EAAA,CAAA,UAAA,CAAA,oBAAA,EAAA,SAAA,uFAAA,CAAA,MAAA,EAAA,EAAA,OAAsB,oBAAgB,CAAC,EAAA,CAAA,CAAA;YACvC,EAaW,CAAA,UAAA,CAAA,CAAA,EAAA,sDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,CAAA,CAAA;AACf,YAAA,EAAA,CAAA,YAAA,EAAgB,EAAA,CAAA;YAEpB,EAAmC,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;YACnC,EAAsE,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AAAnD,YAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,gEAAA,GAAA,EAAA,OAAS,gBAAY,CAAC,EAAA,CAAA,CAAA;YACrC,EAAkC,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,CAAA,CAAA,CAAA;AACtC,YAAA,EAAA,CAAA,YAAA,EAAM,EAAA,CAAA;YAGV,EAOc,CAAA,UAAA,CAAA,CAAA,EAAA,yDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,sBAAA,CAAA,CAAA;;YA7B2C,EAAO,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAAP,EAAO,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,IAAA,CAAA,CAAA;;;iFCQnD,kCAAkC,EAAA,CAAA;cAL9C,SAAS;2BACE,+BAA+B,EAAA,QAAA,EAAA,glDAAA,EAAA,MAAA,EAAA,CAAA,87CAAA,CAAA,EAAA,CAAA;uGASW,WAAW,EAAA,CAAA;kBAA9D,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,aAAa,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;YAEf,SAAS,EAAA,CAAA;kBAAnC,SAAS;mBAAC,cAAc,CAAA;YAEyB,gBAAgB,EAAA,CAAA;kBAAjE,YAAY;AAAC,YAAA,IAAA,EAAA,CAAA,eAAe,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAA;YAGhD,WAAW,EAAA,CAAA;kBADV,KAAK;YAIN,mBAAmB,EAAA,CAAA;kBADlB,KAAK;YAIN,cAAc,EAAA,CAAA;kBADb,KAAK;YAIF,SAAS,EAAA,CAAA;kBADZ,KAAK;;kFApBK,kCAAkC,EAAA,EAAA,SAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,gFAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCgClC,kBAAkB,CAAA;mFAAlB,kBAAkB,GAAA,CAAA,EAAA,CAAA,EAAA;mEAAlB,kBAAkB,EAAA,CAAA,CAAA,EAAA;uEAd3B,YAAY;YACZ,eAAe;YACf,gBAAgB;YAChB,cAAc;YACd,aAAa;YACb,iBAAiB;YACjB,aAAa;YACb,eAAe;YACf,WAAW;YACX,cAAc;YACd,gBAAgB;YAChB,eAAe,CAAA,EAAA,CAAA,CAAA,EAAA;;iFAGN,kBAAkB,EAAA,CAAA;cA1B9B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;oBACZ,2BAA2B;oBAC3B,YAAY;oBACZ,kCAAkC;AACnC,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,2BAA2B;oBAC3B,YAAY;oBACZ,kCAAkC;AACnC,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,YAAY;oBACZ,eAAe;oBACf,gBAAgB;oBAChB,cAAc;oBACd,aAAa;oBACb,iBAAiB;oBACjB,aAAa;oBACb,eAAe;oBACf,WAAW;oBACX,cAAc;oBACd,gBAAgB;oBAChB,eAAe;AAChB,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,kBAAkB,mBAxB3B,2BAA2B;QAC3B,YAAY;AACZ,QAAA,kCAAkC,aAQlC,YAAY;QACZ,eAAe;QACf,gBAAgB;QAChB,cAAc;QACd,aAAa;QACb,iBAAiB;QACjB,aAAa;QACb,eAAe;QACf,WAAW;QACX,cAAc;QACd,gBAAgB;AAChB,QAAA,eAAe,aAhBf,2BAA2B;QAC3B,YAAY;QACZ,kCAAkC,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MC3BzB,QAAQ,CAAA;AAMjB,IAAA,WAAA,CAAY,GAAW,EAAA;AACnB,QAAA,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;AAChB,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,QAAA,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;IAEM,IAAI,GAAA;AACP,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAE,CAAC,CAAC;AAC3D,QAAA,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,IAAI,EAAE,CAAC;YACrC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC;YACvC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,IAAI,EAAE,CAAC;AAC9C,SAAA;KACJ;IAEM,IAAI,GAAA;QACP,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC5C,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;KACnD;AAED,IAAA,IAAW,OAAO,GAAA;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;AAED,IAAA,IAAW,UAAU,GAAA;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;AAED,IAAA,IAAW,QAAQ,GAAA;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;AAED,IAAA,IAAW,GAAG,GAAA;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;IAED,IAAW,OAAO,CAAC,OAAgE,EAAA;AAC/E,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;KAC3B;IAED,IAAW,UAAU,CAAC,UAAoB,EAAA;AACtC,QAAA,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;KACjC;IAED,IAAW,QAAQ,CAAC,QAAkB,EAAA;AAClC,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;KAC7B;AACJ;;MChDY,SAAS,CAAA;;IAsBlB,WAAY,CAAA,OAA2D,EACnE,OAMC,EAAA;AAjBG,QAAA,IAAA,CAAA,eAAe,GAAkB,IAAI,OAAO,EAAQ,CAAC;AACrD,QAAA,IAAA,CAAA,mBAAmB,GAAkB,IAAI,OAAO,EAAQ,CAAC;AACzD,QAAA,IAAA,CAAA,eAAe,GAAkB,IAAI,OAAO,EAAQ,CAAC;AACrD,QAAA,IAAA,CAAA,eAAe,GAAkB,IAAI,OAAO,EAAQ,CAAC;AAIrD,QAAA,IAAA,CAAA,sBAAsB,GAAsB,IAAI,OAAO,EAAY,CAAC;QAWxE,IAAI,CAAC,QAAQ,GAAG,IAAI,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,QAAQ,KAAK,SAAS,EAAE;AAAE,YAAA,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;AAAE,SAAA,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1H,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AAEpF,QAAA,IAAI,OAAO,EAAE;YACT,IAAI,OAAO,CAAC,eAAe,IAAI,OAAO,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/D,gBAAA,MAAM,KAAK,CAAC,0DAA0D,CAAC,CAAC;AAC3E,aAAA;YAED,IAAI,OAAO,CAAC,iBAAiB,EAAE;AAC3B,gBAAA,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAG;oBAC9B,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;AACrC,wBAAA,MAAM,KAAK,CAAC,CAAA,yBAAA,EAA4B,CAAC,CAAA,kBAAA,CAAoB,CAAC,CAAC;AAClE,qBAAA;AACL,iBAAC,CAAC,CAAC;AACN,aAAA;YAED,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,iBAAiB,IAAI,EAAE,CAAC;YACnD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,eAAe,IAAI,EAAE,CAAC;YAE/C,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;AACnD,gBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC;AACtD,aAAA;YAED,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,aAAa,IAAI,CAAC,CAAC;AACjD,YAAA,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,eAAe,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AACrE,YAAA,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,eAAgB,CAAC;AACxC,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,gBAAgB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AAC1C,YAAA,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AACtB,YAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACvB,SAAA;QACD,IAAI,CAAC,IAAI,EAAE,CAAC;KACf;IAEM,WAAW,GAAA;QACd,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACrD,IAAI,CAAC,eAAe,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7B;AAEM,IAAA,iBAAiB,CAAC,MAAiB,EAAA;AACtC,QAAA,MAAM,WAAW,GAAW,IAAI,CAAC,QAAQ,CAAC;AAC1C,QAAA,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAChC,QAAA,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;AAElC,QAAA,IAAI,WAAW,KAAK,IAAI,CAAC,QAAQ,EAAE;AAC/B,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;AAC/B,SAAA;aAAM,IAAI,MAAM,CAAC,iBAAiB,IAAI,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC,SAAS,EAAE;AAChF,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;AAC/B,SAAA;aAAM,IAAI,MAAM,CAAC,iBAAiB,IAAI,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC,SAAS,EAAE;AAChF,YAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;AACnC,SAAA;KACJ;IAEM,iBAAiB,GAAA;;AAEpB,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACvD,QAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,eAAe,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAAA,QAAA,CAAC,CAAA;KAC9B;;IAGO,oBAAoB,GAAA;QACxB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAC5B,KAAK,CAAC,CAAC,CAAC;;QAER,MAAM,CAAC,MAAM,IAAI,CAAC,kBAAkB,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,oBAAoB,KAAK,IAAI,CAAC,UAAU,CAAC,EACxG,GAAG,CAAC,CAAC,MAAM,KAAI;;AAEX,YAAA,IAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AAClB,gBAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC;AACxC,gBAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC;AAC/C,aAAA;AACL,SAAC,CAAC,CACL,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC,CAAA;KAC3D;IAEO,IAAI,GAAA;QACR,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzC,QAAQ,CAAC,IAAI,EAAE,CAAC;AAChB,YAAA,IAAI,IAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC,EAAE;AAC7C,gBAAA,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;AAChC,gBAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACnC,gBAAA,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,UAAU,CAAC;AAC1C,aAAA;AAAM,iBAAA;AACH,gBAAA,OAAO,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAC;AACnE,aAAA;AACJ,SAAA;KACJ;IAEO,eAAe,GAAA;AACnB,QAAA,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;KAChC;AAEO,IAAA,4BAA4B,CAAC,QAAkB,EAAA;;AAEnD,QAAA,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE;AACxD,YAAA,OAAO,KAAK,CAAC;AAChB,SAAA;;AAGD,QAAA,KAAK,IAAI,MAAM,IAAI,QAAQ,CAAC,OAAO,EAAE;AACjC,YAAA,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;YACxF,IAAI,KAAK,KAAK,SAAS,EAAE;AACrB,gBAAA,OAAO,KAAK,CAAC;AAChB,aAAA;AACJ,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACf;IAEM,kBAAkB,GAAA;AACrB,QAAA,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;QACpB,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,MAAM,QAAQ,GAAa,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnD,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AACvC,YAAA,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;AACvC,YAAA,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;YACnC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACnB,SAAA;KACJ;IAED,IAAW,aAAa,CAAC,aAAqB,EAAA;AAC1C,QAAA,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;KACvC;AAED,IAAA,IAAW,aAAa,GAAA;QACpB,OAAO,IAAI,CAAC,cAAc,CAAC;KAC9B;IAED,IAAW,gBAAgB,CAAC,gBAA0B,EAAA;AAClD,QAAA,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;AAC1C,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAG;YAC3C,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;AACvC,gBAAA,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,aAAA;;AAAM,gBAAA,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC1B,YAAA,OAAO,CAAC,CAAC;SACZ,CAAC,CAAC,CAAC;KACP;AAED,IAAA,IAAW,gBAAgB,GAAA;QACvB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KACjC;IAED,IAAW,UAAU,CAAC,UAA0C,EAAA;AAC5D,QAAA,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AAC9B,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;AACjD,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAkB,CAAC,CAAC;YAC/E,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC5B,SAAA;KACJ;AAED,IAAA,IAAW,UAAU,GAAA;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;IAED,IAAW,IAAI,CAAC,IAAS,EAAA;AACrB,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;KAC1B;IAED,IAAW,OAAO,CAAC,CAAqD,EAAA;AACpE,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,QAAQ,KAAK,SAAS,EAAE;AAAE,YAAA,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;AAAE,SAAA,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACtG;IAEM,eAAe,GAAA;QAClB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;AAEM,IAAA,iBAAiB,CAAC,CAAiC,EAAA;QACtD,MAAM,IAAI,GAA2B,EAAE,CAAC;AACxC,QAAA,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AACpC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAG,EAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAClG;AAED,IAAA,IAAW,cAAc,GAAA;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC/B;AAED,IAAA,IAAW,kBAAkB,GAAA;QACzB,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACnC;AAED,IAAA,IAAW,cAAc,GAAA;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC/B;AAED,IAAA,IAAW,cAAc,GAAA;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC/B;AAED,IAAA,IAAW,UAAU,GAAA;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;AAED,IAAA,IAAW,QAAQ,GAAA;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;AAED,IAAA,IAAW,OAAO,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;KAC9B;AAED,IAAA,IAAW,eAAe,GAAA;QACtB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAChC;IAED,IAAW,UAAU,CAAC,CAAW,EAAA;AAC7B,QAAA,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;KACpD;IAED,IAAW,QAAQ,CAAC,CAAW,EAAA;AAC3B,QAAA,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AACnB,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,IAAI,IAAqB,CAAC,CAAC;KACxF;AACJ;;AC/PK,MAAO,2BAA+B,SAAQ,UAAa,CAAA;AAK7D,IAAA,WAAA,CAAY,IAAkB,EAAE,iBAAiB,GAAG,KAAK,EAAA;AACrD,QAAA,KAAK,EAAE,CAAC;AALJ,QAAA,IAAA,CAAA,KAAK,GAAyB,IAAI,eAAe,CAAM,EAAE,CAAC,CAAC;AAM/D,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;KAC9C;IAED,IAAW,IAAI,CAAC,IAAS,EAAA;AACrB,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACzB;AAED,IAAA,IAAW,IAAI,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;KAC3B;IAED,OAAO,GAAA;QACH,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;IAED,UAAU,GAAA;AACN,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;KACzB;IAED,SAAS,GAAA;AACL,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;KAC7F;AAED,IAAA,QAAQ,CAAC,IAAS,EAAE,OAAiB,EAAE,UAAoB,EAAA;AACvD,QAAA,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,EAAK,EAAE,IAAI,CAAC,CAAC;QAClD,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,KAAI;AACzB,gBAAA,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;AACvD,aAAC,CAAC,CAAC;AACN,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KAChB;AAED,IAAA,SAAS,CAAC,EAAK,EAAE,EAAK,EAAE,MAAgB,EAAE,IAAc,EAAA;;;AAGpD,QAAA,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;AAC/B,YAAA,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;AAErC,SAAA;AAAM,aAAA,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;AACtC,YAAA,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACrC,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;gBACxC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AAClC,gBAAA,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AAC/C,aAAA;AAAM,iBAAA;AACH,gBAAA,OAAO,CAAC,CAAC;AACZ,aAAA;AACJ,SAAA;KACJ;AACJ;;AC9DD;;AAEG;;ACHH;;AAEG;;;;"}