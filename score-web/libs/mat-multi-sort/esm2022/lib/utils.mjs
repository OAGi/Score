export class Settings {
    constructor(key) {
        this._key = key;
        this._columns = [];
        this._sortParams = [];
        this._sortDirs = [];
    }
    load() {
        const value = JSON.parse(localStorage.getItem(this._key));
        if (value) {
            this._columns = value._columns || [];
            this._sortDirs = value._sortDirs || [];
            this._sortParams = value._sortParams || [];
        }
    }
    save() {
        const settingsString = JSON.stringify(this);
        localStorage.setItem(this._key, settingsString);
    }
    get columns() {
        return this._columns;
    }
    get sortParams() {
        return this._sortParams;
    }
    get sortDirs() {
        return this._sortDirs;
    }
    get key() {
        return this._key;
    }
    set columns(columns) {
        this._columns = columns;
    }
    set sortParams(sortParams) {
        this._sortParams = sortParams;
    }
    set sortDirs(sortDirs) {
        this._sortDirs = sortDirs;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9tYXQtbXVsdGktc29ydC9zcmMvbGliL3V0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sT0FBTyxRQUFRO0lBTWpCLFlBQVksR0FBVztRQUNuQixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQztRQUNoQixJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNuQixJQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRU0sSUFBSTtRQUNQLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFFLENBQUMsQ0FBQztRQUMzRCxJQUFJLEtBQUssRUFBRTtZQUNQLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDLFFBQVEsSUFBSSxFQUFFLENBQUM7WUFDckMsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQztZQUN2QyxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQyxXQUFXLElBQUksRUFBRSxDQUFDO1NBQzlDO0lBQ0wsQ0FBQztJQUVNLElBQUk7UUFDUCxNQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVDLFlBQVksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxjQUFjLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUQsSUFBVyxPQUFPO1FBQ2QsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxJQUFXLFVBQVU7UUFDakIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzVCLENBQUM7SUFFRCxJQUFXLFFBQVE7UUFDZixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDMUIsQ0FBQztJQUVELElBQVcsR0FBRztRQUNWLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNyQixDQUFDO0lBRUQsSUFBVyxPQUFPLENBQUMsT0FBZ0U7UUFDL0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUM7SUFDNUIsQ0FBQztJQUVELElBQVcsVUFBVSxDQUFDLFVBQW9CO1FBQ3RDLElBQUksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDO0lBQ2xDLENBQUM7SUFFRCxJQUFXLFFBQVEsQ0FBQyxRQUFrQjtRQUNsQyxJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQztJQUM5QixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgU2V0dGluZ3Mge1xuICAgIHByaXZhdGUgX2NvbHVtbnM6IEFycmF5PHsgaWQ6IHN0cmluZywgbmFtZTogc3RyaW5nLCBpc0FjdGl2ZT86IGJvb2xlYW4gfT47XG4gICAgcHJpdmF0ZSBfc29ydFBhcmFtczogc3RyaW5nW107XG4gICAgcHJpdmF0ZSBfc29ydERpcnM6IHN0cmluZ1tdO1xuICAgIHByaXZhdGUgX2tleTogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3Ioa2V5OiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5fa2V5ID0ga2V5O1xuICAgICAgICB0aGlzLl9jb2x1bW5zID0gW107XG4gICAgICAgIHRoaXMuX3NvcnRQYXJhbXMgPSBbXTtcbiAgICAgICAgdGhpcy5fc29ydERpcnMgPSBbXTtcbiAgICB9XG5cbiAgICBwdWJsaWMgbG9hZCgpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMuX2tleSkhKTtcbiAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICB0aGlzLl9jb2x1bW5zID0gdmFsdWUuX2NvbHVtbnMgfHwgW107XG4gICAgICAgICAgICB0aGlzLl9zb3J0RGlycyA9IHZhbHVlLl9zb3J0RGlycyB8fCBbXTtcbiAgICAgICAgICAgIHRoaXMuX3NvcnRQYXJhbXMgPSB2YWx1ZS5fc29ydFBhcmFtcyB8fCBbXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzYXZlKCk6IHZvaWQge1xuICAgICAgICBjb25zdCBzZXR0aW5nc1N0cmluZyA9IEpTT04uc3RyaW5naWZ5KHRoaXMpO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aGlzLl9rZXksIHNldHRpbmdzU3RyaW5nKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IGNvbHVtbnMoKTogQXJyYXk8eyBpZDogc3RyaW5nLCBuYW1lOiBzdHJpbmcsIGlzQWN0aXZlPzogYm9vbGVhbiB9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb2x1bW5zO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgc29ydFBhcmFtcygpOiBzdHJpbmdbXSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zb3J0UGFyYW1zO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgc29ydERpcnMoKTogc3RyaW5nW10ge1xuICAgICAgICByZXR1cm4gdGhpcy5fc29ydERpcnM7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBrZXkoKTogU3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2tleTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0IGNvbHVtbnMoY29sdW1uczogQXJyYXk8eyBpZDogc3RyaW5nLCBuYW1lOiBzdHJpbmcsIGlzQWN0aXZlPzogYm9vbGVhbiB9Pikge1xuICAgICAgICB0aGlzLl9jb2x1bW5zID0gY29sdW1ucztcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0IHNvcnRQYXJhbXMoc29ydFBhcmFtczogc3RyaW5nW10pIHtcbiAgICAgICAgdGhpcy5fc29ydFBhcmFtcyA9IHNvcnRQYXJhbXM7XG4gICAgfVxuXG4gICAgcHVibGljIHNldCBzb3J0RGlycyhzb3J0RGlyczogc3RyaW5nW10pIHtcbiAgICAgICAgdGhpcy5fc29ydERpcnMgPSBzb3J0RGlycztcbiAgICB9XG59XG4iXX0=