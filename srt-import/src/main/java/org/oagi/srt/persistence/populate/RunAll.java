package org.oagi.srt.persistence.populate;

import org.oagi.srt.ImportApplication;
import org.oagi.srt.repository.entity.*;
import org.springframework.boot.SpringApplication;
import org.springframework.context.ConfigurableApplicationContext;

import javax.persistence.EntityManager;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;

import static org.oagi.srt.persistence.populate.DataImportScriptPrinter.*;

public class RunAll {

    public static void main(String args[]) throws Exception {
        try (ConfigurableApplicationContext ctx = SpringApplication.run(ImportApplication.class, args)) {
            turnOn();
            try {
                printHeader();
                printSettings();

                P_1_1_PopulateCommonData p1 = ctx.getBean(P_1_1_PopulateCommonData.class);
                p1.run(ctx);

                PopulateModules populateModules = ctx.getBean(PopulateModules.class);
                populateModules.run(ctx);

                PopulateBlobContents populateBlobContents = ctx.getBean(PopulateBlobContents.class);
                populateBlobContents.run(ctx);

                P_1_2_PopulateCDTandCDTSC p2 = ctx.getBean(P_1_2_PopulateCDTandCDTSC.class);
                p2.run(ctx);

                P_1_3_PopulateAgencyIDList p3 = ctx.getBean(P_1_3_PopulateAgencyIDList.class);
                p3.run(ctx);

                P_1_4_PopulateCodeList p4 = ctx.getBean(P_1_4_PopulateCodeList.class);
                p4.run(ctx);

                P_1_5_PopulateDefaultAndUnqualifiedBDT p5 = ctx.getBean(P_1_5_PopulateDefaultAndUnqualifiedBDT.class);
                p5.run(ctx);

                P_1_6_PopulateDTFromMeta p6 = ctx.getBean(P_1_6_PopulateDTFromMeta.class);
                p6.run(ctx);

                P_1_7_PopulateQBDTInDT p7 = ctx.getBean(P_1_7_PopulateQBDTInDT.class);
                p7.run(ctx);

                P_1_8_1_PopulateAccAsccpBccAscc p8 = ctx.getBean(P_1_8_1_PopulateAccAsccpBccAscc.class);
                p8.run(ctx);

                P_1_8_2_PopulateOAGISType p8_2 = ctx.getBean(P_1_8_2_PopulateOAGISType.class);
                p8_2.run(ctx);

                EntityManager entityManager = ctx.getBean(EntityManager.class);
                printResetSequences(entityManager);
            } finally {
                turnOff();
            }
        }
    }

    private static void printHeader() {
        print("-- Generated by Semantic Refinement Tools Import Application");
        print("--   at:        " + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss ZZZ").format(new Date()));
        print("");
        print("");
        print("");
    }

    private static void printSettings() {
        print("SET DEFINE OFF;");
        print("");
    }

    private static void printResetSequences(EntityManager entityManager) {
        print("");
        print("");
        printTitle("Reset Sequences");

        resetSequence(entityManager, Arrays.asList(
                AggregateCoreComponent.class,
                AgencyIdList.class,
                AgencyIdListValue.class,
                User.class,
                AssociationCoreComponentProperty.class,
                AssociationCoreComponent.class,
                BasicCoreComponentProperty.class,
                BasicCoreComponent.class,
                BusinessDataTypePrimitiveRestriction.class,
                BusinessDataTypeSupplementaryComponentPrimitiveRestriction.class,
                BlobContent.class,
                CoreDataTypeAllowedPrimitive.class,
                CoreDataTypeAllowedPrimitiveExpressionTypeMap.class,
                CoreDataTypePrimitive.class,
                CoreDataTypeSupplementaryComponentAllowedPrimitive.class,
                CoreDataTypeSupplementaryComponentAllowedPrimitiveExpressionTypeMap.class,
                CodeList.class,
                CodeListValue.class,
                DataType.class,
                DataTypeSupplementaryComponent.class,
                ModuleDep.class,
                Module.class,
                Namespace.class,
                Release.class,
                XSDBuiltInType.class));

        print("");
        print("");
        print("COMMIT;");
        print("");
        print("SET DEFINE ON;");
        print("");
    }
}
